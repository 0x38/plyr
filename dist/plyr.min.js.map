{"version":3,"sources":["src/js/utils/is.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/i18n.js","src/js/utils/arrays.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/utils/loadImage.js","src/js/ui.js","src/js/listeners.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/source.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","isNullOrUndefined","isObject","Object","isString","String","isArray","Array","isNodeList","NodeList","isEmpty","length","keys","is","nullOrUndefined","object","number","Number","isNaN","string","boolean","function","Function","array","weakMap","WeakMap","nodeList","element","Element","textNode","Text","event","Event","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","URL","startsWith","hostname","e","empty","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","toggleListener","callback","toggle","arguments","undefined","_this","this","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","args","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","wrap","elements","wrapper","targets","from","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","filter","_ref","value","slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","hasAttribute","removeAttribute","toggleClass","force","map","method","classList","contains","hasClass","matches","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","querySelectorAll","includes","getElements","container","getElement","querySelector","setFocus","tabFocus","focus","config","classNames","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","find","style","range","browser","isIE","documentMode","isWebkit","documentElement","test","navigator","userAgent","isIPhone","platform","isIos","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","inputType","_inputType$split","mediaType","isHTML5","media","canPlayType","err","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","extend","player","set","_player$media","currentTime","paused","preload","readyState","src","play","load","quality","cancelRequests","blankVideo","debug","log","getDeep","path","reduce","obj","target","sources","shift","concat","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","i18n","{seektime}","seekTime","{title}","title","_ref2","dedupe","item","indexOf","Storage","classCallCheck","enabled","storage","store","localStorage","getItem","json","JSON","parse","setItem","stringify","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","Error","status","open","send","loadSprite","hasId","exists","getElementById","update","data","body","insertAdjacentElement","useStorage","cached","prefix","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","controls","getIconUrl","cors","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","pause","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","button","label","labelPressed","iconPressed","control","controlPressed","enumerable","pressed","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","bindMenuItemShortcuts","menuItem","which","preventDefault","stopPropagation","isRadioButton","showMenuPanel","nextElementSibling","firstElementChild","previousElementSibling","lastElementChild","createMenuItem","_this2","list","_ref$badge","_ref$checked","checked","aria-checked","flex","children","node","listeners","bind","currentTrack","speed","parseFloat","updateTimeDisplay","updateVolume","setRange","muted","updateProgress","_this3","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this4","tooltips","clientRect","getBoundingClientRect","visible","_toggle","width","pageX","left","timeUpdate","invert","invertTime","seeking","durationUpdate","Math","pow","hasDuration","displayDuration","toggleMenuButton","setting","updateSetting","pane","panels","default","getLabel","setQualityMenu","_this5","checkMenu","sort","a","b","sorting","getBadge","setCaptionsMenu","_this6","tracks","getTracks","toggled","language","unshift","setSpeedMenu","_this7","isVimeo","values","some","toggleMenu","popup","show","isMenuItem","isButton","firstItem","getMenuSize","tab","clone","position","opacity","scrollWidth","height","scrollHeight","_this8","size","restore","propertyName","create","_this9","aria-haspopup","aria-controls","aria-expanded","aria-labelled-by","inner","home","backButton","inject","_this10","floor","random","props","seektime","insertAdjacentHTML","setTimeout","offsetHeight","_config","labels","parseUrl","parser","href","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","protocol","blob","createObjectURL","languages","userLanguage","active","trackEvents","_captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","activeClass","findTrack","toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","caption","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","loop","selected","keyboard","focused","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","frameTitle","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","urls","vimeo","sdk","iframe","youtube","googleIMA","editable","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","google","publisherId","providers","types","noop","Console","console","onChange","first","last","keyCode","activeElement","shiftKey","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","Fullscreen","property","native","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","build","checkPlaying","ready","setTitle","setPoster","isEmbed","togglePoster","enable","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","Listeners","lastKey","focusTimer","lastKeyDown","handleKey","setTabFocus","firstTouch","code","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","timeStamp","wasKeyDown","delay","hasAudio","initialized","managerPromise","isAudio","ended","proxyEvents","_event$detail","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","proxy","inputEvent","currentTarget","eventType","done","seekTo","_player","webkitDirectionInvertedFromDevice","_map","deltaX","deltaY","_map2","direction","sign","abs","factory","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isCss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","onbeforeload","ev","sheet","cssText","defaultPrevented","head","loadjs","paths","arg1","arg2","fn","numWaiting","loadFiles","deps","bundleIds","r","subscribe","isDefined","module","exports","loadScript","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split","_split2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","name","setLoop","currentSrc","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","getAspectRatio","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","mapQualityUnit","entry","hd2160","hd1440","hd1080","hd720","large","medium","small","tiny","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","posterSrc","format$$1","playerVars","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackQualityChange","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","getPlaybackQuality","setPlaybackQuality","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","levels","getAvailableQualityLevels","level","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","initialize","init","adError","zIndex","destroy","_this11","handlers","_this12","base","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","Date","now","AV_WIDTH","AV_HEIGHT","AV_CDIM2","insertElements","attribute","change","_sources$","_sources$$provider","tagName","crossorigin","Plyr","failed","jQuery","original","getProviderByUrl","searchParams","truthy","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","realDuration","Infinity","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","prev","curr","closest","states","webkitPresentationMode","inline","t"],"mappings":"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","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = input => input === null || typeof input === 'undefined';\nconst isObject = input => getConstructor(input) === Object;\nconst isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = input => getConstructor(input) === String;\nconst isBoolean = input => getConstructor(input) === Boolean;\nconst isFunction = input => getConstructor(input) === Function;\nconst isArray = input => Array.isArray(input);\nconst isWeakMap = input => instanceOf(input, WeakMap);\nconst isNodeList = input => instanceOf(input, NodeList);\nconst isElement = input => instanceOf(input, Element);\nconst isTextNode = input => getConstructor(input) === Text;\nconst isEvent = input => instanceOf(input, Event);\nconst isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\nconst isTrack = input => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\n\nconst isEmpty = input =>\n    isNullOrUndefined(input) ||\n    ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\n    (isObject(input) && !Object.keys(input).length);\n\nconst isUrl = input => {\n    // Accept a URL object\n    if (instanceOf(input, window.URL)) {\n        return true;\n    }\n\n    // Add the protocol if required\n    let string = input;\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\n        string = `http://${input}`;\n    }\n\n    try {\n        return !isEmpty(new URL(string).hostname);\n    } catch (e) {\n        return false;\n    }\n};\n\nexport default {\n    nullOrUndefined: isNullOrUndefined,\n    object: isObject,\n    number: isNumber,\n    string: isString,\n    boolean: isBoolean,\n    function: isFunction,\n    array: isArray,\n    weakMap: isWeakMap,\n    nodeList: isNodeList,\n    element: isElement,\n    textNode: isTextNode,\n    event: isEvent,\n    cue: isCue,\n    track: isTrack,\n    url: isUrl,\n    empty: isEmpty,\n};\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get() {\n                supported = true;\n                return null;\n            },\n        });\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n        // Do nothing\n    }\n\n    return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(\n    element,\n    event,\n    callback,\n    toggle = false,\n    passive = true,\n    capture = false,\n) {\n    // Bail if no element, event, or callback\n    if (\n        !element ||\n        !('addEventListener' in element) ||\n        is.empty(event) ||\n        !is.function(callback)\n    ) {\n        return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n        options = {\n            // Whether the listener can be passive (i.e. default never prevented)\n            passive,\n            // Whether the listener is a capturing listener or not\n            capture,\n        };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n        if (this && this.eventListeners && toggle) {\n            // Cache event listener\n            this.eventListeners.push({ element, type, callback, options });\n        }\n\n        element[toggle ? 'addEventListener' : 'removeEventListener'](\n            type,\n            callback,\n            options,\n        );\n    });\n}\n\n// Bind event handler\nexport function on(\n    element,\n    events = '',\n    callback,\n    passive = true,\n    capture = false,\n) {\n    toggleListener.call(\n        this,\n        element,\n        events,\n        callback,\n        true,\n        passive,\n        capture,\n    );\n}\n\n// Unbind event handler\nexport function off(\n    element,\n    events = '',\n    callback,\n    passive = true,\n    capture = false,\n) {\n    toggleListener.call(\n        this,\n        element,\n        events,\n        callback,\n        false,\n        passive,\n        capture,\n    );\n}\n\n// Bind once-only event handler\nexport function once(\n    element,\n    events = '',\n    callback,\n    passive = true,\n    capture = false,\n) {\n    function onceCallback(...args) {\n        off(element, events, onceCallback, passive, capture);\n        callback.apply(this, args);\n    }\n\n    toggleListener.call(\n        this,\n        element,\n        events,\n        onceCallback,\n        true,\n        passive,\n        capture,\n    );\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n        return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n        bubbles,\n        detail: Object.assign({}, detail, {\n            plyr: this,\n        }),\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n    if (this && this.eventListeners) {\n        this.eventListeners.forEach(item => {\n            const { element, type, callback, options } = item;\n            element.removeEventListener(type, callback, options);\n        });\n\n        this.eventListeners = [];\n    }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n    return new Promise(\n        resolve =>\n            this.ready\n                ? setTimeout(resolve, 0)\n                : on.call(this, this.elements.container, 'ready', resolve),\n    ).then(() => {});\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport { toggleListener } from './events';\nimport is from './is';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets)\n        .reverse()\n        .forEach((element, index) => {\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n            // Cache the current parent and sibling.\n            const parent = element.parentNode;\n            const sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n        });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n        return;\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes)\n        .filter(([, value]) => !is.nullOrUndefined(value))\n        .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n        setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n        element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n    if (!is.element(element) || !is.element(target)) {\n        return;\n    }\n\n    target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n    if (!is.element(parent)) {\n        return;\n    }\n\n    parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n        Array.from(element).forEach(removeElement);\n        return;\n    }\n\n    if (!is.element(element) || !is.element(element.parentNode)) {\n        return;\n    }\n\n    element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let { length } = element.childNodes;\n\n    while (length > 0) {\n        element.removeChild(element.lastChild);\n        length -= 1;\n    }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n    if (\n        !is.element(oldChild) ||\n        !is.element(oldChild.parentNode) ||\n        !is.element(newChild)\n    ) {\n        return null;\n    }\n\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n\n    return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) {\n        return {};\n    }\n\n    const attributes = {};\n    const existing = existingAttributes;\n\n    sel.split(',').forEach(s => {\n        // Remove whitespace\n        const selector = s.trim();\n        const className = selector.replace('.', '');\n        const stripped = selector.replace(/[[\\]]/g, '');\n\n        // Get the parts and value\n        const parts = stripped.split('=');\n        const key = parts[0];\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n        // Get the first character\n        const start = selector.charAt(0);\n\n        switch (start) {\n            case '.':\n                // Add to existing classname\n                if (is.object(existing) && is.string(existing.class)) {\n                    existing.class += ` ${className}`;\n                }\n\n                attributes.class = className;\n                break;\n\n            case '#':\n                // ID selector\n                attributes.id = selector.replace('#', '');\n                break;\n\n            case '[':\n                // Attribute selector\n                attributes[key] = value;\n\n                break;\n\n            default:\n                break;\n        }\n    });\n\n    return attributes;\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let hide = hidden;\n\n    if (!is.boolean(hide)) {\n        hide = !element.hasAttribute('hidden');\n    }\n\n    if (hide) {\n        element.setAttribute('hidden', '');\n    } else {\n        element.removeAttribute('hidden');\n    }\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n    if (is.nodeList(element)) {\n        return Array.from(element).map(e => toggleClass(e, className, force));\n    }\n\n    if (is.element(element)) {\n        let method = 'toggle';\n        if (typeof force !== 'undefined') {\n            method = force ? 'add' : 'remove';\n        }\n\n        element.classList[method](className);\n        return element.classList.contains(className);\n    }\n\n    return false;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n    const prototype = { Element };\n\n    function match() {\n        return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n\n    const matches =\n        prototype.matches ||\n        prototype.webkitMatchesSelector ||\n        prototype.mozMatchesSelector ||\n        prototype.msMatchesSelector ||\n        match;\n\n    return matches.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n}\n\n// Trap focus inside container\nexport function trapFocus(element = null, toggle = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    const focusable = getElements.call(\n        this,\n        'button:not(:disabled), input:not(:disabled), [tabindex]',\n    );\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    const trap = event => {\n        // Bail if not tab key or not fullscreen\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\n            return;\n        }\n\n        // Get the current focused element\n        const focused = document.activeElement;\n\n        if (focused === last && !event.shiftKey) {\n            // Move focus to first element that can be tabbed if Shift isn't used\n            first.focus();\n            event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n            // Move focus to last element that can be tabbed if Shift is used\n            last.focus();\n            event.preventDefault();\n        }\n    };\n\n    toggleListener.call(\n        this,\n        this.elements.container,\n        'keydown',\n        trap,\n        toggle,\n        false,\n    );\n}\n\n// Set focus and tab focus class\nexport function setFocus(element = null, tabFocus = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    // Set regular focus\n    element.focus();\n\n    // If we want to mimic keyboard focus via tab\n    if (tabFocus) {\n        toggleClass(element, this.config.classNames.tabFocus);\n    }\n}\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport { toggleHidden } from './elements';\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n\n    const events = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend',\n    };\n\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\n\n    return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element) {\n    setTimeout(() => {\n        toggleHidden(element, true);\n        element.offsetHeight; // eslint-disable-line\n        toggleHidden(element, false);\n    }, 0);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n};\n\nexport default browser;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n        const api = support[type] || provider !== 'html5';\n        const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari only currently\n    pip: (() => !browser.isIPhone && is.function(createElement('video').webkitSetPresentationMode))(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(inputType) {\n        const [mediaType] = inputType.split('/');\n        if (!this.isHTML5 || mediaType !== this.type) {\n            return false;\n        }\n\n        let type;\n        if (inputType && inputType.includes('codecs=')) {\n            // Use input directly\n            type = inputType;\n        } else if (inputType === 'audio/mpeg') {\n            // Skip codec\n            type = 'audio/mpeg;';\n        } else if (inputType in defaultCodecs) {\n            // Use codec\n            type = `${inputType}; codecs=\"${defaultCodecs[inputType]}\"`;\n        }\n\n        try {\n            return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n        } catch (err) {\n            return false;\n        }\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return [];\n        }\n\n        const sources = Array.from(this.media.querySelectorAll('source'));\n\n        // Filter out unsupported sources\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        // Get sizes from <source> elements\n        return html5.getSources\n            .call(this)\n            .map(source => Number(source.getAttribute('size')))\n            .filter(Boolean);\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n                const source = sources.find(source => source.getAttribute('src') === player.source);\n\n                // Return size, if match is found\n                return source && Number(source.getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                // Get first match for requested size\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\n\n                // No matching source found\n                if (!source) {\n                    return;\n                }\n\n                // Get current state\n                const { currentTime, paused, preload, readyState } = player.media;\n\n                // Set new source\n                player.media.src = source.getAttribute('src');\n\n                // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n                if (preload !== 'none' || readyState) {\n                    // Restore time\n                    player.once('loadedmetadata', () => {\n                        player.currentTime = currentTime;\n\n                        // Resume playing\n                        if (!paused) {\n                            player.play();\n                        }\n                    });\n\n                    // Load new source\n                    player.media.load();\n                }\n\n                // Trigger change event\n                triggerEvent.call(player, player.media, 'qualitychange', false, {\n                    quality: input,\n                });\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        // Remove child sources\n        removeElement(html5.getSources.call(this));\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n\n    const source = sources.shift();\n\n    if (!is.object(source)) {\n        return target;\n    }\n\n    Object.keys(source).forEach(key => {\n        if (is.object(source[key])) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, { [key]: {} });\n            }\n\n            extend(target[key], source[key]);\n        } else {\n            Object.assign(target, { [key]: source[key] });\n        }\n    });\n\n    return extend(target, ...sources);\n}\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n    if (is.empty(input)) {\n        return input;\n    }\n\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n        return 0;\n    }\n\n    return (current / max * 100).toFixed(2);\n}\n\n// Replace all occurances of a string in a string\nexport function replaceAll(input = '', find = '', replace = '') {\n    return input.replace(\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\n        replace.toString(),\n    );\n}\n\n// Convert to title case\nexport function toTitleCase(input = '') {\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n}\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\nimport { replaceAll } from './utils/strings';\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (is.empty(key) || is.empty(config)) {\n            return '';\n        }\n\n        let string = getDeep(config.i18n, key);\n\n        if (is.empty(string)) {\n            return '';\n        }\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([key, value]) => {\n            string = replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n    if (!is.array(array)) {\n        return array;\n    }\n\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n        return null;\n    }\n\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported || !this.enabled) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n        try {\n            const request = new XMLHttpRequest();\n\n            // Check for CORS support\n            if (!('withCredentials' in request)) {\n                return;\n            }\n\n            request.addEventListener('load', () => {\n                if (responseType === 'text') {\n                    try {\n                        resolve(JSON.parse(request.responseText));\n                    } catch (e) {\n                        resolve(request.responseText);\n                    }\n                } else {\n                    resolve(request.response);\n                }\n            });\n\n            request.addEventListener('error', () => {\n                throw new Error(request.status);\n            });\n\n            request.open('GET', url, true);\n\n            // Set the required response type\n            request.responseType = responseType;\n\n            request.send();\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from '../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id) {\n    if (!is.string(url)) {\n        return;\n    }\n\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n\n    const exists = () => document.getElementById(id) !== null;\n\n    const update = (container, data) => {\n        container.innerHTML = data;\n\n        // Check again incase of race condition\n        if (hasId && exists()) {\n            return;\n        }\n\n        // Inject the SVG to the body\n        document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n        const useStorage = Storage.supported;\n\n        // Create container\n        const container = document.createElement('div');\n        container.setAttribute('hidden', '');\n\n        if (hasId) {\n            container.setAttribute('id', id);\n        }\n\n        // Check in cache\n        if (useStorage) {\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\n            isCached = cached !== null;\n\n            if (isCached) {\n                const data = JSON.parse(cached);\n                update(container, data.content);\n            }\n        }\n\n        // Get the sprite\n        fetch(url)\n            .then(result => {\n                if (is.empty(result)) {\n                    return;\n                }\n\n                if (useStorage) {\n                    window.localStorage.setItem(\n                        `${prefix}-${id}`,\n                        JSON.stringify({\n                            content: result,\n                        }),\n                    );\n                }\n\n                update(container, result);\n            })\n            .catch(() => {});\n    }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\nexport const getSeconds = value => parseInt(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n        return formatTime(null, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n        hours = `${hours}:`;\n    } else {\n        hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// TODO: This needs to be split into smaller files and cleaned up\n// ==========================================================================\n\nimport captions from './captions';\nimport html5 from './html5';\nimport i18n from './i18n';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport { createElement, emptyElement, getAttributesFromSelector, getElement, getElements, hasClass, matches, removeElement, setAttributes, setFocus, toggleClass, toggleHidden } from './utils/elements';\nimport { off, on } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n    // Get icon URL\n    getIconUrl() {\n        const url = new URL(this.config.iconUrl, window.location);\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n        return {\n            url: this.config.iconUrl,\n            cors,\n        };\n    },\n\n    // Find the UI controls\n    findElements() {\n        try {\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: getElements.call(this, this.config.selectors.buttons.play),\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n                duration: getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\n                    `.${this.config.classNames.tooltip}`,\n                );\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        setAttributes(\n            icon,\n            extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        } else {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n        }\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(type, attr = {}) {\n        // Skip i18n for abbreviations and brand names\n        const universals = {\n            pip: 'PIP',\n            airplay: 'AirPlay',\n        };\n        const text = universals[type] || i18n.get(type, this.config);\n\n        const attributes = Object.assign({}, attr, {\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\n        });\n        return createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (is.empty(text)) {\n            return null;\n        }\n\n        const badge = createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const button = createElement('button');\n        const attributes = Object.assign({}, attr);\n        let type = toCamelCase(buttonType);\n\n        let toggle = false;\n        let label;\n        let icon;\n        let labelPressed;\n        let iconPressed;\n\n        if (!('type' in attributes)) {\n            attributes.type = 'button';\n        }\n\n        if ('class' in attributes) {\n            if (!attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                toggle = true;\n                label = 'play';\n                labelPressed = 'pause';\n                icon = 'play';\n                iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                toggle = true;\n                label = 'mute';\n                labelPressed = 'unmute';\n                icon = 'volume';\n                iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                toggle = true;\n                label = 'enableCaptions';\n                labelPressed = 'disableCaptions';\n                icon = 'captions-off';\n                iconPressed = 'captions-on';\n                break;\n\n            case 'fullscreen':\n                toggle = true;\n                label = 'enterFullscreen';\n                labelPressed = 'exitFullscreen';\n                icon = 'enter-fullscreen';\n                iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                label = 'play';\n                icon = 'play';\n                break;\n\n            default:\n                label = type;\n                icon = buttonType;\n        }\n\n        // Setup toggle icon and labels\n        if (toggle) {\n            // Icon\n            button.appendChild(controls.createIcon.call(this, iconPressed, { class: 'icon--pressed' }));\n            button.appendChild(controls.createIcon.call(this, icon, { class: 'icon--not-pressed' }));\n\n            // Label/Tooltip\n            button.appendChild(controls.createLabel.call(this, labelPressed, { class: 'label--pressed' }));\n            button.appendChild(controls.createLabel.call(this, label, { class: 'label--not-pressed' }));\n        } else {\n            button.appendChild(controls.createIcon.call(this, icon));\n            button.appendChild(controls.createLabel.call(this, label));\n        }\n\n        // Merge attributes\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n\n        setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        // Toggle classname when pressed property is set\n        const className = this.config.classNames.controlPressed;\n        Object.defineProperty(button, 'pressed', {\n            enumerable: true,\n            get() {\n                return hasClass(button, className);\n            },\n            set(pressed = false) {\n                toggleClass(button, className, pressed);\n            },\n        });\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek input\n        const input = createElement(\n            'input',\n            extend(\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-label': i18n.get(type, this.config),\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return input;\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = createElement(\n            'progress',\n            extend(\n                getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(createElement('span', null, '0'));\n\n            const suffixKey = {\n                played: 'played',\n                buffer: 'buffered',\n            }[type];\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n            progress.innerText = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\n\n        const container = createElement(\n            'div',\n            extend(attributes, {\n                class: `${this.config.classNames.display.time} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-label': i18n.get(type, this.config),\n            }),\n            '00:00',\n        );\n\n        // Reference for updates\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Bind keyboard shortcuts for a menu item\n    bindMenuItemShortcuts(menuItem, type) {\n        // Handle space or -> to open menu\n        on(menuItem, 'keydown', event => {\n            // We only care about space and ⬆️ ⬇️️ ➡️\n            if (![32,38,39,40].includes(event.which)) {\n                return;\n            }\n\n            // Prevent play / seek\n            event.preventDefault();\n            event.stopPropagation();\n\n            const isRadioButton = matches(menuItem, '[role=\"menuitemradio\"]');\n\n            // Show the respective menu\n            if (!isRadioButton && [32,39].includes(event.which)) {\n                controls.showMenuPanel.call(this, type);\n            } else {\n                let target;\n\n                if (event.which !== 32) {\n                    if (event.which === 40 || isRadioButton && event.which === 39) {\n                        target = menuItem.nextElementSibling;\n\n                        if (!is.element(target)) {\n                            target = menuItem.parentNode.firstElementChild;\n                        }\n                    } else {\n                        target = menuItem.previousElementSibling;\n\n                        if (!is.element(target)) {\n                            target = menuItem.parentNode.lastElementChild;\n                        }\n                    }\n\n                    setFocus.call(this, target, true);\n                }\n            }\n        }, false);\n    },\n\n    // Create a settings menu item\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n        const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n\n        const menuItem = createElement(\n            'button',\n            extend(attributes, {\n                type: 'button',\n                role: 'menuitemradio',\n                class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-checked': checked,\n                value,\n            }),\n        );\n\n        const flex = createElement('span');\n\n        // We have to set as HTML incase of special characters\n        flex.innerHTML = title;\n\n        if (is.element(badge)) {\n            flex.appendChild(badge);\n        }\n\n        menuItem.appendChild(flex);\n\n        // Replicate radio button behaviour\n        Object.defineProperty(menuItem, 'checked', {\n            enumerable: true,\n            get() {\n                return menuItem.getAttribute('aria-checked') === 'true';\n            },\n            set(checked) {\n                // Ensure exclusivity\n                if (checked) {\n                    Array.from(menuItem.parentNode.children)\n                        .filter(node => matches(node, '[role=\"menuitemradio\"]'))\n                        .forEach(node => node.setAttribute('aria-checked', 'false'));\n                }\n\n                menuItem.setAttribute('aria-checked', checked ? 'true' : 'false');\n            },\n        });\n\n        this.listeners.bind(\n            menuItem,\n            'click keydown',\n            event => {\n                if (event.type === 'keydown' && event.which !== 32) {\n                    return;\n                }\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                menuItem.checked = true;\n\n                switch (type) {\n                    case 'language':\n                        this.currentTrack = Number(value);\n                        break;\n\n                    case 'quality':\n                        this.quality = value;\n                        break;\n\n                    case 'speed':\n                        this.speed = parseFloat(value);\n                        break;\n\n                    default:\n                        break;\n                }\n\n                controls.showMenuPanel.call(this, 'home');\n            },\n            type,\n            false,\n        );\n\n        controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n        list.appendChild(menuItem);\n    },\n\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n        // Bail if the value isn't a number\n        if (!is.number(time)) {\n            return time;\n        }\n\n        // Always display hours if duration is over an hour\n        const forceHours = getHours(this.duration) > 0;\n\n        return formatTime(time, forceHours, inverted);\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!is.element(target) || !is.number(time)) {\n            return;\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        target.innerText = controls.formatTime(time, inverted);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (is.element(this.elements.inputs.volume)) {\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (is.element(this.elements.buttons.mute)) {\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        const setProgress = (target, input) => {\n            const value = is.number(input) ? input : 0;\n            const progress = is.element(target) ? target : this.elements.display.buffer;\n\n            // Update value and label\n            if (is.element(progress)) {\n                progress.value = value;\n\n                // Update text label inside\n                const label = progress.getElementsByTagName('span')[0];\n                if (is.element(label)) {\n                    label.childNodes[0].nodeValue = value;\n                }\n            }\n        };\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                case 'seeked':\n                    value = getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n        // Get range from event if event passed\n        const range = is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\n        if (matches(range, this.config.selectors.inputs.seek)) {\n            range.setAttribute('aria-valuenow', this.currentTime);\n            const currentTime = controls.formatTime(this.currentTime);\n            const duration = controls.formatTime(this.duration);\n            const format = i18n.get('seekLabel', this.config);\n            range.setAttribute(\n                'aria-valuetext',\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n            );\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\n            const percent = range.value * 100;\n            range.setAttribute('aria-valuenow', percent);\n            range.setAttribute('aria-valuetext', `${percent}%`);\n        } else {\n            range.setAttribute('aria-valuenow', range.value);\n        }\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !is.element(this.elements.inputs.seek) ||\n            !is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.progress.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        controls.updateTimeDisplay.call(\n            this,\n            this.elements.display.currentTime,\n            invert ? this.duration - this.currentTime : this.currentTime,\n            invert,\n        );\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        controls.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n            return;\n        }\n\n        // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n        // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n        // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n        // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n        if (this.duration >= 2**32) {\n            toggleHidden(this.elements.display.currentTime, true);\n            toggleHidden(this.elements.progress, true);\n            return;\n        }\n\n        // Update ARIA values\n        if (is.element(this.elements.inputs.seek)) {\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n\n    // Hide/show a tab\n    toggleMenuButton(setting, toggle) {\n        toggleHidden(this.elements.settings.buttons[setting], !toggle);\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panels[setting];\n        let value = null;\n        let list = container;\n\n        if (setting === 'captions') {\n            value = this.currentTrack;\n        } else {\n            value = !is.empty(input) ? input : this[setting];\n\n            // Get default\n            if (is.empty(value)) {\n                value = this.config[setting].default;\n            }\n\n            // Unsupported value\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                return;\n            }\n\n            // Disabled value\n            if (!this.config[setting].options.includes(value)) {\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                return;\n            }\n        }\n\n        // Get the list if we need to\n        if (!is.element(list)) {\n            list = pane && pane.querySelector('[role=\"menu\"]');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`[value=\"${value}\"]`);\n\n        if (is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (is.number(value)) {\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n                    if (!label.length) {\n                        return `${value}p`;\n                    }\n\n                    return label;\n                }\n\n                return toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            default:\n                return null;\n        }\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                    badge: getBadge(quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.buttons.loop, false);\n        toggleHidden(this.elements.settings.panels.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleMenuButton.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.captions)) {\n            return;\n        }\n\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n        const tracks = captions.getTracks.call(this);\n        const toggle = Boolean(tracks.length);\n\n        // Toggle the pane and tab\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!toggle) {\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n        const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { buttons } = this.elements.settings;\n        const visible = !is.empty(buttons) && Object.values(buttons).some(button => !button.hidden);\n\n        toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Show/hide menu\n    toggleMenu(input) {\n        const { popup } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!is.element(popup) || !is.element(button)) {\n            return;\n        }\n\n        const show = is.boolean(input) ? input : is.element(popup) && popup.hasAttribute('hidden');\n\n        if (is.event(input)) {\n            const isMenuItem = is.element(popup) && popup.contains(input.target);\n            const isButton = input.target === this.elements.buttons.settings;\n\n            // If the click was inside the form or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && !isButton && show)) {\n                return;\n            }\n\n            // Prevent the toggle being caught by the doc listener\n            if (isButton) {\n                input.stopPropagation();\n            }\n        }\n\n        // Set form and button attributes\n        if (is.element(button)) {\n            button.setAttribute('aria-expanded', show);\n        }\n\n        // Show the actual popup\n        if (is.element(popup)) {\n            toggleHidden(popup, !show);\n            toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n            // Focus the first item if key interaction\n            if (show && is.event(input) && input.type === 'keydown') {\n                const pane = Object.values(this.elements.settings.panels).find(pane => !pane.hidden);\n                const firstItem = pane.querySelector('[role^=\"menuitem\"]');\n                setFocus.call(this, firstItem, true);\n            }\n        }\n    },\n\n    // Get the natural size of a menu panel\n    getMenuSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.removeAttribute('hidden');\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Show a panel in the menu\n    showMenuPanel(type = '') {\n        const target = document.getElementById(`plyr-settings-${this.id}-${type}`);\n\n        // Nothing to show, bail\n        if (!is.element(target)) {\n            return;\n        }\n\n        // Hide all other panels\n        const container = target.parentNode;\n        const current = Array.from(container.children).find(node => !node.hidden);\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getMenuSize.call(this, target);\n\n            // Restore auto height/width\n            const restore = event => {\n                // We're only bothered about height and width on the container\n                if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                off.call(this, container, transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            on.call(this, container, transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        toggleHidden(current, true);\n\n        // Set attributes on target\n        toggleHidden(target, false);\n\n        // Focus the first item\n        const firstItem = target.querySelector('[role^=\"menuitem\"]');\n        setFocus.call(this, firstItem, true);\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Do nothing if we want no controls\n        if (is.empty(this.config.controls)) {\n            return null;\n        }\n\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            progress.appendChild(\n                controls.createRange.call(this, 'seek', {\n                    id: `plyr-seek-${data.id}`,\n                }),\n            );\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = createElement(\n                    'span',\n                    {\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Toggle mute button\n        if (this.config.controls.includes('mute')) {\n            container.appendChild(controls.createButton.call(this, 'mute'));\n        }\n\n        // Volume range control\n        if (this.config.controls.includes('volume')) {\n            const volume = createElement('div', {\n                class: 'plyr__volume',\n            });\n\n            // Set the attributes\n            const attributes = {\n                max: 1,\n                step: 0.05,\n                value: this.config.volume,\n            };\n\n            // Create the volume range slider\n            volume.appendChild(\n                controls.createRange.call(\n                    this,\n                    'volume',\n                    extend(attributes, {\n                        id: `plyr-volume-${data.id}`,\n                    }),\n                ),\n            );\n\n            this.elements.volume = volume;\n\n            container.appendChild(volume);\n        }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            const control = createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            control.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    id: `plyr-settings-toggle-${data.id}`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const popup = createElement('div', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                hidden: '',\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n            });\n\n            const inner = createElement('div');\n\n            const home = createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n            });\n\n            // Create the menu\n            const menu = createElement('div', {\n                role: 'menu',\n            });\n\n            home.appendChild(menu);\n            inner.appendChild(home);\n            this.elements.settings.panels.home = home;\n\n            // Build the menu items\n            this.config.settings.forEach(type => {\n                // TODO: bundle this with the createMenuItem helper and bindings\n                const menuItem = createElement(\n                    'button',\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        role: 'menuitem',\n                        'aria-haspopup': true,\n                        hidden: '',\n                    }),\n                );\n\n                // Bind menu shortcuts for keyboard users\n                controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n                // Show menu on click\n                on(menuItem, 'click', () => {\n                    controls.showMenuPanel.call(this, type);\n                });\n\n                const flex = createElement('span', null, i18n.get(type, this.config));\n\n                const value = createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                flex.appendChild(value);\n                menuItem.appendChild(flex);\n                menu.appendChild(menuItem);\n\n                // Build the panes\n                const pane = createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    hidden: '',\n                });\n\n                // Back button\n                const backButton = createElement('button', {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                });\n\n                // Visible label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            'aria-hidden': true,\n                        },\n                        i18n.get(type, this.config),\n                    ),\n                );\n\n                // Screen reader label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            class: this.config.classNames.hidden,\n                        },\n                        i18n.get('menuBack', this.config),\n                    ),\n                );\n\n                // Go back via keyboard\n                on(pane, 'keydown', event => {\n                    // We only care about <-\n                    if (event.which !== 37) {\n                        return;\n                    }\n\n                    // Prevent seek\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    // Show the respective menu\n                    controls.showMenuPanel.call(this, 'home');\n                }, false);\n\n                // Go back via button click\n                on(backButton, 'click', () => {\n                    controls.showMenuPanel.call(this, 'home');\n                });\n\n                // Add to pane\n                pane.appendChild(backButton);\n\n                // Menu\n                pane.appendChild(\n                    createElement('div', {\n                        role: 'menu',\n                    }),\n                );\n\n                inner.appendChild(pane);\n\n                this.elements.settings.buttons[type] = menuItem;\n                this.elements.settings.panels[type] = pane;\n            });\n\n            popup.appendChild(inner);\n            control.appendChild(popup);\n            container.appendChild(control);\n\n            this.elements.settings.popup = popup;\n            this.elements.settings.menu = control;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.cors) {\n                loadSprite(icon.url, 'sprite-plyr');\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // Set template properties\n        const props = {\n            id: this.id,\n            seektime: this.config.seekTime,\n            title: this.config.title,\n        };\n        let update = true;\n\n        if (is.string(this.config.controls) || is.element(this.config.controls)) {\n            // String or HTMLElement passed as the option\n            container = this.config.controls;\n        } else if (is.function(this.config.controls)) {\n            // A custom function to build controls\n            // The function can return a HTMLElement or String\n            container = this.config.controls.call(this, props);\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n            update = false;\n        }\n\n        // Replace props with their value\n        const replace = input => {\n            let result = input;\n\n            Object.entries(props).forEach(([key, value]) => {\n                result = replaceAll(result, `{${key}}`, value);\n            });\n\n            return result;\n        };\n\n        // Update markup\n        if (update) {\n            if (is.string(this.config.controls)) {\n                container = replace(container);\n            } else if (is.element(container)) {\n                container.innerHTML = replace(container.innerHTML);\n            }\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML\n        if (is.element(container)) {\n            target.appendChild(container);\n        } else if (container) {\n            target.insertAdjacentHTML('beforeend', container);\n        }\n\n        // Find the elements if need be\n        if (!is.element(this.elements.controls)) {\n            controls.findElements.call(this);\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            repaint(target);\n        }\n\n        // Setup tooltips\n        if (this.config.tooltips.controls) {\n            const { classNames, selectors } = this.config;\n            const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n            const labels = getElements.call(this, selector);\n\n            Array.from(labels).forEach(label => {\n                toggleClass(label, this.config.classNames.hidden, false);\n                toggleClass(label, this.config.classNames.tooltip, true);\n            });\n        }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {string} input - the URL to be parsed\n * @param {boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n    let url = input;\n\n    if (safe) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        url = parser.href;\n    }\n\n    try {\n        return new URL(url);\n    } catch (e) {\n        return null;\n    }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n    const params = new URLSearchParams();\n\n    if (is.object(input)) {\n        Object.entries(input).forEach(([key, value]) => {\n            params.set(key, value);\n        });\n    }\n\n    return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    insertAfter,\n    removeElement,\n    toggleClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (\n                is.array(this.config.controls) &&\n                this.config.controls.includes('settings') &&\n                this.config.settings.includes('captions')\n            ) {\n                controls.setCaptionsMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!is.element(this.elements.captions)) {\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n\n            insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const url = parseUrl(src);\n\n                if (\n                    url !== null &&\n                    url.hostname !== window.location.href.hostname &&\n                    ['http:', 'https:'].includes(url.protocol)\n                ) {\n                    fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Get and set initial data\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\n        // * languages: Array of user's browser languages.\n        // * language:  The language preferred by user settings or config\n        // * active:    The state preferred by user settings or config\n        // * toggled:   The real captions state\n\n        const languages = dedupe(\n            Array.from(navigator.languages || navigator.language || navigator.userLanguage).map(language => language.split('-')[0]),\n        );\n\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n        // Use first browser language when language is 'auto'\n        if (language === 'auto') {\n            [language] = languages;\n        }\n\n        let active = this.storage.get('captions');\n        if (!is.boolean(active)) {\n            ({ active } = this.config.captions);\n        }\n\n        Object.assign(this.captions, {\n            toggled: false,\n            active,\n            language,\n            languages,\n        });\n\n        // Watch changes to textTracks and update captions menu\n        if (this.isHTML5) {\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n        }\n\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\n        setTimeout(captions.update.bind(this), 0);\n    },\n\n    // Update available language options in settings based on tracks\n    update() {\n        const tracks = captions.getTracks.call(this, true);\n        // Get the wanted language\n        const { active, language, meta, currentTrackNode } = this.captions;\n        const languageExists = Boolean(tracks.find(track => track.language === language));\n\n        // Handle tracks (add event listener and \"pseudo\"-default)\n        if (this.isHTML5 && this.isVideo) {\n            tracks.filter(track => !meta.get(track)).forEach(track => {\n                this.debug.log('Track added', track);\n                // Attempt to store if the original dom element was \"default\"\n                meta.set(track, {\n                    default: track.mode === 'showing',\n                });\n\n                // Turn off native caption rendering to avoid double captions\n                track.mode = 'hidden';\n\n                // Add event listener for cue changes\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n            });\n        }\n\n        // Update language first time it matches, or if the previous matching track was removed\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n            captions.setLanguage.call(this, language);\n            captions.toggle.call(this, active && languageExists);\n        }\n\n        // Enable or disable captions based on track length\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n\n        // Update available languages in list\n        if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        const { toggled } = this.captions; // Current state\n        const activeClass = this.config.classNames.captions.active;\n\n        // Get the next state\n        // If the method is called without parameter, toggle based on current value\n        const active = is.nullOrUndefined(input) ? !toggled : input;\n\n        // Update state and trigger event\n        if (active !== toggled) {\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.active = active;\n                this.storage.set({ captions: active });\n            }\n\n            // Force language if the call isn't passive and there is no matching language to toggle to\n            if (!this.language && active && !passive) {\n                const tracks = captions.getTracks.call(this);\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n                // Override user preferences to avoid switching languages if a matching track is added\n                this.captions.language = track.language;\n\n                // Set caption, but don't store in localStorage as user preference\n                captions.set.call(this, tracks.indexOf(track));\n                return;\n            }\n\n            // Toggle button if it's enabled\n            if (this.elements.buttons.captions) {\n                this.elements.buttons.captions.pressed = active;\n            }\n\n            // Add class hook\n            toggleClass(this.elements.container, activeClass, active);\n\n            this.captions.toggled = active;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // Trigger event (not used internally)\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n        }\n    },\n\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n        const tracks = captions.getTracks.call(this);\n\n        // Disable captions if setting to -1\n        if (index === -1) {\n            captions.toggle.call(this, false, passive);\n            return;\n        }\n\n        if (!is.number(index)) {\n            this.debug.warn('Invalid caption argument', index);\n            return;\n        }\n\n        if (!(index in tracks)) {\n            this.debug.warn('Track not found', index);\n            return;\n        }\n\n        if (this.captions.currentTrack !== index) {\n            this.captions.currentTrack = index;\n            const track = tracks[index];\n            const { language } = track || {};\n\n            // Store reference to node for invalidation on remove\n            this.captions.currentTrackNode = track;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.language = language;\n                this.storage.set({ language });\n            }\n\n            // Handle Vimeo captions\n            if (this.isVimeo) {\n                this.embed.enableTextTrack(language);\n            }\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'languagechange');\n        }\n\n        // Show captions\n        captions.toggle.call(this, true, passive);\n\n        if (this.isHTML5 && this.isVideo) {\n            // If we change the active track while a cue is already displayed we need to update it\n            captions.updateCues.call(this);\n        }\n    },\n\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n        if (!is.string(input)) {\n            this.debug.warn('Invalid language argument', input);\n            return;\n        }\n        // Normalize\n        const language = input.toLowerCase();\n        this.captions.language = language;\n\n        // Set currentTrack\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [language]);\n        captions.set.call(this, tracks.indexOf(track), passive);\n    },\n\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n        // Handle media or textTracks missing or null\n        const tracks = Array.from((this.media || {}).textTracks || []);\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n        return tracks\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n        const tracks = captions.getTracks.call(this);\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n        let track;\n        languages.every(language => {\n            track = sorted.find(track => track.language === language);\n            return !track; // Break iteration if there is a match\n        });\n        // If no match is found but is required, get first\n        return track || (force ? sorted[0] : undefined);\n    },\n\n    // Get the current track\n    getCurrentTrack() {\n        return captions.getTracks.call(this)[this.currentTrack];\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (is.track(currentTrack)) {\n            if (!is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (!is.element(this.elements.captions)) {\n            this.debug.warn('No captions element to render to');\n            return;\n        }\n\n        // Only accept array or empty input\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n            this.debug.warn('updateCues: Invalid input', input);\n            return;\n        }\n\n        let cues = input;\n\n        // Get cues from track\n        if (!cues) {\n            const track = captions.getCurrentTrack.call(this);\n            cues = Array.from((track || {}).activeCues || [])\n                .map(cue => cue.getCueAsHTML())\n                .map(getHTML);\n        }\n\n        // Set new caption text\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\n        const changed = content !== this.elements.captions.innerHTML;\n\n        if (changed) {\n            // Empty the container and create a new child element\n            emptyElement(this.elements.captions);\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n            caption.innerHTML = content;\n            this.elements.captions.appendChild(caption);\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'cuechange');\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n    playsinline: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Reset to start when playback ended\n    resetOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.3.12/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [\n            4320,\n            2880,\n            2160,\n            1440,\n            1080,\n            720,\n            576,\n            480,\n            360,\n            240,\n            'default', // YouTube's \"auto\"\n        ],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: 'auto',\n        // Listen to new tracks added after Plyr is initialized.\n        // This is needed for streaming captions, but may result in unselectable options\n        update: false,\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'settings',\n        'pip',\n        'airplay',\n        'fullscreen',\n    ],\n    settings: ['captions', 'quality', 'speed'],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime}s',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime}s',\n        seek: 'Seek',\n        seekLabel: '{currentTime} of {duration}',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        settings: 'Settings',\n        menuBack: 'Go back to previous menu',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n        qualityBadge: {\n            2160: '4K',\n            1440: 'HD',\n            1080: 'HD',\n            720: 'HD',\n            576: 'SD',\n            480: 'SD',\n        },\n    },\n\n    // URLs\n    urls: {\n        vimeo: {\n            sdk: 'https://player.vimeo.com/api/player.js',\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\n        },\n        youtube: {\n            sdk: 'https://www.youtube.com/iframe_api',\n            api:\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\n        },\n        googleIMA: {\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'enterfullscreen',\n        'exitfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n        'qualitychange',\n        'qualityrequested',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress__buffer',\n            loop: '.plyr__progress__loop', // Used later\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        caption: '.plyr__caption',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        video: 'plyr__video-wrapper',\n        embed: 'plyr__video-embed',\n        embedContainer: 'plyr__video-embed__container',\n        poster: 'plyr__poster',\n        posterEnabled: 'plyr__poster-enabled',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        controlPressed: 'plyr__control--pressed',\n        playing: 'plyr--playing',\n        paused: 'plyr--paused',\n        stopped: 'plyr--stopped',\n        loading: 'plyr--loading',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        display: {\n            time: 'plyr__time',\n        },\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {string} url\n */\nexport function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n        return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n        return providers.vimeo;\n    }\n\n    return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// ==========================================================================\n\nimport browser from './utils/browser';\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nfunction onChange() {\n    if (!this.enabled) {\n        return;\n    }\n\n    // Update toggle button\n    const button = this.player.elements.buttons.fullscreen;\n    if (is.element(button)) {\n        button.pressed = this.active;\n    }\n\n    // Trigger an event\n    triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n    // Toggle button and fire events\n    onChange.call(this);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.property = Fullscreen.property;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        on.call(\n            this.player,\n            document,\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n            () => {\n                // TODO: Filter for target??\n                onChange.call(this);\n            },\n        );\n\n        // Fullscreen toggle on double click\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(\n            document.fullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.mozFullScreenEnabled ||\n            document.msFullscreenEnabled\n        );\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = ['webkit', 'moz', 'ms'];\n\n        prefixes.some(pre => {\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get property() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n        return element === this.target;\n    }\n\n    // Get target element\n    get target() {\n        return browser.isIos && this.player.config.fullscreen.iosNative\n            ? this.player.media\n            : this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            if (this.player.playing) {\n                this.target.webkitEnterFullscreen();\n            }\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.property}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.property}`]();\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n\n        const handler = () => {\n            delete image.onload;\n            delete image.onerror;\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\n        };\n\n        Object.assign(image, { onload: handler, onerror: handler, src });\n    });\n}\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport loadImage from './utils/loadImage';\n\nconst ui = {\n    addStyleHook() {\n        toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Setup captions for HTML5\n        if (this.isHTML5) {\n            captions.setup.call(this);\n        }\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        controls.updateVolume.call(this);\n\n        // Reset time display\n        controls.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Check for picture-in-picture support\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.pip.supported,\n            support.pip && this.isHTML5 && this.isVideo,\n        );\n\n        // Check for airplay support\n        toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n        // Add iOS class\n        toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n        // Add touch class\n        toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            triggerEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n\n        // Assure the poster image is set, if the property was added before the element was created\n        if (this.poster) {\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\n        }\n\n        // Manually set the duration if user has overridden it.\n        // The event listeners for it doesn't get called if preload is disabled (#701)\n        if (this.config.duration) {\n            controls.durationUpdate.call(this);\n        }\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n        }\n\n        // If there's a play button, set label\n        Array.from(this.elements.buttons.play || []).forEach(button => {\n            button.setAttribute('aria-label', label);\n        });\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = getElement.call(this, 'iframe');\n\n            if (!is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !is.empty(this.config.title) ? this.config.title : 'video';\n            const format = i18n.get('frameTitle', this.config);\n\n            iframe.setAttribute('title', format.replace('{title}', title));\n        }\n    },\n\n    // Toggle poster\n    togglePoster(enable) {\n        toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n        // Don't override if call is passive\n        if (passive && this.poster) {\n            return Promise.reject(new Error('Poster already set'));\n        }\n\n        // Set property synchronously to respect the call order\n        this.media.setAttribute('poster', poster);\n\n        // Wait until ui is ready\n        return (\n            ready\n                .call(this)\n                // Load image\n                .then(() => loadImage(poster))\n                .catch(err => {\n                    // Hide poster on error unless it's been set by another call\n                    if (poster === this.poster) {\n                        ui.togglePoster.call(this, false);\n                    }\n                    // Rethrow\n                    throw err;\n                })\n                .then(() => {\n                    // Prevent race conditions\n                    if (poster !== this.poster) {\n                        throw new Error('setPoster cancelled by later call to setPoster');\n                    }\n                })\n                .then(() => {\n                    Object.assign(this.elements.poster.style, {\n                        backgroundImage: `url('${poster}')`,\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n                        backgroundSize: '',\n                    });\n                    ui.togglePoster.call(this, true);\n                    return poster;\n                })\n        );\n    },\n\n    // Check playing state\n    checkPlaying(event) {\n        // Class hooks\n        toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n        toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n        // Set state\n        Array.from(this.elements.buttons.play || []).forEach(target => {\n            target.pressed = this.playing;\n        });\n\n        // Only update controls on non timeupdate events\n        if (is.event(event) && event.type === 'timeupdate') {\n            return;\n        }\n\n        // Toggle controls\n        ui.toggleControls.call(this);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = ['stalled', 'waiting'].includes(event.type);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Update progress bar loading class state\n            toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Update controls visibility\n            ui.toggleControls.call(this);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n        const { controls } = this.elements;\n\n        if (controls && this.config.hideControls) {\n            // Show controls if force, loading, paused, or button interaction, otherwise hide\n            this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover));\n        }\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport browser from './utils/browser';\nimport {\n    getElement,\n    getElements,\n    matches,\n    toggleClass,\n    toggleHidden,\n} from './utils/elements';\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n        this.focusTimer = null;\n        this.lastKeyDown = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.setTabFocus = this.setTabFocus.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            this.player.currentTime = this.player.duration / 10 * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = document.activeElement;\n            if (is.element(focused)) {\n                const { editable } = this.player.config.selectors;\n                const { seek } = this.player.elements.inputs;\n\n                if (focused !== seek && matches(focused, editable)) {\n                    return;\n                }\n\n                if (\n                    event.which === 32 &&\n                    matches(focused, 'button, [role^=\"menuitem\"]')\n                ) {\n                    return;\n                }\n            }\n\n            // Which keycodes should we prevent default\n            const preventDefault = [\n                32,\n                37,\n                38,\n                39,\n                40,\n                48,\n                49,\n                50,\n                51,\n                52,\n                53,\n                54,\n                56,\n                57,\n                67,\n                70,\n                73,\n                75,\n                76,\n                77,\n                79,\n            ];\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        this.player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    this.player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    this.player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        this.player.muted = !this.player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    this.player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    this.player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    this.player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        this.player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    this.player.loop = !this.player.loop;\n                    break;\n\n                /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (\n                !this.player.fullscreen.enabled &&\n                this.player.fullscreen.active &&\n                code === 27\n            ) {\n                this.player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        this.player.touch = true;\n\n        // Add touch class\n        toggleClass(\n            this.player.elements.container,\n            this.player.config.classNames.isTouch,\n            true,\n        );\n    }\n\n    setTabFocus(event) {\n        clearTimeout(this.focusTimer);\n\n        // Ignore any key other than tab\n        if (event.type === 'keydown' && event.code !== 'Tab') {\n            return;\n        }\n\n        // Store reference to event timeStamp\n        if (event.type === 'keydown') {\n            this.lastKeyDown = event.timeStamp;\n        }\n\n        // Remove current classes\n        const removeCurrent = () => {\n            const className = this.player.config.classNames.tabFocus;\n            const current = getElements.call(this.player, `.${className}`);\n            toggleClass(current, className, false);\n        };\n\n        // Determine if a key was pressed to trigger this event\n        const wasKeyDown = event.timeStamp - this.lastKeyDown <= 20;\n\n        // Ignore focus events if a key was pressed prior\n        if (event.type === 'focus' && !wasKeyDown) {\n            return;\n        }\n\n        // Remove all current\n        removeCurrent();\n\n        // Delay the adding of classname until the focus has changed\n        // This event fires before the focusin event\n\n        this.focusTimer = setTimeout(() => {\n            const focused = document.activeElement;\n\n            // Ignore if current focus element isn't inside the player\n            if (!this.player.elements.container.contains(focused)) {\n                return;\n            }\n\n            toggleClass(\n                document.activeElement,\n                this.player.config.classNames.tabFocus,\n                true,\n            );\n        }, 10);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        // Keyboard shortcuts\n        if (this.player.config.keyboard.global) {\n            toggleListener.call(\n                this.player,\n                window,\n                'keydown keyup',\n                this.handleKey,\n                toggle,\n                false,\n            );\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(\n            this.player,\n            document.body,\n            'click',\n            this.toggleMenu,\n            toggle,\n        );\n\n        // Detect touch by events\n        once.call(this.player, document.body, 'touchstart', this.firstTouch);\n\n        // Tab focus detection\n        toggleListener.call(\n            this.player,\n            document.body,\n            'keydown focus blur',\n            this.setTabFocus,\n            toggle,\n            false,\n            true,\n        );\n    }\n\n    // Container listeners\n    container() {\n        // Keyboard shortcuts\n        if (\n            !this.player.config.keyboard.global &&\n            this.player.config.keyboard.focused\n        ) {\n            on.call(\n                this.player,\n                this.player.elements.container,\n                'keydown keyup',\n                this.handleKey,\n                false,\n            );\n        }\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(\n            this.player,\n            this.player.elements.container,\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n            event => {\n                const { controls } = this.player.elements;\n\n                // Remove button states for fullscreen\n                if (event.type === 'enterfullscreen') {\n                    controls.pressed = false;\n                    controls.hover = false;\n                }\n\n                // Show, then hide after a timeout unless another control event occurs\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(\n                    event.type,\n                );\n\n                let delay = 0;\n\n                if (show) {\n                    ui.toggleControls.call(this.player, true);\n                    // Use longer timeout for touch devices\n                    delay = this.player.touch ? 3000 : 2000;\n                }\n\n                // Clear timer\n                clearTimeout(this.player.timers.controls);\n\n                // Set new timer to prevent flicker when seeking\n                this.player.timers.controls = setTimeout(\n                    () => ui.toggleControls.call(this.player, false),\n                    delay,\n                );\n            },\n        );\n    }\n\n    // Listen for media events\n    media() {\n        // Time change on media\n        on.call(\n            this.player,\n            this.player.media,\n            'timeupdate seeking seeked',\n            event => controls.timeUpdate.call(this.player, event),\n        );\n\n        // Display duration\n        on.call(\n            this.player,\n            this.player.media,\n            'durationchange loadeddata loadedmetadata',\n            event => controls.durationUpdate.call(this.player, event),\n        );\n\n        // Check for audio tracks on load\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n        on.call(this.player, this.player.media, 'canplay', () => {\n            toggleHidden(this.player.elements.volume, !this.player.hasAudio);\n            toggleHidden(\n                this.player.elements.buttons.mute,\n                !this.player.hasAudio,\n            );\n        });\n\n        // Handle the media finishing\n        on.call(this.player, this.player.media, 'ended', () => {\n            // Show poster on end\n            if (\n                this.player.isHTML5 &&\n                this.player.isVideo &&\n                this.player.config.resetOnEnd\n            ) {\n                // Restart\n                this.player.restart();\n            }\n        });\n\n        // Check for buffer progress\n        on.call(\n            this.player,\n            this.player.media,\n            'progress playing seeking seeked',\n            event => controls.updateProgress.call(this.player, event),\n        );\n\n        // Handle volume changes\n        on.call(this.player, this.player.media, 'volumechange', event =>\n            controls.updateVolume.call(this.player, event),\n        );\n\n        // Handle play/pause\n        on.call(\n            this.player,\n            this.player.media,\n            'playing play pause ended emptied timeupdate',\n            event => ui.checkPlaying.call(this.player, event),\n        );\n\n        // Loading state\n        on.call(\n            this.player,\n            this.player.media,\n            'waiting canplay seeked playing',\n            event => ui.checkLoading.call(this.player, event),\n        );\n\n        // If autoplay, then load advertisement if required\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n        on.call(this.player, this.player.media, 'playing', () => {\n            if (!this.player.ads) {\n                return;\n            }\n\n            // If ads are enabled, wait for them first\n            if (this.player.ads.enabled && !this.player.ads.initialized) {\n                // Wait for manager response\n                this.player.ads.managerPromise\n                    .then(() => this.player.ads.play())\n                    .catch(() => this.player.play());\n            }\n        });\n\n        // Click video\n        if (\n            this.player.supported.ui &&\n            this.player.config.clickToPlay &&\n            !this.player.isAudio\n        ) {\n            // Re-fetch the wrapper\n            const wrapper = getElement.call(\n                this.player,\n                `.${this.player.config.classNames.video}`,\n            );\n\n            // Bail if there's no wrapper (this should never happen)\n            if (!is.element(wrapper)) {\n                return;\n            }\n\n            // On click play, pause ore restart\n            on.call(this.player, wrapper, 'click', () => {\n                // Touch devices will just show controls (if we're hiding controls)\n                if (\n                    this.player.config.hideControls &&\n                    this.player.touch &&\n                    !this.player.paused\n                ) {\n                    return;\n                }\n\n                if (this.player.paused) {\n                    this.player.play();\n                } else if (this.player.ended) {\n                    this.player.restart();\n                    this.player.play();\n                } else {\n                    this.player.pause();\n                }\n            });\n        }\n\n        // Disable right click\n        if (this.player.supported.ui && this.player.config.disableContextMenu) {\n            on.call(\n                this.player,\n                this.player.elements.wrapper,\n                'contextmenu',\n                event => {\n                    event.preventDefault();\n                },\n                false,\n            );\n        }\n\n        // Volume change\n        on.call(this.player, this.player.media, 'volumechange', () => {\n            // Save to storage\n            this.player.storage.set({\n                volume: this.player.volume,\n                muted: this.player.muted,\n            });\n        });\n\n        // Speed change\n        on.call(this.player, this.player.media, 'ratechange', () => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'speed');\n\n            // Save to storage\n            this.player.storage.set({ speed: this.player.speed });\n        });\n\n        // Quality request\n        on.call(this.player, this.player.media, 'qualityrequested', event => {\n            // Save to storage\n            this.player.storage.set({ quality: event.detail.quality });\n        });\n\n        // Quality change\n        on.call(this.player, this.player.media, 'qualitychange', event => {\n            // Update UI\n            controls.updateSetting.call(\n                this.player,\n                'quality',\n                null,\n                event.detail.quality,\n            );\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        const proxyEvents = this.player.config.events\n            .concat(['keyup', 'keydown'])\n            .join(' ');\n\n        on.call(this.player, this.player.media, proxyEvents, event => {\n            let { detail = {} } = event;\n\n            // Get error details from media\n            if (event.type === 'error') {\n                detail = this.player.media.error;\n            }\n\n            triggerEvent.call(\n                this.player,\n                this.player.elements.container,\n                event.type,\n                true,\n                detail,\n            );\n        });\n    }\n\n    // Run default and custom handlers\n    proxy(event, defaultHandler, customHandlerKey) {\n        const customHandler = this.player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n        let returned = true;\n\n        // Execute custom handler\n        if (hasCustomHandler) {\n            returned = customHandler.call(this.player, event);\n        }\n\n        // Only call default handler if not prevented in custom handler\n        if (returned && is.function(defaultHandler)) {\n            defaultHandler.call(this.player, event);\n        }\n    }\n\n    // Trigger custom and default handlers\n    bind(element, type, defaultHandler, customHandlerKey, passive = true) {\n        const customHandler = this.player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n\n        on.call(\n            this.player,\n            element,\n            type,\n            event => this.proxy(event, defaultHandler, customHandlerKey),\n            passive && !hasCustomHandler,\n        );\n    }\n\n    // Listen for control events\n    controls() {\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Play/pause toggle\n        if (this.player.elements.buttons.play) {\n            Array.from(this.player.elements.buttons.play).forEach(button => {\n                this.bind(button, 'click', this.player.togglePlay, 'play');\n            });\n        }\n\n        // Pause\n        this.bind(\n            this.player.elements.buttons.restart,\n            'click',\n            this.player.restart,\n            'restart',\n        );\n\n        // Rewind\n        this.bind(\n            this.player.elements.buttons.rewind,\n            'click',\n            this.player.rewind,\n            'rewind',\n        );\n\n        // Rewind\n        this.bind(\n            this.player.elements.buttons.fastForward,\n            'click',\n            this.player.forward,\n            'fastForward',\n        );\n\n        // Mute toggle\n        this.bind(\n            this.player.elements.buttons.mute,\n            'click',\n            () => {\n                this.player.muted = !this.player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        this.bind(this.player.elements.buttons.captions, 'click', () =>\n            this.player.toggleCaptions(),\n        );\n\n        // Fullscreen toggle\n        this.bind(\n            this.player.elements.buttons.fullscreen,\n            'click',\n            () => {\n                this.player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        this.bind(\n            this.player.elements.buttons.pip,\n            'click',\n            () => {\n                this.player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        this.bind(\n            this.player.elements.buttons.airplay,\n            'click',\n            this.player.airplay,\n            'airplay',\n        );\n\n        // Settings menu - click toggle\n        this.bind(this.player.elements.buttons.settings, 'click', event => {\n            controls.toggleMenu.call(this.player, event);\n        });\n\n        // Settings menu - keyboard toggle\n        this.bind(\n            this.player.elements.buttons.settings,\n            'keydown',\n            event => {\n                // We only care about space\n                if (event.which !== 32) {\n                    return;\n                }\n\n                // Prevent scroll\n                event.preventDefault();\n\n                // Prevent playing video\n                event.stopPropagation();\n\n                // Toggle menu\n                controls.toggleMenu.call(this.player, event);\n            },\n            null,\n            false,\n        );\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        this.bind(\n            this.player.elements.inputs.seek,\n            'mousedown mousemove',\n            event => {\n                const clientRect = this.player.elements.progress.getBoundingClientRect();\n                const percent =\n                    100 / clientRect.width * (event.pageX - clientRect.left);\n                event.currentTarget.setAttribute('seek-value', percent);\n            },\n        );\n\n        // Pause while seeking\n        this.bind(\n            this.player.elements.inputs.seek,\n            'mousedown mouseup keydown keyup touchstart touchend',\n            event => {\n                const seek = event.currentTarget;\n\n                const code = event.keyCode ? event.keyCode : event.which;\n                const eventType = event.type;\n\n                if (\n                    (eventType === 'keydown' || eventType === 'keyup') &&\n                    (code !== 39 && code !== 37)\n                ) {\n                    return;\n                }\n                // Was playing before?\n                const play = seek.hasAttribute('play-on-seeked');\n\n                // Done seeking\n                const done = ['mouseup', 'touchend', 'keyup'].includes(\n                    event.type,\n                );\n\n                // If we're done seeking and it was playing, resume playback\n                if (play && done) {\n                    seek.removeAttribute('play-on-seeked');\n                    this.player.play();\n                } else if (!done && this.player.playing) {\n                    seek.setAttribute('play-on-seeked', '');\n                    this.player.pause();\n                }\n            },\n        );\n\n        // Seek\n        this.bind(\n            this.player.elements.inputs.seek,\n            inputEvent,\n            event => {\n                const seek = event.currentTarget;\n\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n                let seekTo = seek.getAttribute('seek-value');\n\n                if (is.empty(seekTo)) {\n                    seekTo = seek.value;\n                }\n\n                seek.removeAttribute('seek-value');\n\n                this.player.currentTime =\n                    seekTo / seek.max * this.player.duration;\n            },\n            'seek',\n        );\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (\n            this.player.config.toggleInvert &&\n            !is.element(this.player.elements.display.duration)\n        ) {\n            this.bind(this.player.elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (this.player.currentTime === 0) {\n                    return;\n                }\n\n                this.player.config.invertTime = !this.player.config.invertTime;\n\n                controls.timeUpdate.call(this.player);\n            });\n        }\n\n        // Volume\n        this.bind(\n            this.player.elements.inputs.volume,\n            inputEvent,\n            event => {\n                this.player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            Array.from(\n                getElements.call(this.player, 'input[type=\"range\"]'),\n            ).forEach(element => {\n                this.bind(element, 'input', event =>\n                    controls.updateRangeFill.call(this.player, event.target),\n                );\n            });\n        }\n\n        // Seek tooltip\n        this.bind(\n            this.player.elements.progress,\n            'mouseenter mouseleave mousemove',\n            event => controls.updateSeekTooltip.call(this.player, event),\n        );\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(\n            this.player.elements.controls,\n            'mouseenter mouseleave',\n            event => {\n                this.player.elements.controls.hover =\n                    !this.player.touch && event.type === 'mouseenter';\n            },\n        );\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(\n            this.player.elements.controls,\n            'mousedown mouseup touchstart touchend touchcancel',\n            event => {\n                this.player.elements.controls.pressed = [\n                    'mousedown',\n                    'touchstart',\n                ].includes(event.type);\n            },\n        );\n\n        // Focus in/out on controls\n        this.bind(this.player.elements.controls, 'focusin focusout', event => {\n            const { config, elements, timers } = this.player;\n\n            // Skip transition to prevent focus from scrolling the parent element\n            toggleClass(\n                elements.controls,\n                config.classNames.noTransition,\n                event.type === 'focusin',\n            );\n\n            // Toggle\n            ui.toggleControls.call(this.player, event.type === 'focusin');\n\n            // If focusin, hide again after delay\n            if (event.type === 'focusin') {\n                // Restore transition\n                setTimeout(() => {\n                    toggleClass(\n                        elements.controls,\n                        config.classNames.noTransition,\n                        false,\n                    );\n                }, 0);\n\n                // Delay a little more for keyboard users\n                const delay = this.touch ? 3000 : 4000;\n\n                // Clear timer\n                clearTimeout(timers.controls);\n\n                // Hide\n                timers.controls = setTimeout(\n                    () => ui.toggleControls.call(this.player, false),\n                    delay,\n                );\n            }\n        });\n\n        // Mouse wheel for volume\n        this.bind(\n            this.player.elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n\n                // Get delta from event. Invert if `inverted` is true\n                const [x, y] = [event.deltaX, -event.deltaY].map(\n                    value => (inverted ? -value : value),\n                );\n\n                // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n                const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n                // Change the volume by 2%\n                this.player.increaseVolume(direction / 50);\n\n                // Don't break page scrolling at max and min\n                const { volume } = this.player.media;\n                if (\n                    (direction === 1 && volume < 1) ||\n                    (direction === -1 && volume > 0)\n                ) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n}\n\nexport default Listeners;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText`\n        result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n    return new Promise((resolve, reject) => {\n        loadjs(url, {\n            success: resolve,\n            error: reject,\n        });\n    });\n}\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from '../captions';\nimport controls from '../controls';\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { format, stripHTML } from '../utils/strings';\nimport { buildUrlParams } from '../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    if (is.number(Number(url))) {\n        return url;\n    }\n\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Get aspect ratio for dimensions\nfunction getAspectRatio(width, height) {\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n    const ratio = getRatio(width, height);\n    return `${width / ratio}:${height / ratio}`;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!is.object(window.Vimeo)) {\n            loadScript(this.config.urls.vimeo.sdk)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':');\n        const padding = 100 / x * y;\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            // muted: player.muted,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n        };\n        const params = buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(player.config.attributes.embed.id);\n        }\n\n        const id = parseId(source);\n\n        // Build an iframe\n        const iframe = createElement('iframe');\n        const src = format(player.config.urls.vimeo.iframe, id, params);\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Inject the package\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n\n        // Get poster image\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\n            if (is.empty(response)) {\n                return;\n            }\n\n            // Get the URL for thumbnail\n            const url = new URL(response[0].thumbnail_large);\n\n            // Get original image\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\n\n            // Set and show poster\n            ui.setPoster.call(player, url.href).catch(() => {});\n        });\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe, {\n            autopause: player.config.autopause,\n            muted: player.muted,\n        });\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            return player.embed.play();\n        };\n\n        player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            return player.embed.pause();\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Vimeo will automatically play on seek if the video hasn't been played before\n\n                // Get current paused state and volume etc\n                const { embed, media, paused, volume } = player;\n                const restorePause = paused && !embed.hasPlayed;\n\n                // Set seeking state and trigger event\n                media.seeking = true;\n                triggerEvent.call(player, media, 'seeking');\n\n                // If paused, mute until seek is complete\n                Promise.resolve(restorePause && embed.setVolume(0))\n                    // Seek\n                    .then(() => embed.setCurrentTime(time))\n                    // Restore paused\n                    .then(() => restorePause && embed.pause())\n                    // Restore volume\n                    .then(() => restorePause && embed.setVolume(volume))\n                    .catch(() => {\n                        // Do nothing\n                    });\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        triggerEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n            const ratio = getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', ({ cues = [] }) => {\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\n            captions.updateCues.call(player, strippedCues);\n        });\n\n        player.embed.on('loaded', () => {\n            // Assure state and events are updated on autoplay\n            player.embed.getPaused().then(paused => {\n                assurePlaybackState.call(player, !paused);\n                if (!paused) {\n                    triggerEvent.call(player, player.media, 'playing');\n                }\n            });\n\n            if (is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            assurePlaybackState.call(player, true);\n            triggerEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            assurePlaybackState.call(player, false);\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            triggerEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    triggerEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            triggerEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            triggerEvent.call(player, player.media, 'error');\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport controls from '../controls';\nimport ui from '../ui';\nimport { dedupe } from '../utils/arrays';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadImage from '../utils/loadImage';\nimport loadScript from '../utils/loadScript';\nimport { format, generateId } from '../utils/strings';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Standardise YouTube quality unit\nfunction mapQualityUnit(input) {\n    const qualities = {\n        hd2160: 2160,\n        hd1440: 1440,\n        hd1080: 1080,\n        hd720: 720,\n        large: 480,\n        medium: 360,\n        small: 240,\n        tiny: 144,\n    };\n\n    const entry = Object.entries(qualities).find(entry => entry.includes(input));\n\n    if (entry) {\n        // Get the match corresponding to the input\n        return entry.find(value => value !== input);\n    }\n\n    return 'default';\n}\n\nfunction mapQualityUnits(levels) {\n    if (is.empty(levels)) {\n        return levels;\n    }\n\n    return dedupe(levels.map(level => mapQualityUnit(level)));\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (is.string(key) && !is.empty(key)) {\n            const url = format(this.config.urls.youtube.api, videoId, key);\n\n            fetch(url)\n                .then(result => {\n                    if (is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = parseId(source);\n        const id = generateId(player.provider);\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Replace media element\n        const container = createElement('div', { id, poster });\n        player.media = replaceElement(container, player.media);\n\n        // Id to poster wrapper\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n            .then(image => ui.setPoster.call(player, image.src))\n            .then(posterSrc => {\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n                if (!posterSrc.includes('maxres')) {\n                    player.elements.poster.style.backgroundSize = 'cover';\n                }\n            })\n            .catch(() => {});\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // YouTube may fire onError twice, so only handle it once\n                    if (!player.media.error) {\n                        const code = event.data;\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                        const message =\n                            {\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n                            }[code] || 'An unknown error occured';\n\n                        player.media.error = { code, message };\n\n                        triggerEvent.call(player, player.media, 'error');\n                    }\n                },\n                onPlaybackQualityChange() {\n                    triggerEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: player.media.quality,\n                    });\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    triggerEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        assurePlaybackState.call(player, true);\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        assurePlaybackState.call(player, false);\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                            if (player.paused && !player.embed.hasPlayed) {\n                                player.embed.mute();\n                            }\n\n                            // Set seeking state and trigger event\n                            player.media.seeking = true;\n                            triggerEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Quality\n                    Object.defineProperty(player.media, 'quality', {\n                        get() {\n                            return mapQualityUnit(instance.getPlaybackQuality());\n                        },\n                        set(input) {\n                            instance.setPlaybackQuality(mapQualityUnit(input));\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                    triggerEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            triggerEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            triggerEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n                    if (seeked) {\n                        // Unset seeking and fire seeked event\n                        player.media.seeking = false;\n                        triggerEvent.call(player, player.media, 'seeked');\n                    }\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            triggerEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            triggerEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            assurePlaybackState.call(player, false);\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                triggerEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (player.media.paused && !player.embed.hasPlayed) {\n                                player.media.pause();\n                            } else {\n                                assurePlaybackState.call(player, true);\n\n                                triggerEvent.call(player, player.media, 'playing');\n\n                                // Poll to get playback progress\n                                player.timers.playing = setInterval(() => {\n                                    triggerEvent.call(player, player.media, 'timeupdate');\n                                }, 50);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (player.media.duration !== instance.getDuration()) {\n                                    player.media.duration = instance.getDuration();\n                                    triggerEvent.call(player, player.media, 'durationchange');\n                                }\n\n                                // Get quality\n                                controls.setQualityMenu.call(\n                                    player,\n                                    mapQualityUnits(instance.getAvailableQualityLevels()),\n                                );\n                            }\n\n                            break;\n\n                        case 2:\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (!player.muted) {\n                                player.embed.unMute();\n                            }\n                            assurePlaybackState.call(player, false);\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            wrap(this.media, this.elements.wrapper);\n\n            // Faux poster container\n            this.elements.poster = createElement('div', {\n                class: this.config.classNames.poster,\n            });\n\n            this.elements.wrapper.appendChild(this.elements.poster);\n        }\n\n        if (this.isHTML5) {\n            html5.extend.call(this);\n        } else if (this.isYouTube) {\n            youtube.setup.call(this);\n        } else if (this.isVimeo) {\n            vimeo.setup.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport i18n from '../i18n';\nimport { createElement } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { formatTime } from '../utils/time';\nimport { buildUrlParams } from '../utils/urls';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    get enabled() {\n        return (\n            this.player.isHTML5 && this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId)\n        );\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\n                loadScript(this.player.config.urls.googleIMA.sdk)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: window.location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n                event => this.onAdsManagerLoaded(event),\n                false,\n            );\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            // Mute based on current state\n            request.setAdWillPlayMuted(!this.player.muted);\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Get skippable state\n        // TODO: Skip button\n        // this.player.debug.warn(this.manager.getAdSkippableState());\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            triggerEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport { providers } from './config/types';\nimport html5 from './html5';\nimport media from './media';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement } from './utils/elements';\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (is.string(attributes)) {\n            insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (is.array(attributes)) {\n            attributes.forEach(attribute => {\n                insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!getDeep(input, 'sources.length')) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                removeElement(this.media);\n                this.media = null;\n\n                // Reset class name\n                if (is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // Set the type and provider\n                const { sources, type } = input;\n                const [{ provider = providers.html5, src }] = sources;\n                const tagName = provider === 'html5' ? type : 'div';\n                const attributes = provider === 'html5' ? {} : { src };\n\n                Object.assign(this, {\n                    provider,\n                    type,\n                    // Check for support\n                    supported: support.check(type, provider, this.config.playsinline),\n                    // Create new element\n                    media: createElement(tagName, attributes),\n                });\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if (!is.empty(input.poster)) {\n                        this.poster = input.poster;\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', sources);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if ('tracks' in input) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                    }\n\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.3.22\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport Listeners from './listeners';\nimport media from './media';\nimport Ads from './plugins/ads';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { closest } from './utils/arrays';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { cloneDeep, extend } from './utils/objects';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = extend(\n            {},\n            defaults,\n            Plyr.defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            captions: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                popup: null,\n                menu: null,\n                panels: {},\n                buttons: {},\n            },\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: -1,\n            meta: new WeakMap(),\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        const clone = this.media.cloneNode(true);\n        clone.autoplay = false;\n        this.elements.original = clone;\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (is.element(iframe)) {\n                    // Detect provider\n                    url = parseUrl(iframe.getAttribute('src'));\n                    this.provider = getProviderByUrl(url.toString());\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    if (url.searchParams.length) {\n                        const truthy = ['1', 'true'];\n\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(url.searchParams.get('loop'))) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        this.eventListeners = [];\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!is.element(this.elements.container)) {\n            this.elements.container = createElement('div');\n            wrap(this.media, this.elements.container);\n        }\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            on.call(this, this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        this.ads = new Ads(this);\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!is.function(this.media.play)) {\n            return null;\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n        return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.pause();\n            this.restart();\n        } else if (is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        // Bail if media duration isn't available yet\n        if (!this.duration) {\n            return;\n        }\n\n        // Validate input\n        const inputIsValid = is.number(input) && input > 0;\n\n        // Set\n        this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // Media duration can be NaN or Infinity before the media has loaded\n        const realDuration = (this.media || {}).duration;\n        const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\n\n        // If config duration is funky, use regular duration\n        return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 0);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        this.increaseVolume(-step);\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (is.number(input)) {\n            speed = input;\n        }\n\n        if (!is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        const config = this.config.quality;\n        const options = this.options.quality;\n\n        if (!options.length) {\n            return;\n        }\n\n        let quality = [\n            !is.empty(input) && Number(input),\n            this.storage.get('quality'),\n            config.selected,\n            config.default,\n        ].find(is.number);\n\n        if (!options.includes(quality)) {\n            const value = closest(options, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n            quality = value;\n        }\n\n        // Trigger request event\n        triggerEvent.call(this, this.media, 'qualityrequested', false, { quality });\n\n        // Update config\n        config.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isVideo) {\n            this.debug.warn('Poster can only be set for video');\n            return;\n        }\n\n        ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {number} - Caption index\n     */\n    set currentTrack(input) {\n        captions.set.call(this, input, false);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n        const { toggled, currentTrack } = this.captions;\n        return toggled ? currentTrack : -1;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n        return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        const states = {\n            pip: 'picture-in-picture',\n            inline: 'inline',\n        };\n\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = is.boolean(input) ? input : this.pip === states.inline;\n\n        // Toggle based on current state\n        this.media.webkitSetPresentationMode(toggle ? states.pip : states.inline);\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        return this.media.webkitPresentationMode;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} [toggle] - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n            // Get state before change\n            const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n\n            // Negate the argument if not undefined since adding the class to hides the controls\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\n\n            // Apply and get updated state\n            const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n            // Close menu\n            if (hiding && this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n                controls.toggleMenu.call(this, false);\n            }\n            // Trigger event on change\n            if (hiding !== isHidden) {\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\n                triggerEvent.call(this, this.media, eventName);\n            }\n            return !hiding;\n        }\n        return false;\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        on.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Add event listeners once\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    once(event, callback) {\n        once.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    removeElement(this.elements.buttons.play);\n                    removeElement(this.elements.captions);\n                    removeElement(this.elements.controls);\n                    removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                unbindListeners.call(this);\n\n                // Replace the container with the original element provided\n                replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n            // Clear timeout\n            clearTimeout(this.timers.loading);\n\n            // Restore native video controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Clean up\n            done();\n        } else if (this.isYouTube) {\n            // Clear timers\n            clearInterval(this.timers.buffering);\n            clearInterval(this.timers.playing);\n\n            // Destroy YouTube API\n            if (this.embed !== null && is.function(this.embed.destroy)) {\n                this.embed.destroy();\n            }\n\n            // Clean up\n            done();\n        } else if (this.isVimeo) {\n            // Destroy Vimeo API\n            // then clean up (wait, to prevent postmessage errors)\n            if (this.embed !== null) {\n                this.embed.unload().then(done);\n            }\n\n            // Vimeo does not always return\n            setTimeout(done, 200);\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {object} options\n     */\n    static setup(selector, options = {}) {\n        let targets = null;\n\n        if (is.string(selector)) {\n            targets = Array.from(document.querySelectorAll(selector));\n        } else if (is.nodeList(selector)) {\n            targets = Array.from(selector);\n        } else if (is.array(selector)) {\n            targets = selector.filter(is.element);\n        }\n\n        if (is.empty(targets)) {\n            return null;\n        }\n\n        return targets.map(t => new Plyr(t, options));\n    }\n}\n\nPlyr.defaults = cloneDeep(defaults);\n\nexport default Plyr;\n"]}