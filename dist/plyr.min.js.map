{"version":3,"sources":["src/js/utils/is.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/i18n.js","src/js/utils/arrays.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/utils/loadImage.js","src/js/ui.js","src/js/listeners.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/source.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","isNullOrUndefined","isObject","Object","isString","String","isArray","Array","isNodeList","NodeList","isEmpty","length","keys","is","nullOrUndefined","object","number","Number","isNaN","string","boolean","function","Function","array","weakMap","WeakMap","nodeList","element","Element","textNode","Text","event","Event","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","URL","startsWith","hostname","e","empty","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","toggleListener","callback","toggle","arguments","undefined","_this","this","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","args","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","wrap","elements","wrapper","targets","from","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","filter","_ref","value","slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","hasAttribute","removeAttribute","toggleClass","force","map","method","classList","contains","hasClass","matches","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","querySelectorAll","includes","getElements","container","getElement","querySelector","setFocus","tabFocus","focus","config","classNames","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","find","style","repaint","setTimeout","offsetHeight","range","browser","isIE","documentMode","isWebkit","documentElement","test","navigator","userAgent","isIPhone","platform","isIos","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","inputType","_inputType$split","mediaType","isHTML5","media","canPlayType","err","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","extend","player","set","_player$media","currentTime","paused","preload","readyState","src","play","load","quality","cancelRequests","blankVideo","debug","log","getDeep","path","reduce","obj","target","sources","shift","concat","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","i18n","{seektime}","seekTime","{title}","title","_ref2","dedupe","item","indexOf","Storage","classCallCheck","enabled","storage","store","localStorage","getItem","json","JSON","parse","setItem","stringify","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","Error","status","open","send","loadSprite","hasId","exists","getElementById","update","data","body","insertAdjacentElement","useStorage","cached","prefix","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","controls","getIconUrl","cors","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","pause","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","button","label","labelPressed","iconPressed","control","controlPressed","enumerable","pressed","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","bindMenuItemShortcuts","menuItem","which","preventDefault","stopPropagation","isRadioButton","showMenuPanel","nextElementSibling","firstElementChild","previousElementSibling","lastElementChild","createMenuItem","_this2","list","_ref$badge","_ref$checked","checked","aria-checked","flex","children","node","listeners","bind","currentTrack","speed","parseFloat","updateTimeDisplay","updateVolume","setRange","muted","updateProgress","_this3","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this4","tooltips","clientRect","getBoundingClientRect","visible","_toggle","width","pageX","left","timeUpdate","invert","invertTime","seeking","durationUpdate","Math","pow","hasDuration","displayDuration","toggleMenuButton","setting","updateSetting","pane","panels","default","getLabel","setQualityMenu","_this5","checkMenu","sort","a","b","sorting","getBadge","setCaptionsMenu","_this6","tracks","getTracks","toggled","language","unshift","setSpeedMenu","_this7","isVimeo","values","some","toggleMenu","popup","show","isMenuItem","isButton","firstItem","getMenuSize","tab","clone","position","opacity","scrollWidth","height","scrollHeight","_this8","size","restore","propertyName","create","_this9","aria-haspopup","aria-controls","aria-expanded","aria-labelled-by","inner","home","backButton","inject","_this10","floor","random","props","seektime","insertAdjacentHTML","_config","labels","parseUrl","parser","href","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","protocol","blob","createObjectURL","languages","userLanguage","active","trackEvents","_captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","activeClass","findTrack","toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","caption","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","loop","selected","keyboard","focused","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","frameTitle","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","urls","vimeo","sdk","iframe","youtube","googleIMA","editable","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","google","publisherId","providers","types","noop","Console","console","onChange","first","last","keyCode","activeElement","shiftKey","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","Fullscreen","property","native","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","build","checkPlaying","ready","setTitle","setPoster","isEmbed","togglePoster","enable","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","Listeners","lastKey","focusTimer","lastKeyDown","handleKey","setTabFocus","firstTouch","code","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","timeStamp","wasKeyDown","delay","hasAudio","initialized","managerPromise","isAudio","ended","proxyEvents","_event$detail","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","proxy","inputEvent","rect","currentTarget","eventType","done","seekTo","isFocusIn","webkitDirectionInvertedFromDevice","_map","deltaX","deltaY","_map2","direction","sign","abs","factory","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isCss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","onbeforeload","ev","sheet","cssText","defaultPrevented","head","loadjs","paths","arg1","arg2","fn","numWaiting","loadFiles","deps","bundleIds","r","subscribe","isDefined","module","exports","loadScript","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split","_split2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","name","setLoop","currentSrc","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","getAspectRatio","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","mapQualityUnit","entry","hd2160","hd1440","hd1080","hd720","large","medium","small","tiny","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","posterSrc","format$$1","playerVars","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackQualityChange","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","getPlaybackQuality","setPlaybackQuality","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","levels","getAvailableQualityLevels","level","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","initialize","init","adError","zIndex","destroy","_this11","handlers","_this12","base","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","Date","now","AV_WIDTH","AV_HEIGHT","AV_CDIM2","insertElements","attribute","change","_sources$","_sources$$provider","tagName","crossorigin","Plyr","failed","jQuery","original","getProviderByUrl","searchParams","truthy","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","realDuration","Infinity","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","prev","curr","closest","states","webkitPresentationMode","inline","t"],"mappings":"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","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = input => input === null || typeof input === 'undefined';\nconst isObject = input => getConstructor(input) === Object;\nconst isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = input => getConstructor(input) === String;\nconst isBoolean = input => getConstructor(input) === Boolean;\nconst isFunction = input => getConstructor(input) === Function;\nconst isArray = input => Array.isArray(input);\nconst isWeakMap = input => instanceOf(input, WeakMap);\nconst isNodeList = input => instanceOf(input, NodeList);\nconst isElement = input => instanceOf(input, Element);\nconst isTextNode = input => getConstructor(input) === Text;\nconst isEvent = input => instanceOf(input, Event);\nconst isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\nconst isTrack = input => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\n\nconst isEmpty = input =>\n    isNullOrUndefined(input) ||\n    ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\n    (isObject(input) && !Object.keys(input).length);\n\nconst isUrl = input => {\n    // Accept a URL object\n    if (instanceOf(input, window.URL)) {\n        return true;\n    }\n\n    // Add the protocol if required\n    let string = input;\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\n        string = `http://${input}`;\n    }\n\n    try {\n        return !isEmpty(new URL(string).hostname);\n    } catch (e) {\n        return false;\n    }\n};\n\nexport default {\n    nullOrUndefined: isNullOrUndefined,\n    object: isObject,\n    number: isNumber,\n    string: isString,\n    boolean: isBoolean,\n    function: isFunction,\n    array: isArray,\n    weakMap: isWeakMap,\n    nodeList: isNodeList,\n    element: isElement,\n    textNode: isTextNode,\n    event: isEvent,\n    cue: isCue,\n    track: isTrack,\n    url: isUrl,\n    empty: isEmpty,\n};\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get() {\n                supported = true;\n                return null;\n            },\n        });\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n        // Do nothing\n    }\n\n    return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(\n    element,\n    event,\n    callback,\n    toggle = false,\n    passive = true,\n    capture = false,\n) {\n    // Bail if no element, event, or callback\n    if (\n        !element ||\n        !('addEventListener' in element) ||\n        is.empty(event) ||\n        !is.function(callback)\n    ) {\n        return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n        options = {\n            // Whether the listener can be passive (i.e. default never prevented)\n            passive,\n            // Whether the listener is a capturing listener or not\n            capture,\n        };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n        if (this && this.eventListeners && toggle) {\n            // Cache event listener\n            this.eventListeners.push({ element, type, callback, options });\n        }\n\n        element[toggle ? 'addEventListener' : 'removeEventListener'](\n            type,\n            callback,\n            options,\n        );\n    });\n}\n\n// Bind event handler\nexport function on(\n    element,\n    events = '',\n    callback,\n    passive = true,\n    capture = false,\n) {\n    toggleListener.call(\n        this,\n        element,\n        events,\n        callback,\n        true,\n        passive,\n        capture,\n    );\n}\n\n// Unbind event handler\nexport function off(\n    element,\n    events = '',\n    callback,\n    passive = true,\n    capture = false,\n) {\n    toggleListener.call(\n        this,\n        element,\n        events,\n        callback,\n        false,\n        passive,\n        capture,\n    );\n}\n\n// Bind once-only event handler\nexport function once(\n    element,\n    events = '',\n    callback,\n    passive = true,\n    capture = false,\n) {\n    function onceCallback(...args) {\n        off(element, events, onceCallback, passive, capture);\n        callback.apply(this, args);\n    }\n\n    toggleListener.call(\n        this,\n        element,\n        events,\n        onceCallback,\n        true,\n        passive,\n        capture,\n    );\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n        return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n        bubbles,\n        detail: Object.assign({}, detail, {\n            plyr: this,\n        }),\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n    if (this && this.eventListeners) {\n        this.eventListeners.forEach(item => {\n            const { element, type, callback, options } = item;\n            element.removeEventListener(type, callback, options);\n        });\n\n        this.eventListeners = [];\n    }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n    return new Promise(\n        resolve =>\n            this.ready\n                ? setTimeout(resolve, 0)\n                : on.call(this, this.elements.container, 'ready', resolve),\n    ).then(() => {});\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport { toggleListener } from './events';\nimport is from './is';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets)\n        .reverse()\n        .forEach((element, index) => {\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n            // Cache the current parent and sibling.\n            const parent = element.parentNode;\n            const sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n        });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n        return;\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes)\n        .filter(([, value]) => !is.nullOrUndefined(value))\n        .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n        setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n        element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n    if (!is.element(element) || !is.element(target)) {\n        return;\n    }\n\n    target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n    if (!is.element(parent)) {\n        return;\n    }\n\n    parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n        Array.from(element).forEach(removeElement);\n        return;\n    }\n\n    if (!is.element(element) || !is.element(element.parentNode)) {\n        return;\n    }\n\n    element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let { length } = element.childNodes;\n\n    while (length > 0) {\n        element.removeChild(element.lastChild);\n        length -= 1;\n    }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n    if (\n        !is.element(oldChild) ||\n        !is.element(oldChild.parentNode) ||\n        !is.element(newChild)\n    ) {\n        return null;\n    }\n\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n\n    return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) {\n        return {};\n    }\n\n    const attributes = {};\n    const existing = existingAttributes;\n\n    sel.split(',').forEach(s => {\n        // Remove whitespace\n        const selector = s.trim();\n        const className = selector.replace('.', '');\n        const stripped = selector.replace(/[[\\]]/g, '');\n\n        // Get the parts and value\n        const parts = stripped.split('=');\n        const key = parts[0];\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n        // Get the first character\n        const start = selector.charAt(0);\n\n        switch (start) {\n            case '.':\n                // Add to existing classname\n                if (is.object(existing) && is.string(existing.class)) {\n                    existing.class += ` ${className}`;\n                }\n\n                attributes.class = className;\n                break;\n\n            case '#':\n                // ID selector\n                attributes.id = selector.replace('#', '');\n                break;\n\n            case '[':\n                // Attribute selector\n                attributes[key] = value;\n\n                break;\n\n            default:\n                break;\n        }\n    });\n\n    return attributes;\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let hide = hidden;\n\n    if (!is.boolean(hide)) {\n        hide = !element.hasAttribute('hidden');\n    }\n\n    if (hide) {\n        element.setAttribute('hidden', '');\n    } else {\n        element.removeAttribute('hidden');\n    }\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n    if (is.nodeList(element)) {\n        return Array.from(element).map(e => toggleClass(e, className, force));\n    }\n\n    if (is.element(element)) {\n        let method = 'toggle';\n        if (typeof force !== 'undefined') {\n            method = force ? 'add' : 'remove';\n        }\n\n        element.classList[method](className);\n        return element.classList.contains(className);\n    }\n\n    return false;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n    const prototype = { Element };\n\n    function match() {\n        return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n\n    const matches =\n        prototype.matches ||\n        prototype.webkitMatchesSelector ||\n        prototype.mozMatchesSelector ||\n        prototype.msMatchesSelector ||\n        match;\n\n    return matches.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n}\n\n// Trap focus inside container\nexport function trapFocus(element = null, toggle = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    const focusable = getElements.call(\n        this,\n        'button:not(:disabled), input:not(:disabled), [tabindex]',\n    );\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    const trap = event => {\n        // Bail if not tab key or not fullscreen\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\n            return;\n        }\n\n        // Get the current focused element\n        const focused = document.activeElement;\n\n        if (focused === last && !event.shiftKey) {\n            // Move focus to first element that can be tabbed if Shift isn't used\n            first.focus();\n            event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n            // Move focus to last element that can be tabbed if Shift is used\n            last.focus();\n            event.preventDefault();\n        }\n    };\n\n    toggleListener.call(\n        this,\n        this.elements.container,\n        'keydown',\n        trap,\n        toggle,\n        false,\n    );\n}\n\n// Set focus and tab focus class\nexport function setFocus(element = null, tabFocus = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    // Set regular focus\n    element.focus();\n\n    // If we want to mimic keyboard focus via tab\n    if (tabFocus) {\n        toggleClass(element, this.config.classNames.tabFocus);\n    }\n}\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport { toggleHidden } from './elements';\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n\n    const events = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend',\n    };\n\n    const type = Object.keys(events).find(\n        event => element.style[event] !== undefined,\n    );\n\n    return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element) {\n    setTimeout(() => {\n        try {\n            toggleHidden(element, true);\n            element.offsetHeight; // eslint-disable-line\n            toggleHidden(element, false);\n        } catch (e) {\n            // Do nothing\n        }\n    }, 0);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n};\n\nexport default browser;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        const canPlayInline =\n            browser.isIPhone && playsinline && support.playsinline;\n        const api = support[type] || provider !== 'html5';\n        const ui =\n            api &&\n            support.rangeInput &&\n            (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari only currently\n    pip: (() =>\n        !browser.isIPhone &&\n        is.function(createElement('video').webkitSetPresentationMode))(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(inputType) {\n        const [mediaType] = inputType.split('/');\n        if (!this.isHTML5 || mediaType !== this.type) {\n            return false;\n        }\n\n        let type;\n        if (inputType && inputType.includes('codecs=')) {\n            // Use input directly\n            type = inputType;\n        } else if (inputType === 'audio/mpeg') {\n            // Skip codec\n            type = 'audio/mpeg;';\n        } else if (inputType in defaultCodecs) {\n            // Use codec\n            type = `${inputType}; codecs=\"${defaultCodecs[inputType]}\"`;\n        }\n\n        try {\n            return Boolean(\n                type && this.media.canPlayType(type).replace(/no/, ''),\n            );\n        } catch (err) {\n            return false;\n        }\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion:\n        'matchMedia' in window &&\n        window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return [];\n        }\n\n        const sources = Array.from(this.media.querySelectorAll('source'));\n\n        // Filter out unsupported sources\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        // Get sizes from <source> elements\n        return html5.getSources\n            .call(this)\n            .map(source => Number(source.getAttribute('size')))\n            .filter(Boolean);\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n                const source = sources.find(source => source.getAttribute('src') === player.source);\n\n                // Return size, if match is found\n                return source && Number(source.getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                // Get first match for requested size\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\n\n                // No matching source found\n                if (!source) {\n                    return;\n                }\n\n                // Get current state\n                const { currentTime, paused, preload, readyState } = player.media;\n\n                // Set new source\n                player.media.src = source.getAttribute('src');\n\n                // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n                if (preload !== 'none' || readyState) {\n                    // Restore time\n                    player.once('loadedmetadata', () => {\n                        player.currentTime = currentTime;\n\n                        // Resume playing\n                        if (!paused) {\n                            player.play();\n                        }\n                    });\n\n                    // Load new source\n                    player.media.load();\n                }\n\n                // Trigger change event\n                triggerEvent.call(player, player.media, 'qualitychange', false, {\n                    quality: input,\n                });\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        // Remove child sources\n        removeElement(html5.getSources.call(this));\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n\n    const source = sources.shift();\n\n    if (!is.object(source)) {\n        return target;\n    }\n\n    Object.keys(source).forEach(key => {\n        if (is.object(source[key])) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, { [key]: {} });\n            }\n\n            extend(target[key], source[key]);\n        } else {\n            Object.assign(target, { [key]: source[key] });\n        }\n    });\n\n    return extend(target, ...sources);\n}\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n    if (is.empty(input)) {\n        return input;\n    }\n\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n        return 0;\n    }\n\n    return (current / max * 100).toFixed(2);\n}\n\n// Replace all occurances of a string in a string\nexport function replaceAll(input = '', find = '', replace = '') {\n    return input.replace(\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\n        replace.toString(),\n    );\n}\n\n// Convert to title case\nexport function toTitleCase(input = '') {\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n}\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\nimport { replaceAll } from './utils/strings';\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (is.empty(key) || is.empty(config)) {\n            return '';\n        }\n\n        let string = getDeep(config.i18n, key);\n\n        if (is.empty(string)) {\n            return '';\n        }\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([key, value]) => {\n            string = replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n    if (!is.array(array)) {\n        return array;\n    }\n\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n        return null;\n    }\n\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported || !this.enabled) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n        try {\n            const request = new XMLHttpRequest();\n\n            // Check for CORS support\n            if (!('withCredentials' in request)) {\n                return;\n            }\n\n            request.addEventListener('load', () => {\n                if (responseType === 'text') {\n                    try {\n                        resolve(JSON.parse(request.responseText));\n                    } catch (e) {\n                        resolve(request.responseText);\n                    }\n                } else {\n                    resolve(request.response);\n                }\n            });\n\n            request.addEventListener('error', () => {\n                throw new Error(request.status);\n            });\n\n            request.open('GET', url, true);\n\n            // Set the required response type\n            request.responseType = responseType;\n\n            request.send();\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from '../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id) {\n    if (!is.string(url)) {\n        return;\n    }\n\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n\n    const exists = () => document.getElementById(id) !== null;\n\n    const update = (container, data) => {\n        container.innerHTML = data;\n\n        // Check again incase of race condition\n        if (hasId && exists()) {\n            return;\n        }\n\n        // Inject the SVG to the body\n        document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n        const useStorage = Storage.supported;\n\n        // Create container\n        const container = document.createElement('div');\n        container.setAttribute('hidden', '');\n\n        if (hasId) {\n            container.setAttribute('id', id);\n        }\n\n        // Check in cache\n        if (useStorage) {\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\n            isCached = cached !== null;\n\n            if (isCached) {\n                const data = JSON.parse(cached);\n                update(container, data.content);\n            }\n        }\n\n        // Get the sprite\n        fetch(url)\n            .then(result => {\n                if (is.empty(result)) {\n                    return;\n                }\n\n                if (useStorage) {\n                    window.localStorage.setItem(\n                        `${prefix}-${id}`,\n                        JSON.stringify({\n                            content: result,\n                        }),\n                    );\n                }\n\n                update(container, result);\n            })\n            .catch(() => {});\n    }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\nexport const getSeconds = value => parseInt(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n        return formatTime(null, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n        hours = `${hours}:`;\n    } else {\n        hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// TODO: This needs to be split into smaller files and cleaned up\n// ==========================================================================\n\nimport captions from './captions';\nimport html5 from './html5';\nimport i18n from './i18n';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport { createElement, emptyElement, getAttributesFromSelector, getElement, getElements, hasClass, matches, removeElement, setAttributes, setFocus, toggleClass, toggleHidden } from './utils/elements';\nimport { off, on } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n    // Get icon URL\n    getIconUrl() {\n        const url = new URL(this.config.iconUrl, window.location);\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n        return {\n            url: this.config.iconUrl,\n            cors,\n        };\n    },\n\n    // Find the UI controls\n    findElements() {\n        try {\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: getElements.call(this, this.config.selectors.buttons.play),\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n                duration: getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\n                    `.${this.config.classNames.tooltip}`,\n                );\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        setAttributes(\n            icon,\n            extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        } else {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n        }\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(type, attr = {}) {\n        // Skip i18n for abbreviations and brand names\n        const universals = {\n            pip: 'PIP',\n            airplay: 'AirPlay',\n        };\n        const text = universals[type] || i18n.get(type, this.config);\n\n        const attributes = Object.assign({}, attr, {\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\n        });\n        return createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (is.empty(text)) {\n            return null;\n        }\n\n        const badge = createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const button = createElement('button');\n        const attributes = Object.assign({}, attr);\n        let type = toCamelCase(buttonType);\n\n        let toggle = false;\n        let label;\n        let icon;\n        let labelPressed;\n        let iconPressed;\n\n        if (!('type' in attributes)) {\n            attributes.type = 'button';\n        }\n\n        if ('class' in attributes) {\n            if (!attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                toggle = true;\n                label = 'play';\n                labelPressed = 'pause';\n                icon = 'play';\n                iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                toggle = true;\n                label = 'mute';\n                labelPressed = 'unmute';\n                icon = 'volume';\n                iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                toggle = true;\n                label = 'enableCaptions';\n                labelPressed = 'disableCaptions';\n                icon = 'captions-off';\n                iconPressed = 'captions-on';\n                break;\n\n            case 'fullscreen':\n                toggle = true;\n                label = 'enterFullscreen';\n                labelPressed = 'exitFullscreen';\n                icon = 'enter-fullscreen';\n                iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                label = 'play';\n                icon = 'play';\n                break;\n\n            default:\n                label = type;\n                icon = buttonType;\n        }\n\n        // Setup toggle icon and labels\n        if (toggle) {\n            // Icon\n            button.appendChild(controls.createIcon.call(this, iconPressed, { class: 'icon--pressed' }));\n            button.appendChild(controls.createIcon.call(this, icon, { class: 'icon--not-pressed' }));\n\n            // Label/Tooltip\n            button.appendChild(controls.createLabel.call(this, labelPressed, { class: 'label--pressed' }));\n            button.appendChild(controls.createLabel.call(this, label, { class: 'label--not-pressed' }));\n        } else {\n            button.appendChild(controls.createIcon.call(this, icon));\n            button.appendChild(controls.createLabel.call(this, label));\n        }\n\n        // Merge attributes\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n\n        setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        // Toggle classname when pressed property is set\n        const className = this.config.classNames.controlPressed;\n        Object.defineProperty(button, 'pressed', {\n            enumerable: true,\n            get() {\n                return hasClass(button, className);\n            },\n            set(pressed = false) {\n                toggleClass(button, className, pressed);\n            },\n        });\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek input\n        const input = createElement(\n            'input',\n            extend(\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-label': i18n.get(type, this.config),\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return input;\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = createElement(\n            'progress',\n            extend(\n                getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(createElement('span', null, '0'));\n\n            const suffixKey = {\n                played: 'played',\n                buffer: 'buffered',\n            }[type];\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n            progress.innerText = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\n\n        const container = createElement(\n            'div',\n            extend(attributes, {\n                class: `${this.config.classNames.display.time} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-label': i18n.get(type, this.config),\n            }),\n            '00:00',\n        );\n\n        // Reference for updates\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Bind keyboard shortcuts for a menu item\n    bindMenuItemShortcuts(menuItem, type) {\n        // Handle space or -> to open menu\n        on(menuItem, 'keydown', event => {\n            // We only care about space and ⬆️ ⬇️️ ➡️\n            if (![32,38,39,40].includes(event.which)) {\n                return;\n            }\n\n            // Prevent play / seek\n            event.preventDefault();\n            event.stopPropagation();\n\n            const isRadioButton = matches(menuItem, '[role=\"menuitemradio\"]');\n\n            // Show the respective menu\n            if (!isRadioButton && [32,39].includes(event.which)) {\n                controls.showMenuPanel.call(this, type, true);\n            } else {\n                let target;\n\n                if (event.which !== 32) {\n                    if (event.which === 40 || isRadioButton && event.which === 39) {\n                        target = menuItem.nextElementSibling;\n\n                        if (!is.element(target)) {\n                            target = menuItem.parentNode.firstElementChild;\n                        }\n                    } else {\n                        target = menuItem.previousElementSibling;\n\n                        if (!is.element(target)) {\n                            target = menuItem.parentNode.lastElementChild;\n                        }\n                    }\n\n                    setFocus.call(this, target, true);\n                }\n            }\n        }, false);\n    },\n\n    // Create a settings menu item\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n        const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n\n        const menuItem = createElement(\n            'button',\n            extend(attributes, {\n                type: 'button',\n                role: 'menuitemradio',\n                class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-checked': checked,\n                value,\n            }),\n        );\n\n        const flex = createElement('span');\n\n        // We have to set as HTML incase of special characters\n        flex.innerHTML = title;\n\n        if (is.element(badge)) {\n            flex.appendChild(badge);\n        }\n\n        menuItem.appendChild(flex);\n\n        // Replicate radio button behaviour\n        Object.defineProperty(menuItem, 'checked', {\n            enumerable: true,\n            get() {\n                return menuItem.getAttribute('aria-checked') === 'true';\n            },\n            set(checked) {\n                // Ensure exclusivity\n                if (checked) {\n                    Array.from(menuItem.parentNode.children)\n                        .filter(node => matches(node, '[role=\"menuitemradio\"]'))\n                        .forEach(node => node.setAttribute('aria-checked', 'false'));\n                }\n\n                menuItem.setAttribute('aria-checked', checked ? 'true' : 'false');\n            },\n        });\n\n        this.listeners.bind(\n            menuItem,\n            'click keydown',\n            event => {\n                if (event.type === 'keydown' && event.which !== 32) {\n                    return;\n                }\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                menuItem.checked = true;\n\n                switch (type) {\n                    case 'language':\n                        this.currentTrack = Number(value);\n                        break;\n\n                    case 'quality':\n                        this.quality = value;\n                        break;\n\n                    case 'speed':\n                        this.speed = parseFloat(value);\n                        break;\n\n                    default:\n                        break;\n                }\n\n                controls.showMenuPanel.call(this, 'home', event.type === 'keydown');\n            },\n            type,\n            false,\n        );\n\n        controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n        list.appendChild(menuItem);\n    },\n\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n        // Bail if the value isn't a number\n        if (!is.number(time)) {\n            return time;\n        }\n\n        // Always display hours if duration is over an hour\n        const forceHours = getHours(this.duration) > 0;\n\n        return formatTime(time, forceHours, inverted);\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!is.element(target) || !is.number(time)) {\n            return;\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        target.innerText = controls.formatTime(time, inverted);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (is.element(this.elements.inputs.volume)) {\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (is.element(this.elements.buttons.mute)) {\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        const setProgress = (target, input) => {\n            const value = is.number(input) ? input : 0;\n            const progress = is.element(target) ? target : this.elements.display.buffer;\n\n            // Update value and label\n            if (is.element(progress)) {\n                progress.value = value;\n\n                // Update text label inside\n                const label = progress.getElementsByTagName('span')[0];\n                if (is.element(label)) {\n                    label.childNodes[0].nodeValue = value;\n                }\n            }\n        };\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                case 'seeked':\n                    value = getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n        // Get range from event if event passed\n        const range = is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\n        if (matches(range, this.config.selectors.inputs.seek)) {\n            range.setAttribute('aria-valuenow', this.currentTime);\n            const currentTime = controls.formatTime(this.currentTime);\n            const duration = controls.formatTime(this.duration);\n            const format = i18n.get('seekLabel', this.config);\n            range.setAttribute(\n                'aria-valuetext',\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n            );\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\n            const percent = range.value * 100;\n            range.setAttribute('aria-valuenow', percent);\n            range.setAttribute('aria-valuetext', `${percent}%`);\n        } else {\n            range.setAttribute('aria-valuenow', range.value);\n        }\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !is.element(this.elements.inputs.seek) ||\n            !is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.progress.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        controls.updateTimeDisplay.call(\n            this,\n            this.elements.display.currentTime,\n            invert ? this.duration - this.currentTime : this.currentTime,\n            invert,\n        );\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        controls.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n            return;\n        }\n\n        // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n        // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n        // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n        // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n        if (this.duration >= 2**32) {\n            toggleHidden(this.elements.display.currentTime, true);\n            toggleHidden(this.elements.progress, true);\n            return;\n        }\n\n        // Update ARIA values\n        if (is.element(this.elements.inputs.seek)) {\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n\n    // Hide/show a tab\n    toggleMenuButton(setting, toggle) {\n        toggleHidden(this.elements.settings.buttons[setting], !toggle);\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panels[setting];\n        let value = null;\n        let list = container;\n\n        if (setting === 'captions') {\n            value = this.currentTrack;\n        } else {\n            value = !is.empty(input) ? input : this[setting];\n\n            // Get default\n            if (is.empty(value)) {\n                value = this.config[setting].default;\n            }\n\n            // Unsupported value\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                return;\n            }\n\n            // Disabled value\n            if (!this.config[setting].options.includes(value)) {\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                return;\n            }\n        }\n\n        // Get the list if we need to\n        if (!is.element(list)) {\n            list = pane && pane.querySelector('[role=\"menu\"]');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`[value=\"${value}\"]`);\n\n        if (is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (is.number(value)) {\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n                    if (!label.length) {\n                        return `${value}p`;\n                    }\n\n                    return label;\n                }\n\n                return toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            default:\n                return null;\n        }\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                    badge: getBadge(quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.buttons.loop, false);\n        toggleHidden(this.elements.settings.panels.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleMenuButton.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.captions)) {\n            return;\n        }\n\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n        const tracks = captions.getTracks.call(this);\n        const toggle = Boolean(tracks.length);\n\n        // Toggle the pane and tab\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!toggle) {\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n        const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { buttons } = this.elements.settings;\n        const visible = !is.empty(buttons) && Object.values(buttons).some(button => !button.hidden);\n\n        toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Show/hide menu\n    toggleMenu(input) {\n        const { popup } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!is.element(popup) || !is.element(button)) {\n            return;\n        }\n\n        const show = is.boolean(input) ? input : is.element(popup) && popup.hasAttribute('hidden');\n\n        if (is.event(input)) {\n            const isMenuItem = is.element(popup) && popup.contains(input.target);\n            const isButton = input.target === this.elements.buttons.settings;\n\n            // If the click was inside the form or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && !isButton && show)) {\n                return;\n            }\n\n            // Prevent the toggle being caught by the doc listener\n            if (isButton) {\n                input.stopPropagation();\n            }\n        }\n\n        // Set form and button attributes\n        if (is.element(button)) {\n            button.setAttribute('aria-expanded', show);\n        }\n\n        // Show the actual popup\n        if (is.element(popup)) {\n            toggleHidden(popup, !show);\n            toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n            // Focus the first item if key interaction\n            if (show && is.event(input) && input.type === 'keydown') {\n                const pane = Object.values(this.elements.settings.panels).find(pane => !pane.hidden);\n                const firstItem = pane.querySelector('[role^=\"menuitem\"]');\n                setFocus.call(this, firstItem, true);\n            }\n        }\n    },\n\n    // Get the natural size of a menu panel\n    getMenuSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.removeAttribute('hidden');\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Show a panel in the menu\n    showMenuPanel(type = '', tabFocus = false) {\n        const target = document.getElementById(`plyr-settings-${this.id}-${type}`);\n\n        // Nothing to show, bail\n        if (!is.element(target)) {\n            return;\n        }\n\n        // Hide all other panels\n        const container = target.parentNode;\n        const current = Array.from(container.children).find(node => !node.hidden);\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getMenuSize.call(this, target);\n\n            // Restore auto height/width\n            const restore = event => {\n                // We're only bothered about height and width on the container\n                if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                off.call(this, container, transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            on.call(this, container, transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        toggleHidden(current, true);\n\n        // Set attributes on target\n        toggleHidden(target, false);\n\n        // Focus the first item\n        const firstItem = target.querySelector('[role^=\"menuitem\"]');\n        setFocus.call(this, firstItem, tabFocus);\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Do nothing if we want no controls\n        if (is.empty(this.config.controls)) {\n            return null;\n        }\n\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            progress.appendChild(\n                controls.createRange.call(this, 'seek', {\n                    id: `plyr-seek-${data.id}`,\n                }),\n            );\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = createElement(\n                    'span',\n                    {\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Toggle mute button\n        if (this.config.controls.includes('mute')) {\n            container.appendChild(controls.createButton.call(this, 'mute'));\n        }\n\n        // Volume range control\n        if (this.config.controls.includes('volume')) {\n            const volume = createElement('div', {\n                class: 'plyr__volume',\n            });\n\n            // Set the attributes\n            const attributes = {\n                max: 1,\n                step: 0.05,\n                value: this.config.volume,\n            };\n\n            // Create the volume range slider\n            volume.appendChild(\n                controls.createRange.call(\n                    this,\n                    'volume',\n                    extend(attributes, {\n                        id: `plyr-volume-${data.id}`,\n                    }),\n                ),\n            );\n\n            this.elements.volume = volume;\n\n            container.appendChild(volume);\n        }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            const control = createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            control.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    id: `plyr-settings-toggle-${data.id}`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const popup = createElement('div', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                hidden: '',\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n            });\n\n            const inner = createElement('div');\n\n            const home = createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n            });\n\n            // Create the menu\n            const menu = createElement('div', {\n                role: 'menu',\n            });\n\n            home.appendChild(menu);\n            inner.appendChild(home);\n            this.elements.settings.panels.home = home;\n\n            // Build the menu items\n            this.config.settings.forEach(type => {\n                // TODO: bundle this with the createMenuItem helper and bindings\n                const menuItem = createElement(\n                    'button',\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        role: 'menuitem',\n                        'aria-haspopup': true,\n                        hidden: '',\n                    }),\n                );\n\n                // Bind menu shortcuts for keyboard users\n                controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n                // Show menu on click\n                on(menuItem, 'click', () => {\n                    controls.showMenuPanel.call(this, type, false);\n                });\n\n                const flex = createElement('span', null, i18n.get(type, this.config));\n\n                const value = createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                flex.appendChild(value);\n                menuItem.appendChild(flex);\n                menu.appendChild(menuItem);\n\n                // Build the panes\n                const pane = createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    hidden: '',\n                });\n\n                // Back button\n                const backButton = createElement('button', {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                });\n\n                // Visible label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            'aria-hidden': true,\n                        },\n                        i18n.get(type, this.config),\n                    ),\n                );\n\n                // Screen reader label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            class: this.config.classNames.hidden,\n                        },\n                        i18n.get('menuBack', this.config),\n                    ),\n                );\n\n                // Go back via keyboard\n                on(pane, 'keydown', event => {\n                    // We only care about <-\n                    if (event.which !== 37) {\n                        return;\n                    }\n\n                    // Prevent seek\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    // Show the respective menu\n                    controls.showMenuPanel.call(this, 'home', true);\n                }, false);\n\n                // Go back via button click\n                on(backButton, 'click', () => {\n                    controls.showMenuPanel.call(this, 'home', false);\n                });\n\n                // Add to pane\n                pane.appendChild(backButton);\n\n                // Menu\n                pane.appendChild(\n                    createElement('div', {\n                        role: 'menu',\n                    }),\n                );\n\n                inner.appendChild(pane);\n\n                this.elements.settings.buttons[type] = menuItem;\n                this.elements.settings.panels[type] = pane;\n            });\n\n            popup.appendChild(inner);\n            control.appendChild(popup);\n            container.appendChild(control);\n\n            this.elements.settings.popup = popup;\n            this.elements.settings.menu = control;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.cors) {\n                loadSprite(icon.url, 'sprite-plyr');\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // Set template properties\n        const props = {\n            id: this.id,\n            seektime: this.config.seekTime,\n            title: this.config.title,\n        };\n        let update = true;\n\n        if (is.string(this.config.controls) || is.element(this.config.controls)) {\n            // String or HTMLElement passed as the option\n            container = this.config.controls;\n        } else if (is.function(this.config.controls)) {\n            // A custom function to build controls\n            // The function can return a HTMLElement or String\n            container = this.config.controls.call(this, props);\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n            update = false;\n        }\n\n        // Replace props with their value\n        const replace = input => {\n            let result = input;\n\n            Object.entries(props).forEach(([key, value]) => {\n                result = replaceAll(result, `{${key}}`, value);\n            });\n\n            return result;\n        };\n\n        // Update markup\n        if (update) {\n            if (is.string(this.config.controls)) {\n                container = replace(container);\n            } else if (is.element(container)) {\n                container.innerHTML = replace(container.innerHTML);\n            }\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML\n        if (is.element(container)) {\n            target.appendChild(container);\n        } else if (container) {\n            target.insertAdjacentHTML('beforeend', container);\n        }\n\n        // Find the elements if need be\n        if (!is.element(this.elements.controls)) {\n            controls.findElements.call(this);\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            repaint(target);\n        }\n\n        // Setup tooltips\n        if (this.config.tooltips.controls) {\n            const { classNames, selectors } = this.config;\n            const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n            const labels = getElements.call(this, selector);\n\n            Array.from(labels).forEach(label => {\n                toggleClass(label, this.config.classNames.hidden, false);\n                toggleClass(label, this.config.classNames.tooltip, true);\n            });\n        }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {string} input - the URL to be parsed\n * @param {boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n    let url = input;\n\n    if (safe) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        url = parser.href;\n    }\n\n    try {\n        return new URL(url);\n    } catch (e) {\n        return null;\n    }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n    const params = new URLSearchParams();\n\n    if (is.object(input)) {\n        Object.entries(input).forEach(([key, value]) => {\n            params.set(key, value);\n        });\n    }\n\n    return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    insertAfter,\n    removeElement,\n    toggleClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (\n                is.array(this.config.controls) &&\n                this.config.controls.includes('settings') &&\n                this.config.settings.includes('captions')\n            ) {\n                controls.setCaptionsMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!is.element(this.elements.captions)) {\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n\n            insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const url = parseUrl(src);\n\n                if (\n                    url !== null &&\n                    url.hostname !== window.location.href.hostname &&\n                    ['http:', 'https:'].includes(url.protocol)\n                ) {\n                    fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Get and set initial data\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\n        // * languages: Array of user's browser languages.\n        // * language:  The language preferred by user settings or config\n        // * active:    The state preferred by user settings or config\n        // * toggled:   The real captions state\n\n        const languages = dedupe(\n            Array.from(navigator.languages || navigator.language || navigator.userLanguage).map(language => language.split('-')[0]),\n        );\n\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n        // Use first browser language when language is 'auto'\n        if (language === 'auto') {\n            [language] = languages;\n        }\n\n        let active = this.storage.get('captions');\n        if (!is.boolean(active)) {\n            ({ active } = this.config.captions);\n        }\n\n        Object.assign(this.captions, {\n            toggled: false,\n            active,\n            language,\n            languages,\n        });\n\n        // Watch changes to textTracks and update captions menu\n        if (this.isHTML5) {\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n        }\n\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\n        setTimeout(captions.update.bind(this), 0);\n    },\n\n    // Update available language options in settings based on tracks\n    update() {\n        const tracks = captions.getTracks.call(this, true);\n        // Get the wanted language\n        const { active, language, meta, currentTrackNode } = this.captions;\n        const languageExists = Boolean(tracks.find(track => track.language === language));\n\n        // Handle tracks (add event listener and \"pseudo\"-default)\n        if (this.isHTML5 && this.isVideo) {\n            tracks.filter(track => !meta.get(track)).forEach(track => {\n                this.debug.log('Track added', track);\n                // Attempt to store if the original dom element was \"default\"\n                meta.set(track, {\n                    default: track.mode === 'showing',\n                });\n\n                // Turn off native caption rendering to avoid double captions\n                track.mode = 'hidden';\n\n                // Add event listener for cue changes\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n            });\n        }\n\n        // Update language first time it matches, or if the previous matching track was removed\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n            captions.setLanguage.call(this, language);\n            captions.toggle.call(this, active && languageExists);\n        }\n\n        // Enable or disable captions based on track length\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n\n        // Update available languages in list\n        if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        const { toggled } = this.captions; // Current state\n        const activeClass = this.config.classNames.captions.active;\n\n        // Get the next state\n        // If the method is called without parameter, toggle based on current value\n        const active = is.nullOrUndefined(input) ? !toggled : input;\n\n        // Update state and trigger event\n        if (active !== toggled) {\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.active = active;\n                this.storage.set({ captions: active });\n            }\n\n            // Force language if the call isn't passive and there is no matching language to toggle to\n            if (!this.language && active && !passive) {\n                const tracks = captions.getTracks.call(this);\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n                // Override user preferences to avoid switching languages if a matching track is added\n                this.captions.language = track.language;\n\n                // Set caption, but don't store in localStorage as user preference\n                captions.set.call(this, tracks.indexOf(track));\n                return;\n            }\n\n            // Toggle button if it's enabled\n            if (this.elements.buttons.captions) {\n                this.elements.buttons.captions.pressed = active;\n            }\n\n            // Add class hook\n            toggleClass(this.elements.container, activeClass, active);\n\n            this.captions.toggled = active;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // Trigger event (not used internally)\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n        }\n    },\n\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n        const tracks = captions.getTracks.call(this);\n\n        // Disable captions if setting to -1\n        if (index === -1) {\n            captions.toggle.call(this, false, passive);\n            return;\n        }\n\n        if (!is.number(index)) {\n            this.debug.warn('Invalid caption argument', index);\n            return;\n        }\n\n        if (!(index in tracks)) {\n            this.debug.warn('Track not found', index);\n            return;\n        }\n\n        if (this.captions.currentTrack !== index) {\n            this.captions.currentTrack = index;\n            const track = tracks[index];\n            const { language } = track || {};\n\n            // Store reference to node for invalidation on remove\n            this.captions.currentTrackNode = track;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.language = language;\n                this.storage.set({ language });\n            }\n\n            // Handle Vimeo captions\n            if (this.isVimeo) {\n                this.embed.enableTextTrack(language);\n            }\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'languagechange');\n        }\n\n        // Show captions\n        captions.toggle.call(this, true, passive);\n\n        if (this.isHTML5 && this.isVideo) {\n            // If we change the active track while a cue is already displayed we need to update it\n            captions.updateCues.call(this);\n        }\n    },\n\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n        if (!is.string(input)) {\n            this.debug.warn('Invalid language argument', input);\n            return;\n        }\n        // Normalize\n        const language = input.toLowerCase();\n        this.captions.language = language;\n\n        // Set currentTrack\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [language]);\n        captions.set.call(this, tracks.indexOf(track), passive);\n    },\n\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n        // Handle media or textTracks missing or null\n        const tracks = Array.from((this.media || {}).textTracks || []);\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n        return tracks\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n        const tracks = captions.getTracks.call(this);\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n        let track;\n        languages.every(language => {\n            track = sorted.find(track => track.language === language);\n            return !track; // Break iteration if there is a match\n        });\n        // If no match is found but is required, get first\n        return track || (force ? sorted[0] : undefined);\n    },\n\n    // Get the current track\n    getCurrentTrack() {\n        return captions.getTracks.call(this)[this.currentTrack];\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (is.track(currentTrack)) {\n            if (!is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (!is.element(this.elements.captions)) {\n            this.debug.warn('No captions element to render to');\n            return;\n        }\n\n        // Only accept array or empty input\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n            this.debug.warn('updateCues: Invalid input', input);\n            return;\n        }\n\n        let cues = input;\n\n        // Get cues from track\n        if (!cues) {\n            const track = captions.getCurrentTrack.call(this);\n            cues = Array.from((track || {}).activeCues || [])\n                .map(cue => cue.getCueAsHTML())\n                .map(getHTML);\n        }\n\n        // Set new caption text\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\n        const changed = content !== this.elements.captions.innerHTML;\n\n        if (changed) {\n            // Empty the container and create a new child element\n            emptyElement(this.elements.captions);\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n            caption.innerHTML = content;\n            this.elements.captions.appendChild(caption);\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'cuechange');\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n    playsinline: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Reset to start when playback ended\n    resetOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.3.12/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [\n            4320,\n            2880,\n            2160,\n            1440,\n            1080,\n            720,\n            576,\n            480,\n            360,\n            240,\n            'default', // YouTube's \"auto\"\n        ],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: 'auto',\n        // Listen to new tracks added after Plyr is initialized.\n        // This is needed for streaming captions, but may result in unselectable options\n        update: false,\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'settings',\n        'pip',\n        'airplay',\n        'fullscreen',\n    ],\n    settings: ['captions', 'quality', 'speed'],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime}s',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime}s',\n        seek: 'Seek',\n        seekLabel: '{currentTime} of {duration}',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        settings: 'Settings',\n        menuBack: 'Go back to previous menu',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n        qualityBadge: {\n            2160: '4K',\n            1440: 'HD',\n            1080: 'HD',\n            720: 'HD',\n            576: 'SD',\n            480: 'SD',\n        },\n    },\n\n    // URLs\n    urls: {\n        vimeo: {\n            sdk: 'https://player.vimeo.com/api/player.js',\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\n        },\n        youtube: {\n            sdk: 'https://www.youtube.com/iframe_api',\n            api:\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\n        },\n        googleIMA: {\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'enterfullscreen',\n        'exitfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n        'qualitychange',\n        'qualityrequested',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress__buffer',\n            loop: '.plyr__progress__loop', // Used later\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        caption: '.plyr__caption',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        video: 'plyr__video-wrapper',\n        embed: 'plyr__video-embed',\n        embedContainer: 'plyr__video-embed__container',\n        poster: 'plyr__poster',\n        posterEnabled: 'plyr__poster-enabled',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        controlPressed: 'plyr__control--pressed',\n        playing: 'plyr--playing',\n        paused: 'plyr--paused',\n        stopped: 'plyr--stopped',\n        loading: 'plyr--loading',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        display: {\n            time: 'plyr__time',\n        },\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {string} url\n */\nexport function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n        return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n        return providers.vimeo;\n    }\n\n    return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// ==========================================================================\n\nimport browser from './utils/browser';\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nfunction onChange() {\n    if (!this.enabled) {\n        return;\n    }\n\n    // Update toggle button\n    const button = this.player.elements.buttons.fullscreen;\n    if (is.element(button)) {\n        button.pressed = this.active;\n    }\n\n    // Trigger an event\n    triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n    // Toggle button and fire events\n    onChange.call(this);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.property = Fullscreen.property;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        on.call(\n            this.player,\n            document,\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n            () => {\n                // TODO: Filter for target??\n                onChange.call(this);\n            },\n        );\n\n        // Fullscreen toggle on double click\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(\n            document.fullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.mozFullScreenEnabled ||\n            document.msFullscreenEnabled\n        );\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = ['webkit', 'moz', 'ms'];\n\n        prefixes.some(pre => {\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get property() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n        return element === this.target;\n    }\n\n    // Get target element\n    get target() {\n        return browser.isIos && this.player.config.fullscreen.iosNative\n            ? this.player.media\n            : this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            if (this.player.playing) {\n                this.target.webkitEnterFullscreen();\n            }\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.property}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.property}`]();\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n\n        const handler = () => {\n            delete image.onload;\n            delete image.onerror;\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\n        };\n\n        Object.assign(image, { onload: handler, onerror: handler, src });\n    });\n}\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport loadImage from './utils/loadImage';\n\nconst ui = {\n    addStyleHook() {\n        toggleClass(\n            this.elements.container,\n            this.config.selectors.container.replace('.', ''),\n            true,\n        );\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.uiSupported,\n            this.supported.ui,\n        );\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(\n                `Basic support only for ${this.provider} ${this.type}`,\n            );\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Setup captions for HTML5\n        if (this.isHTML5) {\n            captions.setup.call(this);\n        }\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        controls.updateVolume.call(this);\n\n        // Reset time display\n        controls.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Check for picture-in-picture support\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.pip.supported,\n            support.pip && this.isHTML5 && this.isVideo,\n        );\n\n        // Check for airplay support\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.airplay.supported,\n            support.airplay && this.isHTML5,\n        );\n\n        // Add iOS class\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.isIos,\n            browser.isIos,\n        );\n\n        // Add touch class\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.isTouch,\n            this.touch,\n        );\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            triggerEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n\n        // Assure the poster image is set, if the property was added before the element was created\n        if (this.poster) {\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\n        }\n\n        // Manually set the duration if user has overridden it.\n        // The event listeners for it doesn't get called if preload is disabled (#701)\n        if (this.config.duration) {\n            controls.durationUpdate.call(this);\n        }\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n        }\n\n        // If there's a play button, set label\n        Array.from(this.elements.buttons.play || []).forEach(button => {\n            button.setAttribute('aria-label', label);\n        });\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = getElement.call(this, 'iframe');\n\n            if (!is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !is.empty(this.config.title)\n                ? this.config.title\n                : 'video';\n            const format = i18n.get('frameTitle', this.config);\n\n            iframe.setAttribute('title', format.replace('{title}', title));\n        }\n    },\n\n    // Toggle poster\n    togglePoster(enable) {\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.posterEnabled,\n            enable,\n        );\n    },\n\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n        // Don't override if call is passive\n        if (passive && this.poster) {\n            return Promise.reject(new Error('Poster already set'));\n        }\n\n        // Set property synchronously to respect the call order\n        this.media.setAttribute('poster', poster);\n\n        // Wait until ui is ready\n        return (\n            ready\n                .call(this)\n                // Load image\n                .then(() => loadImage(poster))\n                .catch(err => {\n                    // Hide poster on error unless it's been set by another call\n                    if (poster === this.poster) {\n                        ui.togglePoster.call(this, false);\n                    }\n                    // Rethrow\n                    throw err;\n                })\n                .then(() => {\n                    // Prevent race conditions\n                    if (poster !== this.poster) {\n                        throw new Error(\n                            'setPoster cancelled by later call to setPoster',\n                        );\n                    }\n                })\n                .then(() => {\n                    Object.assign(this.elements.poster.style, {\n                        backgroundImage: `url('${poster}')`,\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n                        backgroundSize: '',\n                    });\n                    ui.togglePoster.call(this, true);\n                    return poster;\n                })\n        );\n    },\n\n    // Check playing state\n    checkPlaying(event) {\n        // Class hooks\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.playing,\n            this.playing,\n        );\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.paused,\n            this.paused,\n        );\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.stopped,\n            this.stopped,\n        );\n\n        // Set state\n        Array.from(this.elements.buttons.play || []).forEach(target => {\n            target.pressed = this.playing;\n        });\n\n        // Only update controls on non timeupdate events\n        if (is.event(event) && event.type === 'timeupdate') {\n            return;\n        }\n\n        // Toggle controls\n        ui.toggleControls.call(this);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = ['stalled', 'waiting'].includes(event.type);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Update progress bar loading class state\n            toggleClass(\n                this.elements.container,\n                this.config.classNames.loading,\n                this.loading,\n            );\n\n            // Update controls visibility\n            ui.toggleControls.call(this);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n        const { controls } = this.elements;\n\n        if (controls && this.config.hideControls) {\n            // Show controls if force, loading, paused, or button interaction, otherwise hide\n            this.toggleControls(\n                Boolean(\n                    force ||\n                        this.loading ||\n                        this.paused ||\n                        controls.pressed ||\n                        controls.hover,\n                ),\n            );\n        }\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport { repaint } from './utils/animation';\nimport browser from './utils/browser';\nimport {\n    getElement,\n    getElements,\n    hasClass,\n    matches,\n    toggleClass,\n    toggleHidden,\n} from './utils/elements';\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n        this.focusTimer = null;\n        this.lastKeyDown = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.setTabFocus = this.setTabFocus.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const { player } = this;\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            player.currentTime = player.duration / 10 * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = document.activeElement;\n            if (is.element(focused)) {\n                const { editable } = player.config.selectors;\n                const { seek } = player.elements.inputs;\n\n                if (focused !== seek && matches(focused, editable)) {\n                    return;\n                }\n\n                if (\n                    event.which === 32 &&\n                    matches(focused, 'button, [role^=\"menuitem\"]')\n                ) {\n                    return;\n                }\n            }\n\n            // Which keycodes should we prevent default\n            const preventDefault = [\n                32,\n                37,\n                38,\n                39,\n                40,\n                48,\n                49,\n                50,\n                51,\n                52,\n                53,\n                54,\n                56,\n                57,\n                67,\n                70,\n                73,\n                75,\n                76,\n                77,\n                79,\n            ];\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        player.muted = !player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    player.loop = !player.loop;\n                    break;\n\n                /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (\n                !player.fullscreen.enabled &&\n                player.fullscreen.active &&\n                code === 27\n            ) {\n                player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        const { player } = this;\n\n        player.touch = true;\n\n        // Add touch class\n        toggleClass(\n            player.elements.container,\n            player.config.classNames.isTouch,\n            true,\n        );\n    }\n\n    setTabFocus(event) {\n        const { player } = this;\n\n        clearTimeout(this.focusTimer);\n\n        // Ignore any key other than tab\n        if (event.type === 'keydown' && event.code !== 'Tab') {\n            return;\n        }\n\n        // Store reference to event timeStamp\n        if (event.type === 'keydown') {\n            this.lastKeyDown = event.timeStamp;\n        }\n\n        // Remove current classes\n        const removeCurrent = () => {\n            const className = player.config.classNames.tabFocus;\n            const current = getElements.call(player, `.${className}`);\n            toggleClass(current, className, false);\n        };\n\n        // Determine if a key was pressed to trigger this event\n        const wasKeyDown = event.timeStamp - this.lastKeyDown <= 20;\n\n        // Ignore focus events if a key was pressed prior\n        if (event.type === 'focus' && !wasKeyDown) {\n            return;\n        }\n\n        // Remove all current\n        removeCurrent();\n\n        // Delay the adding of classname until the focus has changed\n        // This event fires before the focusin event\n        this.focusTimer = setTimeout(() => {\n            const focused = document.activeElement;\n\n            // Ignore if current focus element isn't inside the player\n            if (!player.elements.container.contains(focused)) {\n                return;\n            }\n\n            toggleClass(\n                document.activeElement,\n                player.config.classNames.tabFocus,\n                true,\n            );\n        }, 10);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        const { player } = this;\n\n        // Keyboard shortcuts\n        if (player.config.keyboard.global) {\n            toggleListener.call(\n                player,\n                window,\n                'keydown keyup',\n                this.handleKey,\n                toggle,\n                false,\n            );\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(\n            player,\n            document.body,\n            'click',\n            this.toggleMenu,\n            toggle,\n        );\n\n        // Detect touch by events\n        once.call(player, document.body, 'touchstart', this.firstTouch);\n\n        // Tab focus detection\n        toggleListener.call(\n            player,\n            document.body,\n            'keydown focus blur',\n            this.setTabFocus,\n            toggle,\n            false,\n            true,\n        );\n    }\n\n    // Container listeners\n    container() {\n        const { player } = this;\n\n        // Keyboard shortcuts\n        if (!player.config.keyboard.global && player.config.keyboard.focused) {\n            on.call(\n                player,\n                player.elements.container,\n                'keydown keyup',\n                this.handleKey,\n                false,\n            );\n        }\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(\n            player,\n            player.elements.container,\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n            event => {\n                const { controls } = player.elements;\n\n                // Remove button states for fullscreen\n                if (event.type === 'enterfullscreen') {\n                    controls.pressed = false;\n                    controls.hover = false;\n                }\n\n                // Show, then hide after a timeout unless another control event occurs\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(\n                    event.type,\n                );\n\n                let delay = 0;\n\n                if (show) {\n                    ui.toggleControls.call(player, true);\n                    // Use longer timeout for touch devices\n                    delay = player.touch ? 3000 : 2000;\n                }\n\n                // Clear timer\n                clearTimeout(player.timers.controls);\n\n                // Set new timer to prevent flicker when seeking\n                player.timers.controls = setTimeout(\n                    () => ui.toggleControls.call(player, false),\n                    delay,\n                );\n            },\n        );\n    }\n\n    // Listen for media events\n    media() {\n        const { player } = this;\n\n        // Time change on media\n        on.call(player, player.media, 'timeupdate seeking seeked', event =>\n            controls.timeUpdate.call(player, event),\n        );\n\n        // Display duration\n        on.call(\n            player,\n            player.media,\n            'durationchange loadeddata loadedmetadata',\n            event => controls.durationUpdate.call(player, event),\n        );\n\n        // Check for audio tracks on load\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n        on.call(player, player.media, 'canplay', () => {\n            toggleHidden(player.elements.volume, !player.hasAudio);\n            toggleHidden(player.elements.buttons.mute, !player.hasAudio);\n        });\n\n        // Handle the media finishing\n        on.call(player, player.media, 'ended', () => {\n            // Show poster on end\n            if (player.isHTML5 && player.isVideo && player.config.resetOnEnd) {\n                // Restart\n                player.restart();\n            }\n        });\n\n        // Check for buffer progress\n        on.call(\n            player,\n            player.media,\n            'progress playing seeking seeked',\n            event => controls.updateProgress.call(player, event),\n        );\n\n        // Handle volume changes\n        on.call(player, player.media, 'volumechange', event =>\n            controls.updateVolume.call(player, event),\n        );\n\n        // Handle play/pause\n        on.call(\n            player,\n            player.media,\n            'playing play pause ended emptied timeupdate',\n            event => ui.checkPlaying.call(player, event),\n        );\n\n        // Loading state\n        on.call(player, player.media, 'waiting canplay seeked playing', event =>\n            ui.checkLoading.call(player, event),\n        );\n\n        // If autoplay, then load advertisement if required\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n        on.call(player, player.media, 'playing', () => {\n            if (!player.ads) {\n                return;\n            }\n\n            // If ads are enabled, wait for them first\n            if (player.ads.enabled && !player.ads.initialized) {\n                // Wait for manager response\n                player.ads.managerPromise\n                    .then(() => player.ads.play())\n                    .catch(() => player.play());\n            }\n        });\n\n        // Click video\n        if (\n            player.supported.ui &&\n            player.config.clickToPlay &&\n            !player.isAudio\n        ) {\n            // Re-fetch the wrapper\n            const wrapper = getElement.call(\n                player,\n                `.${player.config.classNames.video}`,\n            );\n\n            // Bail if there's no wrapper (this should never happen)\n            if (!is.element(wrapper)) {\n                return;\n            }\n\n            // On click play, pause ore restart\n            on.call(\n                player,\n                player.elements.container,\n                'click touchstart',\n                event => {\n                    const targets = [player.elements.container, wrapper];\n\n                    // Ignore if click if not container or in video wrapper\n                    if (\n                        !targets.includes(event.target) &&\n                        !wrapper.contains(event.target)\n                    ) {\n                        return;\n                    }\n\n                    // First touch on touch devices will just show controls (if we're hiding controls)\n                    // If controls are shown then it'll toggle like a pointer device\n                    if (\n                        player.config.hideControls &&\n                        player.touch &&\n                        hasClass(\n                            player.elements.container,\n                            player.config.classNames.hideControls,\n                        )\n                    ) {\n                        return;\n                    }\n\n                    if (player.ended) {\n                        player.restart();\n                        player.play();\n                    } else {\n                        player.togglePlay();\n                    }\n                },\n            );\n        }\n\n        // Disable right click\n        if (player.supported.ui && player.config.disableContextMenu) {\n            on.call(\n                player,\n                player.elements.wrapper,\n                'contextmenu',\n                event => {\n                    event.preventDefault();\n                },\n                false,\n            );\n        }\n\n        // Volume change\n        on.call(player, player.media, 'volumechange', () => {\n            // Save to storage\n            player.storage.set({\n                volume: player.volume,\n                muted: player.muted,\n            });\n        });\n\n        // Speed change\n        on.call(player, player.media, 'ratechange', () => {\n            // Update UI\n            controls.updateSetting.call(player, 'speed');\n\n            // Save to storage\n            player.storage.set({ speed: player.speed });\n        });\n\n        // Quality request\n        on.call(player, player.media, 'qualityrequested', event => {\n            // Save to storage\n            player.storage.set({ quality: event.detail.quality });\n        });\n\n        // Quality change\n        on.call(player, player.media, 'qualitychange', event => {\n            // Update UI\n            controls.updateSetting.call(\n                player,\n                'quality',\n                null,\n                event.detail.quality,\n            );\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        const proxyEvents = player.config.events\n            .concat(['keyup', 'keydown'])\n            .join(' ');\n\n        on.call(player, player.media, proxyEvents, event => {\n            let { detail = {} } = event;\n\n            // Get error details from media\n            if (event.type === 'error') {\n                detail = player.media.error;\n            }\n\n            triggerEvent.call(\n                player,\n                player.elements.container,\n                event.type,\n                true,\n                detail,\n            );\n        });\n    }\n\n    // Run default and custom handlers\n    proxy(event, defaultHandler, customHandlerKey) {\n        const { player } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n        let returned = true;\n\n        // Execute custom handler\n        if (hasCustomHandler) {\n            returned = customHandler.call(player, event);\n        }\n\n        // Only call default handler if not prevented in custom handler\n        if (returned && is.function(defaultHandler)) {\n            defaultHandler.call(player, event);\n        }\n    }\n\n    // Trigger custom and default handlers\n    bind(element, type, defaultHandler, customHandlerKey, passive = true) {\n        const { player } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n\n        on.call(\n            player,\n            element,\n            type,\n            event => this.proxy(event, defaultHandler, customHandlerKey),\n            passive && !hasCustomHandler,\n        );\n    }\n\n    // Listen for control events\n    controls() {\n        const { player } = this;\n\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Play/pause toggle\n        if (player.elements.buttons.play) {\n            Array.from(player.elements.buttons.play).forEach(button => {\n                this.bind(button, 'click', player.togglePlay, 'play');\n            });\n        }\n\n        // Pause\n        this.bind(\n            player.elements.buttons.restart,\n            'click',\n            player.restart,\n            'restart',\n        );\n\n        // Rewind\n        this.bind(\n            player.elements.buttons.rewind,\n            'click',\n            player.rewind,\n            'rewind',\n        );\n\n        // Rewind\n        this.bind(\n            player.elements.buttons.fastForward,\n            'click',\n            player.forward,\n            'fastForward',\n        );\n\n        // Mute toggle\n        this.bind(\n            player.elements.buttons.mute,\n            'click',\n            () => {\n                player.muted = !player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        this.bind(player.elements.buttons.captions, 'click', () =>\n            player.toggleCaptions(),\n        );\n\n        // Fullscreen toggle\n        this.bind(\n            player.elements.buttons.fullscreen,\n            'click',\n            () => {\n                player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        this.bind(\n            player.elements.buttons.pip,\n            'click',\n            () => {\n                player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        this.bind(\n            player.elements.buttons.airplay,\n            'click',\n            player.airplay,\n            'airplay',\n        );\n\n        // Settings menu - click toggle\n        this.bind(player.elements.buttons.settings, 'click', event => {\n            controls.toggleMenu.call(player, event);\n        });\n\n        // Settings menu - keyboard toggle\n        this.bind(\n            player.elements.buttons.settings,\n            'keydown',\n            event => {\n                // We only care about space\n                if (event.which !== 32) {\n                    return;\n                }\n\n                // Prevent scroll\n                event.preventDefault();\n\n                // Prevent playing video\n                event.stopPropagation();\n\n                // Toggle menu\n                controls.toggleMenu.call(player, event);\n            },\n            null,\n            false,\n        );\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        this.bind(player.elements.inputs.seek, 'mousedown mousemove', event => {\n            const rect = player.elements.progress.getBoundingClientRect();\n            const percent = 100 / rect.width * (event.pageX - rect.left);\n            event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        this.bind(\n            player.elements.inputs.seek,\n            'mousedown mouseup keydown keyup touchstart touchend',\n            event => {\n                const seek = event.currentTarget;\n                const code = event.keyCode ? event.keyCode : event.which;\n                const eventType = event.type;\n                const attribute = 'play-on-seeked';\n\n                if (\n                    (eventType === 'keydown' || eventType === 'keyup') &&\n                    (code !== 39 && code !== 37)\n                ) {\n                    return;\n                }\n                // Was playing before?\n                const play = seek.hasAttribute(attribute);\n\n                // Done seeking\n                const done = ['mouseup', 'touchend', 'keyup'].includes(\n                    event.type,\n                );\n\n                // If we're done seeking and it was playing, resume playback\n                if (play && done) {\n                    seek.removeAttribute(attribute);\n                    player.play();\n                } else if (!done && player.playing) {\n                    seek.setAttribute(attribute, '');\n                    player.pause();\n                }\n            },\n        );\n\n        // Seek\n        this.bind(\n            player.elements.inputs.seek,\n            inputEvent,\n            event => {\n                const seek = event.currentTarget;\n\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n                let seekTo = seek.getAttribute('seek-value');\n\n                if (is.empty(seekTo)) {\n                    seekTo = seek.value;\n                }\n\n                seek.removeAttribute('seek-value');\n\n                // Super weird iOS bug where after you interact with an <input type=\"range\">,\n                // it takes over further interactions on the page. This is a hack\n                if (browser.isIos) {\n                    repaint(seek);\n                }\n\n                player.currentTime = seekTo / seek.max * player.duration;\n            },\n            'seek',\n        );\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (\n            player.config.toggleInvert &&\n            !is.element(player.elements.display.duration)\n        ) {\n            this.bind(player.elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (player.currentTime === 0) {\n                    return;\n                }\n\n                player.config.invertTime = !player.config.invertTime;\n\n                controls.timeUpdate.call(player);\n            });\n        }\n\n        // Volume\n        this.bind(\n            player.elements.inputs.volume,\n            inputEvent,\n            event => {\n                player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            Array.from(getElements.call(player, 'input[type=\"range\"]')).forEach(\n                element => {\n                    this.bind(element, 'input', event =>\n                        controls.updateRangeFill.call(player, event.target),\n                    );\n                },\n            );\n        }\n\n        // Seek tooltip\n        this.bind(\n            player.elements.progress,\n            'mouseenter mouseleave mousemove',\n            event => controls.updateSeekTooltip.call(player, event),\n        );\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(player.elements.controls, 'mouseenter mouseleave', event => {\n            player.elements.controls.hover =\n                !player.touch && event.type === 'mouseenter';\n        });\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(\n            player.elements.controls,\n            'mousedown mouseup touchstart touchend touchcancel',\n            event => {\n                player.elements.controls.pressed = [\n                    'mousedown',\n                    'touchstart',\n                ].includes(event.type);\n            },\n        );\n\n        // Focus in/out on controls\n        this.bind(player.elements.controls, 'focusin focusout', event => {\n            const { config, elements, timers } = player;\n            const isFocusIn = event.type === 'focusin';\n\n            // Skip transition to prevent focus from scrolling the parent element\n            toggleClass(\n                elements.controls,\n                config.classNames.noTransition,\n                isFocusIn,\n            );\n\n            // Toggle\n            ui.toggleControls.call(player, isFocusIn);\n\n            // If focusin, hide again after delay\n            if (isFocusIn) {\n                // Restore transition\n                setTimeout(() => {\n                    toggleClass(\n                        elements.controls,\n                        config.classNames.noTransition,\n                        false,\n                    );\n                }, 0);\n\n                // Delay a little more for keyboard users\n                const delay = this.touch ? 3000 : 4000;\n\n                // Clear timer\n                clearTimeout(timers.controls);\n\n                // Hide\n                timers.controls = setTimeout(\n                    () => ui.toggleControls.call(player, false),\n                    delay,\n                );\n            }\n        });\n\n        // Mouse wheel for volume\n        this.bind(\n            player.elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n\n                // Get delta from event. Invert if `inverted` is true\n                const [x, y] = [event.deltaX, -event.deltaY].map(\n                    value => (inverted ? -value : value),\n                );\n\n                // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n                const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n                // Change the volume by 2%\n                player.increaseVolume(direction / 50);\n\n                // Don't break page scrolling at max and min\n                const { volume } = player.media;\n                if (\n                    (direction === 1 && volume < 1) ||\n                    (direction === -1 && volume > 0)\n                ) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n}\n\nexport default Listeners;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText`\n        result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n    return new Promise((resolve, reject) => {\n        loadjs(url, {\n            success: resolve,\n            error: reject,\n        });\n    });\n}\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from '../captions';\nimport controls from '../controls';\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { format, stripHTML } from '../utils/strings';\nimport { buildUrlParams } from '../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    if (is.number(Number(url))) {\n        return url;\n    }\n\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Get aspect ratio for dimensions\nfunction getAspectRatio(width, height) {\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n    const ratio = getRatio(width, height);\n    return `${width / ratio}:${height / ratio}`;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!is.object(window.Vimeo)) {\n            loadScript(this.config.urls.vimeo.sdk)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':');\n        const padding = 100 / x * y;\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            // muted: player.muted,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n        };\n        const params = buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(player.config.attributes.embed.id);\n        }\n\n        const id = parseId(source);\n\n        // Build an iframe\n        const iframe = createElement('iframe');\n        const src = format(player.config.urls.vimeo.iframe, id, params);\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Inject the package\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n\n        // Get poster image\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\n            if (is.empty(response)) {\n                return;\n            }\n\n            // Get the URL for thumbnail\n            const url = new URL(response[0].thumbnail_large);\n\n            // Get original image\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\n\n            // Set and show poster\n            ui.setPoster.call(player, url.href).catch(() => {});\n        });\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe, {\n            autopause: player.config.autopause,\n            muted: player.muted,\n        });\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            return player.embed.play();\n        };\n\n        player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            return player.embed.pause();\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Vimeo will automatically play on seek if the video hasn't been played before\n\n                // Get current paused state and volume etc\n                const { embed, media, paused, volume } = player;\n                const restorePause = paused && !embed.hasPlayed;\n\n                // Set seeking state and trigger event\n                media.seeking = true;\n                triggerEvent.call(player, media, 'seeking');\n\n                // If paused, mute until seek is complete\n                Promise.resolve(restorePause && embed.setVolume(0))\n                    // Seek\n                    .then(() => embed.setCurrentTime(time))\n                    // Restore paused\n                    .then(() => restorePause && embed.pause())\n                    // Restore volume\n                    .then(() => restorePause && embed.setVolume(volume))\n                    .catch(() => {\n                        // Do nothing\n                    });\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        triggerEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n            const ratio = getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', ({ cues = [] }) => {\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\n            captions.updateCues.call(player, strippedCues);\n        });\n\n        player.embed.on('loaded', () => {\n            // Assure state and events are updated on autoplay\n            player.embed.getPaused().then(paused => {\n                assurePlaybackState.call(player, !paused);\n                if (!paused) {\n                    triggerEvent.call(player, player.media, 'playing');\n                }\n            });\n\n            if (is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            assurePlaybackState.call(player, true);\n            triggerEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            assurePlaybackState.call(player, false);\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            triggerEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    triggerEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            triggerEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            triggerEvent.call(player, player.media, 'error');\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport controls from '../controls';\nimport ui from '../ui';\nimport { dedupe } from '../utils/arrays';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadImage from '../utils/loadImage';\nimport loadScript from '../utils/loadScript';\nimport { format, generateId } from '../utils/strings';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Standardise YouTube quality unit\nfunction mapQualityUnit(input) {\n    const qualities = {\n        hd2160: 2160,\n        hd1440: 1440,\n        hd1080: 1080,\n        hd720: 720,\n        large: 480,\n        medium: 360,\n        small: 240,\n        tiny: 144,\n    };\n\n    const entry = Object.entries(qualities).find(entry => entry.includes(input));\n\n    if (entry) {\n        // Get the match corresponding to the input\n        return entry.find(value => value !== input);\n    }\n\n    return 'default';\n}\n\nfunction mapQualityUnits(levels) {\n    if (is.empty(levels)) {\n        return levels;\n    }\n\n    return dedupe(levels.map(level => mapQualityUnit(level)));\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (is.string(key) && !is.empty(key)) {\n            const url = format(this.config.urls.youtube.api, videoId, key);\n\n            fetch(url)\n                .then(result => {\n                    if (is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = parseId(source);\n        const id = generateId(player.provider);\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Replace media element\n        const container = createElement('div', { id, poster });\n        player.media = replaceElement(container, player.media);\n\n        // Id to poster wrapper\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n            .then(image => ui.setPoster.call(player, image.src))\n            .then(posterSrc => {\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n                if (!posterSrc.includes('maxres')) {\n                    player.elements.poster.style.backgroundSize = 'cover';\n                }\n            })\n            .catch(() => {});\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // YouTube may fire onError twice, so only handle it once\n                    if (!player.media.error) {\n                        const code = event.data;\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                        const message =\n                            {\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n                            }[code] || 'An unknown error occured';\n\n                        player.media.error = { code, message };\n\n                        triggerEvent.call(player, player.media, 'error');\n                    }\n                },\n                onPlaybackQualityChange() {\n                    triggerEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: player.media.quality,\n                    });\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    triggerEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        assurePlaybackState.call(player, true);\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        assurePlaybackState.call(player, false);\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                            if (player.paused && !player.embed.hasPlayed) {\n                                player.embed.mute();\n                            }\n\n                            // Set seeking state and trigger event\n                            player.media.seeking = true;\n                            triggerEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Quality\n                    Object.defineProperty(player.media, 'quality', {\n                        get() {\n                            return mapQualityUnit(instance.getPlaybackQuality());\n                        },\n                        set(input) {\n                            instance.setPlaybackQuality(mapQualityUnit(input));\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                    triggerEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            triggerEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            triggerEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n                    if (seeked) {\n                        // Unset seeking and fire seeked event\n                        player.media.seeking = false;\n                        triggerEvent.call(player, player.media, 'seeked');\n                    }\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            triggerEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            triggerEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            assurePlaybackState.call(player, false);\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                triggerEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (player.media.paused && !player.embed.hasPlayed) {\n                                player.media.pause();\n                            } else {\n                                assurePlaybackState.call(player, true);\n\n                                triggerEvent.call(player, player.media, 'playing');\n\n                                // Poll to get playback progress\n                                player.timers.playing = setInterval(() => {\n                                    triggerEvent.call(player, player.media, 'timeupdate');\n                                }, 50);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (player.media.duration !== instance.getDuration()) {\n                                    player.media.duration = instance.getDuration();\n                                    triggerEvent.call(player, player.media, 'durationchange');\n                                }\n\n                                // Get quality\n                                controls.setQualityMenu.call(\n                                    player,\n                                    mapQualityUnits(instance.getAvailableQualityLevels()),\n                                );\n                            }\n\n                            break;\n\n                        case 2:\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (!player.muted) {\n                                player.embed.unMute();\n                            }\n                            assurePlaybackState.call(player, false);\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            wrap(this.media, this.elements.wrapper);\n\n            // Faux poster container\n            this.elements.poster = createElement('div', {\n                class: this.config.classNames.poster,\n            });\n\n            this.elements.wrapper.appendChild(this.elements.poster);\n        }\n\n        if (this.isHTML5) {\n            html5.extend.call(this);\n        } else if (this.isYouTube) {\n            youtube.setup.call(this);\n        } else if (this.isVimeo) {\n            vimeo.setup.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport i18n from '../i18n';\nimport { createElement } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { formatTime } from '../utils/time';\nimport { buildUrlParams } from '../utils/urls';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    get enabled() {\n        return (\n            this.player.isHTML5 && this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId)\n        );\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\n                loadScript(this.player.config.urls.googleIMA.sdk)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: window.location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n                event => this.onAdsManagerLoaded(event),\n                false,\n            );\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            // Mute based on current state\n            request.setAdWillPlayMuted(!this.player.muted);\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Get skippable state\n        // TODO: Skip button\n        // this.player.debug.warn(this.manager.getAdSkippableState());\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            triggerEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport { providers } from './config/types';\nimport html5 from './html5';\nimport media from './media';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement } from './utils/elements';\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (is.string(attributes)) {\n            insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (is.array(attributes)) {\n            attributes.forEach(attribute => {\n                insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!getDeep(input, 'sources.length')) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                removeElement(this.media);\n                this.media = null;\n\n                // Reset class name\n                if (is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // Set the type and provider\n                const { sources, type } = input;\n                const [{ provider = providers.html5, src }] = sources;\n                const tagName = provider === 'html5' ? type : 'div';\n                const attributes = provider === 'html5' ? {} : { src };\n\n                Object.assign(this, {\n                    provider,\n                    type,\n                    // Check for support\n                    supported: support.check(type, provider, this.config.playsinline),\n                    // Create new element\n                    media: createElement(tagName, attributes),\n                });\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if (!is.empty(input.poster)) {\n                        this.poster = input.poster;\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', sources);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if ('tracks' in input) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                    }\n\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.3.22\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport Listeners from './listeners';\nimport media from './media';\nimport Ads from './plugins/ads';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { closest } from './utils/arrays';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { cloneDeep, extend } from './utils/objects';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if (\n            (window.jQuery && this.media instanceof jQuery) ||\n            is.nodeList(this.media) ||\n            is.array(this.media)\n        ) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = extend(\n            {},\n            defaults,\n            Plyr.defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(\n                        this.media.getAttribute('data-plyr-config'),\n                    );\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            captions: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                popup: null,\n                menu: null,\n                panels: {},\n                buttons: {},\n            },\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: -1,\n            meta: new WeakMap(),\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        const clone = this.media.cloneNode(true);\n        clone.autoplay = false;\n        this.elements.original = clone;\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (is.element(iframe)) {\n                    // Detect provider\n                    url = parseUrl(iframe.getAttribute('src'));\n                    this.provider = getProviderByUrl(url.toString());\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    if (url.searchParams.length) {\n                        const truthy = ['1', 'true'];\n\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(url.searchParams.get('loop'))) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(\n                                url.searchParams.get('playsinline'),\n                            );\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(\n                        this.config.attributes.embed.provider,\n                    );\n\n                    // Remove attribute\n                    this.media.removeAttribute(\n                        this.config.attributes.embed.provider,\n                    );\n                }\n\n                // Unsupported or missing provider\n                if (\n                    is.empty(this.provider) ||\n                    !Object.keys(providers).includes(this.provider)\n                ) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (\n                    this.media.hasAttribute('playsinline') ||\n                    this.media.hasAttribute('webkit-playsinline')\n                ) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(\n            this.type,\n            this.provider,\n            this.config.playsinline,\n        );\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        this.eventListeners = [];\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!is.element(this.elements.container)) {\n            this.elements.container = createElement('div');\n            wrap(this.media, this.elements.container);\n        }\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            on.call(\n                this,\n                this.elements.container,\n                this.config.events.join(' '),\n                event => {\n                    this.debug.log(`event: ${event.type}`);\n                },\n            );\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        if (this.config.ads.enabled) {\n            this.ads = new Ads(this);\n        }\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!is.function(this.media.play)) {\n            return null;\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n        return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.pause();\n            this.restart();\n        } else if (is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime =\n            this.currentTime -\n            (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime =\n            this.currentTime +\n            (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        // Bail if media duration isn't available yet\n        if (!this.duration) {\n            return;\n        }\n\n        // Validate input\n        const inputIsValid = is.number(input) && input > 0;\n\n        // Set\n        this.media.currentTime = inputIsValid\n            ? Math.min(input, this.duration)\n            : 0;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // Media duration can be NaN or Infinity before the media has loaded\n        const realDuration = (this.media || {}).duration;\n        const duration =\n            !is.number(realDuration) || realDuration === Infinity\n                ? 0\n                : realDuration;\n\n        // If config duration is funky, use regular duration\n        return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 0);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        this.increaseVolume(-step);\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (is.number(input)) {\n            speed = input;\n        }\n\n        if (!is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        const config = this.config.quality;\n        const options = this.options.quality;\n\n        if (!options.length) {\n            return;\n        }\n\n        let quality = [\n            !is.empty(input) && Number(input),\n            this.storage.get('quality'),\n            config.selected,\n            config.default,\n        ].find(is.number);\n\n        if (!options.includes(quality)) {\n            const value = closest(options, quality);\n            this.debug.warn(\n                `Unsupported quality option: ${quality}, using ${value} instead`,\n            );\n            quality = value;\n        }\n\n        // Trigger request event\n        triggerEvent.call(this, this.media, 'qualityrequested', false, {\n            quality,\n        });\n\n        // Update config\n        config.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isVideo) {\n            this.debug.warn('Poster can only be set for video');\n            return;\n        }\n\n        ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {number} - Caption index\n     */\n    set currentTrack(input) {\n        captions.set.call(this, input, false);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n        const { toggled, currentTrack } = this.captions;\n        return toggled ? currentTrack : -1;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n        return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        const states = {\n            pip: 'picture-in-picture',\n            inline: 'inline',\n        };\n\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = is.boolean(input) ? input : this.pip === states.inline;\n\n        // Toggle based on current state\n        this.media.webkitSetPresentationMode(\n            toggle ? states.pip : states.inline,\n        );\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        return this.media.webkitPresentationMode;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} [toggle] - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n            // Get state before change\n            const isHidden = hasClass(\n                this.elements.container,\n                this.config.classNames.hideControls,\n            );\n\n            // Negate the argument if not undefined since adding the class to hides the controls\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\n\n            // Apply and get updated state\n            const hiding = toggleClass(\n                this.elements.container,\n                this.config.classNames.hideControls,\n                force,\n            );\n\n            // Close menu\n            if (\n                hiding &&\n                this.config.controls.includes('settings') &&\n                !is.empty(this.config.settings)\n            ) {\n                controls.toggleMenu.call(this, false);\n            }\n\n            // Trigger event on change\n            if (hiding !== isHidden) {\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\n                triggerEvent.call(this, this.media, eventName);\n            }\n\n            return !hiding;\n        }\n\n        return false;\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        on.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Add event listeners once\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    once(event, callback) {\n        once.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    removeElement(this.elements.buttons.play);\n                    removeElement(this.elements.captions);\n                    removeElement(this.elements.controls);\n                    removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                unbindListeners.call(this);\n\n                // Replace the container with the original element provided\n                replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                triggerEvent.call(\n                    this,\n                    this.elements.original,\n                    'destroyed',\n                    true,\n                );\n\n                // Callback\n                if (is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n            // Clear timeout\n            clearTimeout(this.timers.loading);\n\n            // Restore native video controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Clean up\n            done();\n        } else if (this.isYouTube) {\n            // Clear timers\n            clearInterval(this.timers.buffering);\n            clearInterval(this.timers.playing);\n\n            // Destroy YouTube API\n            if (this.embed !== null && is.function(this.embed.destroy)) {\n                this.embed.destroy();\n            }\n\n            // Clean up\n            done();\n        } else if (this.isVimeo) {\n            // Destroy Vimeo API\n            // then clean up (wait, to prevent postmessage errors)\n            if (this.embed !== null) {\n                this.embed.unload().then(done);\n            }\n\n            // Vimeo does not always return\n            setTimeout(done, 200);\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {object} options\n     */\n    static setup(selector, options = {}) {\n        let targets = null;\n\n        if (is.string(selector)) {\n            targets = Array.from(document.querySelectorAll(selector));\n        } else if (is.nodeList(selector)) {\n            targets = Array.from(selector);\n        } else if (is.array(selector)) {\n            targets = selector.filter(is.element);\n        }\n\n        if (is.empty(targets)) {\n            return null;\n        }\n\n        return targets.map(t => new Plyr(t, options));\n    }\n}\n\nPlyr.defaults = cloneDeep(defaults);\n\nexport default Plyr;\n"]}