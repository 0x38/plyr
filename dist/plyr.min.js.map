{"version":3,"sources":["src/js/utils/is.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/i18n.js","src/js/utils/arrays.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/utils/loadImage.js","src/js/ui.js","src/js/listeners.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/source.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","is","object","Object","number","Number","isNaN","string","String","boolean","function","Function","array","nullOrUndefined","Array","isArray","weakMap","WeakMap","nodeList","NodeList","element","Element","textNode","Text","event","Event","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","test","empty","length","keys","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","e","toggleListener","callback","toggle","arguments","undefined","_this","this","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","args","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","wrap","elements","wrapper","targets","from","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","filter","_ref","value","slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","hasAttribute","removeAttribute","toggleClass","force","method","classList","contains","hasClass","matches","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","querySelectorAll","includes","getElements","container","getElement","querySelector","getFocusElement","focused","activeElement","body","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","find","style","range","browser","isIE","documentMode","isWebkit","documentElement","navigator","userAgent","isIPhone","platform","isIos","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","inputType","_inputType$split","mediaType","isHTML5","media","canPlayType","err","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","map","extend","player","set","_player$media","currentTime","paused","preload","readyState","src","play","load","quality","cancelRequests","config","blankVideo","debug","log","getDeep","path","reduce","obj","target","sources","shift","concat","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","i18n","{seektime}","seekTime","{title}","title","_ref2","dedupe","item","indexOf","Storage","classCallCheck","enabled","storage","store","localStorage","getItem","json","JSON","parse","setItem","stringify","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","Error","status","open","send","loadSprite","hasId","exists","getElementById","update","data","insertAdjacentElement","useStorage","cached","prefix","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","controls","getIconUrl","cors","URL","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","pause","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","classNames","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","button","label","labelPressed","iconPressed","control","controlPressed","enumerable","pressed","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","createMenuItem","list","_ref$badge","_ref$checked","checked","aria-checked","children","node","updateTimeDisplay","updateVolume","setRange","muted","updateProgress","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this2","tooltips","clientRect","getBoundingClientRect","visible","_toggle","width","pageX","left","parseFloat","timeUpdate","invert","invertTime","seeking","durationUpdate","hasDuration","displayDuration","toggleMenuButton","setting","setQualityMenu","_this3","panels","console","checkMenu","sort","a","b","sorting","getLabel","getBadge","updateSetting","pane","currentTrack","default","setCaptionsMenu","_this4","tracks","getTracks","toggled","language","unshift","bind","setSpeedMenu","_this5","speed","isVimeo","values","some","toggleMenu","popup","show","isMenuItem","isButton","stopPropagation","getMenuSize","tab","clone","position","opacity","scrollWidth","height","scrollHeight","showMenuPanel","_this6","size","restore","propertyName","firstItem","focus","create","_this7","aria-haspopup","aria-controls","aria-expanded","aria-labelled-by","inner","home","menuItem","flex","back","inject","_this8","Math","floor","random","props","seektime","insertAdjacentHTML","setTimeout","offsetHeight","_config","labels","parseUrl","parser","href","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","hostname","protocol","blob","createObjectURL","languages","userLanguage","active","trackEvents","_captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","activeClass","findTrack","toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","caption","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","loop","selected","keyboard","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","frameTitle","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","urls","vimeo","sdk","iframe","youtube","googleIMA","listeners","editable","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","tabFocus","google","publisherId","providers","types","noop","Console","onChange","first","last","keyCode","shiftKey","preventDefault","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","Fullscreen","property","native","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","build","checkPlaying","ready","setTitle","setPoster","isEmbed","togglePoster","enable","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","Listeners","lastKey","handleKey","firstTouch","code","which","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","delay","hasAudio","initialized","managerPromise","isAudio","ended","proxyEvents","_event$detail","inputEvent","proxy","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","showHomeTab","currentTarget","eventType","done","seekTo","_player","webkitDirectionInvertedFromDevice","direction","deltaY","deltaX","factory","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isCss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","onbeforeload","ev","sheet","cssText","defaultPrevented","head","loadjs","paths","arg1","arg2","fn","numWaiting","loadFiles","deps","bundleIds","r","subscribe","isDefined","module","exports","loadScript","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split","_split2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","name","setLoop","currentSrc","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","getAspectRatio","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","mapQualityUnit","entry","hd2160","hd1440","hd1080","hd720","large","medium","small","tiny","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","startsWith","posterSrc","format$$1","playerVars","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackQualityChange","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","getPlaybackQuality","setPlaybackQuality","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","levels","getAvailableQualityLevels","level","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","_this9","initialize","init","adError","zIndex","_this10","destroy","_this11","handlers","_this12","base","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","Date","now","AV_WIDTH","AV_HEIGHT","AV_CDIM2","insertElements","attribute","change","_sources$","_sources$$provider","tagName","crossorigin","Plyr","failed","jQuery","original","getProviderByUrl","searchParams","truthy","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","prev","curr","abs","closest","states","webkitPresentationMode","inline","t"],"mappings":"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","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\n\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\n\nconst is = {\n    object(input) {\n        return getConstructor(input) === Object;\n    },\n    number(input) {\n        return getConstructor(input) === Number && !Number.isNaN(input);\n    },\n    string(input) {\n        return getConstructor(input) === String;\n    },\n    boolean(input) {\n        return getConstructor(input) === Boolean;\n    },\n    function(input) {\n        return getConstructor(input) === Function;\n    },\n    array(input) {\n        return !is.nullOrUndefined(input) && Array.isArray(input);\n    },\n    weakMap(input) {\n        return instanceOf(input, WeakMap);\n    },\n    nodeList(input) {\n        return instanceOf(input, NodeList);\n    },\n    element(input) {\n        return instanceOf(input, Element);\n    },\n    textNode(input) {\n        return getConstructor(input) === Text;\n    },\n    event(input) {\n        return instanceOf(input, Event);\n    },\n    cue(input) {\n        return instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\n    },\n    track(input) {\n        return instanceOf(input, TextTrack) || (!is.nullOrUndefined(input) && is.string(input.kind));\n    },\n    url(input) {\n        return (\n            !is.nullOrUndefined(input) &&\n            /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/.test(input)\n        );\n    },\n    nullOrUndefined(input) {\n        return input === null || typeof input === 'undefined';\n    },\n    empty(input) {\n        return (\n            is.nullOrUndefined(input) ||\n            ((is.string(input) || is.array(input) || is.nodeList(input)) && !input.length) ||\n            (is.object(input) && !Object.keys(input).length)\n        );\n    },\n};\n\nexport default is;\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get() {\n                supported = true;\n                return null;\n            },\n        });\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n        // Do nothing\n    }\n\n    return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n    // Bail if no element, event, or callback\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n        return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n        options = {\n            // Whether the listener can be passive (i.e. default never prevented)\n            passive,\n            // Whether the listener is a capturing listener or not\n            capture,\n        };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n        if (this && this.eventListeners && toggle) {\n            // Cache event listener\n            this.eventListeners.push({ element, type, callback, options });\n        }\n\n        element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n    });\n}\n\n// Bind event handler\nexport function on(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, true, passive, capture);\n}\n\n// Unbind event handler\nexport function off(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, false, passive, capture);\n}\n\n// Bind once-only event handler\nexport function once(element, events = '', callback, passive = true, capture = false) {\n    function onceCallback(...args) {\n        off(element, events, onceCallback, passive, capture);\n        callback.apply(this, args);\n    }\n\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n        return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n        bubbles,\n        detail: Object.assign({}, detail, {\n            plyr: this,\n        }),\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n    if (this && this.eventListeners) {\n        this.eventListeners.forEach(item => {\n            const { element, type, callback, options } = item;\n            element.removeEventListener(type, callback, options);\n        });\n\n        this.eventListeners = [];\n    }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n    return new Promise(\n        resolve => (this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)),\n    ).then(() => {});\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport { toggleListener } from './events';\nimport is from './is';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets)\n        .reverse()\n        .forEach((element, index) => {\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n            // Cache the current parent and sibling.\n            const parent = element.parentNode;\n            const sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n        });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n        return;\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes)\n        .filter(([, value]) => !is.nullOrUndefined(value))\n        .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n        setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n        element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n    if (!is.element(element) || !is.element(target)) {\n        return;\n    }\n\n    target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n    if (!is.element(parent)) {\n        return;\n    }\n\n    parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n        Array.from(element).forEach(removeElement);\n        return;\n    }\n\n    if (!is.element(element) || !is.element(element.parentNode)) {\n        return;\n    }\n\n    element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let { length } = element.childNodes;\n\n    while (length > 0) {\n        element.removeChild(element.lastChild);\n        length -= 1;\n    }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\n        return null;\n    }\n\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n\n    return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) {\n        return {};\n    }\n\n    const attributes = {};\n    const existing = existingAttributes;\n\n    sel.split(',').forEach(s => {\n        // Remove whitespace\n        const selector = s.trim();\n        const className = selector.replace('.', '');\n        const stripped = selector.replace(/[[\\]]/g, '');\n\n        // Get the parts and value\n        const parts = stripped.split('=');\n        const key = parts[0];\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n        // Get the first character\n        const start = selector.charAt(0);\n\n        switch (start) {\n            case '.':\n                // Add to existing classname\n                if (is.object(existing) && is.string(existing.class)) {\n                    existing.class += ` ${className}`;\n                }\n\n                attributes.class = className;\n                break;\n\n            case '#':\n                // ID selector\n                attributes.id = selector.replace('#', '');\n                break;\n\n            case '[':\n                // Attribute selector\n                attributes[key] = value;\n\n                break;\n\n            default:\n                break;\n        }\n    });\n\n    return attributes;\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let hide = hidden;\n\n    if (!is.boolean(hide)) {\n        hide = !element.hasAttribute('hidden');\n    }\n\n    if (hide) {\n        element.setAttribute('hidden', '');\n    } else {\n        element.removeAttribute('hidden');\n    }\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n    if (is.element(element)) {\n        let method = 'toggle';\n        if (typeof force !== 'undefined') {\n            method = force ? 'add' : 'remove';\n        }\n\n        element.classList[method](className);\n        return element.classList.contains(className);\n    }\n\n    return null;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n    const prototype = { Element };\n\n    function match() {\n        return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n\n    const matches =\n        prototype.matches ||\n        prototype.webkitMatchesSelector ||\n        prototype.mozMatchesSelector ||\n        prototype.msMatchesSelector ||\n        match;\n\n    return matches.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n}\n\n// Get the focused element\nexport function getFocusElement() {\n    let focused = document.activeElement;\n\n    if (!focused || focused === document.body) {\n        focused = null;\n    } else {\n        focused = document.querySelector(':focus');\n    }\n\n    return focused;\n}\n\n// Trap focus inside container\nexport function trapFocus(element = null, toggle = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    const focusable = getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    const trap = event => {\n        // Bail if not tab key or not fullscreen\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\n            return;\n        }\n\n        // Get the current focused element\n        const focused = getFocusElement();\n\n        if (focused === last && !event.shiftKey) {\n            // Move focus to first element that can be tabbed if Shift isn't used\n            first.focus();\n            event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n            // Move focus to last element that can be tabbed if Shift is used\n            last.focus();\n            event.preventDefault();\n        }\n    };\n\n    toggleListener.call(this, this.elements.container, 'keydown', trap, toggle, false);\n}\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport { toggleHidden } from './elements';\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n\n    const events = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend',\n    };\n\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\n\n    return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element) {\n    setTimeout(() => {\n        toggleHidden(element, true);\n        element.offsetHeight; // eslint-disable-line\n        toggleHidden(element, false);\n    }, 0);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n};\n\nexport default browser;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n        const api = support[type] || provider !== 'html5';\n        const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari only currently\n    pip: (() => !browser.isIPhone && is.function(createElement('video').webkitSetPresentationMode))(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(inputType) {\n        const [mediaType] = inputType.split('/');\n        if (!this.isHTML5 || mediaType !== this.type) {\n            return false;\n        }\n\n        let type;\n        if (inputType && inputType.includes('codecs=')) {\n            // Use input directly\n            type = inputType;\n        } else if (inputType === 'audio/mpeg') {\n            // Skip codec\n            type = 'audio/mpeg;';\n        } else if (inputType in defaultCodecs) {\n            // Use codec\n            type = `${inputType}; codecs=\"${defaultCodecs[inputType]}\"`;\n        }\n\n        try {\n            return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n        } catch (err) {\n            return false;\n        }\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return [];\n        }\n\n        const sources = Array.from(this.media.querySelectorAll('source'));\n\n        // Filter out unsupported sources\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        // Get sizes from <source> elements\n        return html5.getSources\n            .call(this)\n            .map(source => Number(source.getAttribute('size')))\n            .filter(Boolean);\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n                const source = sources.find(source => source.getAttribute('src') === player.source);\n\n                // Return size, if match is found\n                return source && Number(source.getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                // Get first match for requested size\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\n\n                // No matching source found\n                if (!source) {\n                    return;\n                }\n\n                // Get current state\n                const { currentTime, paused, preload, readyState } = player.media;\n\n                // Set new source\n                player.media.src = source.getAttribute('src');\n\n                // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n                if (preload !== 'none' || readyState) {\n                    // Restore time\n                    player.once('loadedmetadata', () => {\n                        player.currentTime = currentTime;\n\n                        // Resume playing\n                        if (!paused) {\n                            player.play();\n                        }\n                    });\n\n                    // Load new source\n                    player.media.load();\n                }\n\n                // Trigger change event\n                triggerEvent.call(player, player.media, 'qualitychange', false, {\n                    quality: input,\n                });\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        // Remove child sources\n        removeElement(html5.getSources.call(this));\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n\n    const source = sources.shift();\n\n    if (!is.object(source)) {\n        return target;\n    }\n\n    Object.keys(source).forEach(key => {\n        if (is.object(source[key])) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, { [key]: {} });\n            }\n\n            extend(target[key], source[key]);\n        } else {\n            Object.assign(target, { [key]: source[key] });\n        }\n    });\n\n    return extend(target, ...sources);\n}\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n    if (is.empty(input)) {\n        return input;\n    }\n\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n        return 0;\n    }\n\n    return (current / max * 100).toFixed(2);\n}\n\n// Replace all occurances of a string in a string\nexport function replaceAll(input = '', find = '', replace = '') {\n    return input.replace(\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\n        replace.toString(),\n    );\n}\n\n// Convert to title case\nexport function toTitleCase(input = '') {\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n}\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\nimport { replaceAll } from './utils/strings';\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (is.empty(key) || is.empty(config)) {\n            return '';\n        }\n\n        let string = getDeep(config.i18n, key);\n\n        if (is.empty(string)) {\n            return '';\n        }\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([key, value]) => {\n            string = replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n    if (!is.array(array)) {\n        return array;\n    }\n\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n        return null;\n    }\n\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported || !this.enabled) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n        try {\n            const request = new XMLHttpRequest();\n\n            // Check for CORS support\n            if (!('withCredentials' in request)) {\n                return;\n            }\n\n            request.addEventListener('load', () => {\n                if (responseType === 'text') {\n                    try {\n                        resolve(JSON.parse(request.responseText));\n                    } catch (e) {\n                        resolve(request.responseText);\n                    }\n                } else {\n                    resolve(request.response);\n                }\n            });\n\n            request.addEventListener('error', () => {\n                throw new Error(request.status);\n            });\n\n            request.open('GET', url, true);\n\n            // Set the required response type\n            request.responseType = responseType;\n\n            request.send();\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from './../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id) {\n    if (!is.string(url)) {\n        return;\n    }\n\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n\n    const exists = () => document.getElementById(id) !== null;\n\n    const update = (container, data) => {\n        container.innerHTML = data;\n\n        // Check again incase of race condition\n        if (hasId && exists()) {\n            return;\n        }\n\n        // Inject the SVG to the body\n        document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n        const useStorage = Storage.supported;\n\n        // Create container\n        const container = document.createElement('div');\n        container.setAttribute('hidden', '');\n\n        if (hasId) {\n            container.setAttribute('id', id);\n        }\n\n        // Check in cache\n        if (useStorage) {\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\n            isCached = cached !== null;\n\n            if (isCached) {\n                const data = JSON.parse(cached);\n                update(container, data.content);\n            }\n        }\n\n        // Get the sprite\n        fetch(url)\n            .then(result => {\n                if (is.empty(result)) {\n                    return;\n                }\n\n                if (useStorage) {\n                    window.localStorage.setItem(\n                        `${prefix}-${id}`,\n                        JSON.stringify({\n                            content: result,\n                        }),\n                    );\n                }\n\n                update(container, result);\n            })\n            .catch(() => {});\n    }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\nexport const getSeconds = value => parseInt(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n        return formatTime(null, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n        hours = `${hours}:`;\n    } else {\n        hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// ==========================================================================\n\nimport captions from './captions';\nimport html5 from './html5';\nimport i18n from './i18n';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport { createElement, emptyElement, getAttributesFromSelector, getElement, getElements, hasClass, matches, removeElement, setAttributes, toggleClass, toggleHidden } from './utils/elements';\nimport { off, on } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n    // Get icon URL\n    getIconUrl() {\n        const url = new URL(this.config.iconUrl, window.location);\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n        return {\n            url: this.config.iconUrl,\n            cors,\n        };\n    },\n\n    // Find the UI controls\n    findElements() {\n        try {\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: getElements.call(this, this.config.selectors.buttons.play),\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n                duration: getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\n                    `.${this.config.classNames.tooltip}`,\n                );\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        setAttributes(\n            icon,\n            extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        } else {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n        }\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(type, attr = {}) {\n        // Skip i18n for abbreviations and brand names\n        const universals = {\n            pip: 'PIP',\n            airplay: 'AirPlay',\n        };\n        const text = universals[type] || i18n.get(type, this.config);\n\n        const attributes = Object.assign({}, attr, {\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\n        });\n        return createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (is.empty(text)) {\n            return null;\n        }\n\n        const badge = createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const button = createElement('button');\n        const attributes = Object.assign({}, attr);\n        let type = toCamelCase(buttonType);\n\n        let toggle = false;\n        let label;\n        let icon;\n        let labelPressed;\n        let iconPressed;\n\n        if (!('type' in attributes)) {\n            attributes.type = 'button';\n        }\n\n        if ('class' in attributes) {\n            if (attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                toggle = true;\n                label = 'play';\n                labelPressed = 'pause';\n                icon = 'play';\n                iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                toggle = true;\n                label = 'mute';\n                labelPressed = 'unmute';\n                icon = 'volume';\n                iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                toggle = true;\n                label = 'enableCaptions';\n                labelPressed = 'disableCaptions';\n                icon = 'captions-off';\n                iconPressed = 'captions-on';\n                break;\n\n            case 'fullscreen':\n                toggle = true;\n                label = 'enterFullscreen';\n                labelPressed = 'exitFullscreen';\n                icon = 'enter-fullscreen';\n                iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                label = 'play';\n                icon = 'play';\n                break;\n\n            default:\n                label = type;\n                icon = buttonType;\n        }\n\n        // Setup toggle icon and labels\n        if (toggle) {\n            // Icon\n            button.appendChild(controls.createIcon.call(this, iconPressed, { class: 'icon--pressed' }));\n            button.appendChild(controls.createIcon.call(this, icon, { class: 'icon--not-pressed' }));\n\n            // Label/Tooltip\n            button.appendChild(controls.createLabel.call(this, labelPressed, { class: 'label--pressed' }));\n            button.appendChild(controls.createLabel.call(this, label, { class: 'label--not-pressed' }));\n        } else {\n            button.appendChild(controls.createIcon.call(this, icon));\n            button.appendChild(controls.createLabel.call(this, label));\n        }\n\n        // Merge attributes\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n\n        setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        // Toggle classname when pressed property is set\n        const className = this.config.classNames.controlPressed;\n        Object.defineProperty(button, 'pressed', {\n            enumerable: true,\n            get() {\n                return hasClass(button, className);\n            },\n            set(pressed = false) {\n                toggleClass(button, className, pressed);\n            },\n        });\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek input\n        const input = createElement(\n            'input',\n            extend(\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-label': i18n.get(type, this.config),\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return input;\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = createElement(\n            'progress',\n            extend(\n                getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(createElement('span', null, '0'));\n\n            const suffixKey = {\n                played: 'played',\n                buffer: 'buffered',\n            }[type];\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n            progress.innerText = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\n\n        const container = createElement(\n            'div',\n            extend(attributes, {\n                class: `${this.config.classNames.display.time} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-label': i18n.get(type, this.config),\n            }),\n            '00:00',\n        );\n\n        // Reference for updates\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Create a settings menu item\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n        const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n\n        const item = createElement(\n            'button',\n            extend(attributes, {\n                type: 'button',\n                role: 'menuitemradio',\n                class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\n                value,\n                'aria-checked': checked,\n            })\n        );\n\n        // We have to set as HTML incase of special characters\n        item.innerHTML = title;\n\n        if (is.element(badge)) {\n            item.appendChild(badge);\n        }\n\n        Object.defineProperty(item, 'checked', {\n            enumerable: true,\n            get() {\n                return item.getAttribute('aria-checked') === 'true';\n            },\n            set(checked) {\n                // Ensure exclusivity\n                if (checked) {\n                    Array.from(item.parentNode.children)\n                        .filter(node => matches(node, '[role=\"menuitemradio\"]'))\n                        .forEach(node => node.setAttribute('aria-checked', 'false'));\n                }\n\n                item.setAttribute('aria-checked', checked ? 'true' : 'false');\n            },\n        });\n\n        list.appendChild(item);\n    },\n\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n        // Bail if the value isn't a number\n        if (!is.number(time)) {\n            return time;\n        }\n\n        // Always display hours if duration is over an hour\n        const forceHours = getHours(this.duration) > 0;\n\n        return formatTime(time, forceHours, inverted);\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!is.element(target) || !is.number(time)) {\n            return;\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        target.innerText = controls.formatTime(time, inverted);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (is.element(this.elements.inputs.volume)) {\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (is.element(this.elements.buttons.mute)) {\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        const setProgress = (target, input) => {\n            const value = is.number(input) ? input : 0;\n            const progress = is.element(target) ? target : this.elements.display.buffer;\n\n            // Update value and label\n            if (is.element(progress)) {\n                progress.value = value;\n\n                // Update text label inside\n                const label = progress.getElementsByTagName('span')[0];\n                if (is.element(label)) {\n                    label.childNodes[0].nodeValue = value;\n                }\n            }\n        };\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                case 'seeked':\n                    value = getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n        // Get range from event if event passed\n        const range = is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\n        if (matches(range, this.config.selectors.inputs.seek)) {\n            range.setAttribute('aria-valuenow', this.currentTime);\n            const currentTime = controls.formatTime(this.currentTime);\n            const duration = controls.formatTime(this.duration);\n            const format = i18n.get('seekLabel', this.config);\n            range.setAttribute(\n                'aria-valuetext',\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n            );\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\n            const percent = range.value * 100;\n            range.setAttribute('aria-valuenow', percent);\n            range.setAttribute('aria-valuetext', `${percent}%`);\n        } else {\n            range.setAttribute('aria-valuenow', range.value);\n        }\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !is.element(this.elements.inputs.seek) ||\n            !is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.progress.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        controls.updateTimeDisplay.call(\n            this,\n            this.elements.display.currentTime,\n            invert ? this.duration - this.currentTime : this.currentTime,\n            invert,\n        );\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        controls.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n            return;\n        }\n\n        // Update ARIA values\n        if (is.element(this.elements.inputs.seek)) {\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n\n    // Hide/show a tab\n    toggleMenuButton(setting, toggle) {\n        toggleHidden(this.elements.settings.buttons[setting], !toggle);\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.quality)) {\n            console.warn('Not an element');\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        console.warn(this.options.quality);\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                    badge: getBadge(quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (is.number(value)) {\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n                    if (!label.length) {\n                        return `${value}p`;\n                    }\n\n                    return label;\n                }\n\n                return toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            default:\n                return null;\n        }\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panels[setting];\n        let value = null;\n        let list = container;\n\n        if (setting === 'captions') {\n            value = this.currentTrack;\n        } else {\n            value = !is.empty(input) ? input : this[setting];\n\n            // Get default\n            if (is.empty(value)) {\n                value = this.config[setting].default;\n            }\n\n            // Unsupported value\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                return;\n            }\n\n            // Disabled value\n            if (!this.config[setting].options.includes(value)) {\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                return;\n            }\n        }\n\n        // Get the list if we need to\n        if (!is.element(list)) {\n            list = pane && pane.querySelector('[role=\"menu\"]');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`[value=\"${value}\"]`);\n\n        if (is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.buttons.loop, false);\n        toggleHidden(this.elements.settings.panels.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleMenuButton.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n        const tracks = captions.getTracks.call(this);\n\n        // Toggle the pane and tab\n        controls.toggleMenuButton.call(this, type, tracks.length);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!tracks.length) {\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Do nothing if not selected\n        if (!this.config.controls.includes('settings') || !this.config.settings.includes('speed')) {\n            return;\n        }\n\n        // Menu required\n        if (!is.element(this.elements.settings.panels.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the list to populate\n        const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { buttons } = this.elements.settings;\n        const visible = !is.empty(buttons) && Object.values(buttons).some(button => !button.hidden);\n\n        toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Show/hide menu\n    toggleMenu(event) {\n        const { popup } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!is.element(popup) || !is.element(button)) {\n            return;\n        }\n\n        const show = is.boolean(event) ? event : is.element(popup) && popup.hasAttribute('hidden');\n\n        if (is.event(event)) {\n            const isMenuItem = is.element(popup) && popup.contains(event.target);\n            const isButton = event.target === this.elements.buttons.settings;\n\n            // If the click was inside the form or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && !isButton && show)) {\n                return;\n            }\n\n            // Prevent the toggle being caught by the doc listener\n            if (isButton) {\n                event.stopPropagation();\n            }\n        }\n\n        // Set form and button attributes\n        if (is.element(button)) {\n            button.setAttribute('aria-expanded', show);\n        }\n\n        if (is.element(popup)) {\n            toggleHidden(popup, !show);\n            toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n            if (show) {\n                popup.removeAttribute('tabindex');\n            } else {\n                popup.setAttribute('tabindex', -1);\n            }\n        }\n    },\n\n    // Get the natural size of a menu panel\n    getMenuSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.removeAttribute('hidden');\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Show a panel in the menu\n    showMenuPanel(type = '') {\n        const target = document.getElementById(`plyr-settings-${this.id}-${type}`);\n\n        // Nothing to show, bail\n        if (!is.element(target)) {\n            return;\n        }\n\n        // Hide all other panels\n        const container = target.parentNode;\n        const current = Array.from(container.children).find(node => !node.hidden);\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getMenuSize.call(this, target);\n\n            // Restore auto height/width\n            const restore = event => {\n                // We're only bothered about height and width on the container\n                if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                off.call(this, container, transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            on.call(this, container, transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        toggleHidden(current, true);\n        // current.setAttribute('tabindex', -1);\n\n        // Set attributes on target\n        toggleHidden(target, false);\n\n        // Focus the first item\n        const firstItem = target.querySelector('[role^=\"menuitem\"]');\n        if (firstItem) {\n            firstItem.focus();\n        }\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Do nothing if we want no controls\n        if (is.empty(this.config.controls)) {\n            return null;\n        }\n\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            progress.appendChild(\n                controls.createRange.call(this, 'seek', {\n                    id: `plyr-seek-${data.id}`,\n                }),\n            );\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = createElement(\n                    'span',\n                    {\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Toggle mute button\n        if (this.config.controls.includes('mute')) {\n            container.appendChild(controls.createButton.call(this, 'mute'));\n        }\n\n        // Volume range control\n        if (this.config.controls.includes('volume')) {\n            const volume = createElement('div', {\n                class: 'plyr__volume',\n            });\n\n            // Set the attributes\n            const attributes = {\n                max: 1,\n                step: 0.05,\n                value: this.config.volume,\n            };\n\n            // Create the volume range slider\n            volume.appendChild(\n                controls.createRange.call(\n                    this,\n                    'volume',\n                    extend(attributes, {\n                        id: `plyr-volume-${data.id}`,\n                    }),\n                ),\n            );\n\n            this.elements.volume = volume;\n\n            container.appendChild(volume);\n        }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            const control = createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            control.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    id: `plyr-settings-toggle-${data.id}`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const popup = createElement('div', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                hidden: '',\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n            });\n\n            const inner = createElement('div');\n\n            const home = createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n            });\n\n            // Create the menu\n            const menu = createElement('div', {\n                role: 'menu',\n            });\n\n            // Build the menu items\n            this.config.settings.forEach(type => {\n                const menuItem = createElement(\n                    'button',\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        role: 'menuitem',\n                        'aria-haspopup': true,\n                    }),\n                );\n\n                const flex = createElement('span', null, i18n.get(type, this.config));\n\n                const value = createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                flex.appendChild(value);\n                menuItem.appendChild(flex);\n                menu.appendChild(menuItem);\n\n                // Build the panes\n                const pane = createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    hidden: '',\n                });\n\n                // Back button\n                const back = createElement(\n                    'button',\n                    {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                    },\n                    i18n.get(type, this.config),\n                );\n                back.addEventListener('click', () => {\n                    controls.showMenuPanel.call(this, 'home');\n                });\n                pane.appendChild(back);\n\n                // Menu\n                pane.appendChild(\n                    createElement('div', {\n                        role: 'menu',\n                    }),\n                );\n\n                inner.appendChild(pane);\n\n                menuItem.addEventListener('click', () => {\n                    controls.showMenuPanel.call(this, type);\n                });\n\n                this.elements.settings.buttons[type] = menuItem;\n                this.elements.settings.panels[type] = pane;\n            });\n\n            home.appendChild(menu);\n            inner.appendChild(home);\n\n            popup.appendChild(inner);\n            control.appendChild(popup);\n            container.appendChild(control);\n\n            this.elements.settings.popup = popup;\n            this.elements.settings.menu = control;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.cors) {\n                loadSprite(icon.url, 'sprite-plyr');\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // Set template properties\n        const props = {\n            id: this.id,\n            seektime: this.config.seekTime,\n            title: this.config.title,\n        };\n        let update = true;\n\n        if (is.string(this.config.controls) || is.element(this.config.controls)) {\n            // String or HTMLElement passed as the option\n            container = this.config.controls;\n        } else if (is.function(this.config.controls)) {\n            // A custom function to build controls\n            // The function can return a HTMLElement or String\n            container = this.config.controls.call(this, props);\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n            update = false;\n        }\n\n        // Replace props with their value\n        const replace = input => {\n            let result = input;\n\n            Object.entries(props).forEach(([key, value]) => {\n                result = replaceAll(result, `{${key}}`, value);\n            });\n\n            return result;\n        };\n\n        // Update markup\n        if (update) {\n            if (is.string(this.config.controls)) {\n                container = replace(container);\n            } else if (is.element(container)) {\n                container.innerHTML = replace(container.innerHTML);\n            }\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML\n        if (is.element(container)) {\n            target.appendChild(container);\n        } else if (container) {\n            target.insertAdjacentHTML('beforeend', container);\n        }\n\n        // Find the elements if need be\n        if (!is.element(this.elements.controls)) {\n            controls.findElements.call(this);\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            repaint(target);\n        }\n\n        // Setup tooltips\n        if (this.config.tooltips.controls) {\n            const { classNames, selectors } = this.config;\n            const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n            const labels = getElements.call(this, selector);\n\n            Array.from(labels).forEach(label => {\n                toggleClass(label, this.config.classNames.hidden, false);\n                toggleClass(label, this.config.classNames.tooltip, true);\n            });\n        }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {string} input - the URL to be parsed\n * @param {boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n    let url = input;\n\n    if (safe) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        url = parser.href;\n    }\n\n    try {\n        return new URL(url);\n    } catch (e) {\n        return null;\n    }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n    const params = new URLSearchParams();\n\n    if (is.object(input)) {\n        Object.entries(input).forEach(([key, value]) => {\n            params.set(key, value);\n        });\n    }\n\n    return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    insertAfter,\n    removeElement,\n    toggleClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (\n                is.array(this.config.controls) &&\n                this.config.controls.includes('settings') &&\n                this.config.settings.includes('captions')\n            ) {\n                controls.setCaptionsMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!is.element(this.elements.captions)) {\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n\n            insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const url = parseUrl(src);\n\n                if (\n                    url !== null &&\n                    url.hostname !== window.location.href.hostname &&\n                    ['http:', 'https:'].includes(url.protocol)\n                ) {\n                    fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Get and set initial data\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\n        // * languages: Array of user's browser languages.\n        // * language:  The language preferred by user settings or config\n        // * active:    The state preferred by user settings or config\n        // * toggled:   The real captions state\n\n        const languages = dedupe(\n            Array.from(navigator.languages || navigator.userLanguage).map(language => language.split('-')[0]),\n        );\n\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n        // Use first browser language when language is 'auto'\n        if (language === 'auto') {\n            [language] = languages;\n        }\n\n        let active = this.storage.get('captions');\n        if (!is.boolean(active)) {\n            ({ active } = this.config.captions);\n        }\n\n        Object.assign(this.captions, {\n            toggled: false,\n            active,\n            language,\n            languages,\n        });\n\n        // Watch changes to textTracks and update captions menu\n        if (this.isHTML5) {\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n        }\n\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\n        setTimeout(captions.update.bind(this), 0);\n    },\n\n    // Update available language options in settings based on tracks\n    update() {\n        const tracks = captions.getTracks.call(this, true);\n        // Get the wanted language\n        const { active, language, meta, currentTrackNode } = this.captions;\n        const languageExists = Boolean(tracks.find(track => track.language === language));\n\n        // Handle tracks (add event listener and \"pseudo\"-default)\n        if (this.isHTML5 && this.isVideo) {\n            tracks.filter(track => !meta.get(track)).forEach(track => {\n                this.debug.log('Track added', track);\n                // Attempt to store if the original dom element was \"default\"\n                meta.set(track, {\n                    default: track.mode === 'showing',\n                });\n\n                // Turn off native caption rendering to avoid double captions\n                track.mode = 'hidden';\n\n                // Add event listener for cue changes\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n            });\n        }\n\n        // Update language first time it matches, or if the previous matching track was removed\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n            captions.setLanguage.call(this, language);\n            captions.toggle.call(this, active && languageExists);\n        }\n\n        // Enable or disable captions based on track length\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n\n        // Update available languages in list\n        if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        const { toggled } = this.captions; // Current state\n        const activeClass = this.config.classNames.captions.active;\n\n        // Get the next state\n        // If the method is called without parameter, toggle based on current value\n        const active = is.nullOrUndefined(input) ? !toggled : input;\n\n        // Update state and trigger event\n        if (active !== toggled) {\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.active = active;\n                this.storage.set({ captions: active });\n            }\n\n            // Force language if the call isn't passive and there is no matching language to toggle to\n            if (!this.language && active && !passive) {\n                const tracks = captions.getTracks.call(this);\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n                // Override user preferences to avoid switching languages if a matching track is added\n                this.captions.language = track.language;\n\n                // Set caption, but don't store in localStorage as user preference\n                captions.set.call(this, tracks.indexOf(track));\n                return;\n            }\n\n            // Toggle state\n            this.elements.buttons.captions.pressed = active;\n\n            // Add class hook\n            toggleClass(this.elements.container, activeClass, active);\n\n            this.captions.toggled = active;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // Trigger event (not used internally)\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n        }\n    },\n\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n        const tracks = captions.getTracks.call(this);\n\n        // Disable captions if setting to -1\n        if (index === -1) {\n            captions.toggle.call(this, false, passive);\n            return;\n        }\n\n        if (!is.number(index)) {\n            this.debug.warn('Invalid caption argument', index);\n            return;\n        }\n\n        if (!(index in tracks)) {\n            this.debug.warn('Track not found', index);\n            return;\n        }\n\n        if (this.captions.currentTrack !== index) {\n            this.captions.currentTrack = index;\n            const track = tracks[index];\n            const { language } = track || {};\n\n            // Store reference to node for invalidation on remove\n            this.captions.currentTrackNode = track;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.language = language;\n                this.storage.set({ language });\n            }\n\n            // Handle Vimeo captions\n            if (this.isVimeo) {\n                this.embed.enableTextTrack(language);\n            }\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'languagechange');\n        }\n\n        // Show captions\n        captions.toggle.call(this, true, passive);\n\n        if (this.isHTML5 && this.isVideo) {\n            // If we change the active track while a cue is already displayed we need to update it\n            captions.updateCues.call(this);\n        }\n    },\n\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n        if (!is.string(input)) {\n            this.debug.warn('Invalid language argument', input);\n            return;\n        }\n        // Normalize\n        const language = input.toLowerCase();\n        this.captions.language = language;\n\n        // Set currentTrack\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [language]);\n        captions.set.call(this, tracks.indexOf(track), passive);\n    },\n\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n        // Handle media or textTracks missing or null\n        const tracks = Array.from((this.media || {}).textTracks || []);\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n        return tracks\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n        const tracks = captions.getTracks.call(this);\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n        let track;\n        languages.every(language => {\n            track = sorted.find(track => track.language === language);\n            return !track; // Break iteration if there is a match\n        });\n        // If no match is found but is required, get first\n        return track || (force ? sorted[0] : undefined);\n    },\n\n    // Get the current track\n    getCurrentTrack() {\n        return captions.getTracks.call(this)[this.currentTrack];\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (is.track(currentTrack)) {\n            if (!is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (!is.element(this.elements.captions)) {\n            this.debug.warn('No captions element to render to');\n            return;\n        }\n\n        // Only accept array or empty input\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n            this.debug.warn('updateCues: Invalid input', input);\n            return;\n        }\n\n        let cues = input;\n\n        // Get cues from track\n        if (!cues) {\n            const track = captions.getCurrentTrack.call(this);\n            cues = Array.from((track || {}).activeCues || [])\n                .map(cue => cue.getCueAsHTML())\n                .map(getHTML);\n        }\n\n        // Set new caption text\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\n        const changed = content !== this.elements.captions.innerHTML;\n\n        if (changed) {\n            // Empty the container and create a new child element\n            emptyElement(this.elements.captions);\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n            caption.innerHTML = content;\n            this.elements.captions.appendChild(caption);\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'cuechange');\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n    playsinline: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Reset to start when playback ended\n    resetOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.3.12/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [\n            4320,\n            2880,\n            2160,\n            1440,\n            1080,\n            720,\n            576,\n            480,\n            360,\n            240,\n            'default', // YouTube's \"auto\"\n        ],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: 'auto',\n        // Listen to new tracks added after Plyr is initialized.\n        // This is needed for streaming captions, but may result in unselectable options\n        update: false,\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'settings',\n        'pip',\n        'airplay',\n        'fullscreen',\n    ],\n    settings: ['captions', 'quality', 'speed'],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime}s',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime}s',\n        seek: 'Seek',\n        seekLabel: '{currentTime} of {duration}',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        settings: 'Settings',\n        menuBack: 'Go back to previous menu',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n        qualityBadge: {\n            2160: '4K',\n            1440: 'HD',\n            1080: 'HD',\n            720: 'HD',\n            576: 'SD',\n            480: 'SD',\n        },\n    },\n\n    // URLs\n    urls: {\n        vimeo: {\n            sdk: 'https://player.vimeo.com/api/player.js',\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\n        },\n        youtube: {\n            sdk: 'https://www.youtube.com/iframe_api',\n            api:\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\n        },\n        googleIMA: {\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'enterfullscreen',\n        'exitfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n        'qualitychange',\n        'qualityrequested',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress__buffer',\n            loop: '.plyr__progress__loop', // Used later\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        caption: '.plyr__caption',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        video: 'plyr__video-wrapper',\n        embed: 'plyr__video-embed',\n        embedContainer: 'plyr__video-embed__container',\n        poster: 'plyr__poster',\n        posterEnabled: 'plyr__poster-enabled',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        controlPressed: 'plyr__control--pressed',\n        playing: 'plyr--playing',\n        paused: 'plyr--paused',\n        stopped: 'plyr--stopped',\n        loading: 'plyr--loading',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        display: {\n            time: 'plyr__time',\n        },\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {string} url\n */\nexport function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n        return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n        return providers.vimeo;\n    }\n\n    return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// ==========================================================================\n\nimport browser from './utils/browser';\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nfunction onChange() {\n    if (!this.enabled) {\n        return;\n    }\n\n    // Update toggle button\n    const button = this.player.elements.buttons.fullscreen;\n    if (is.element(button)) {\n        button.pressed = this.active;\n    }\n\n    // Trigger an event\n    triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n    // Toggle button and fire events\n    onChange.call(this);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.property = Fullscreen.property;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        on.call(\n            this.player,\n            document,\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n            () => {\n                // TODO: Filter for target??\n                onChange.call(this);\n            },\n        );\n\n        // Fullscreen toggle on double click\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(\n            document.fullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.mozFullScreenEnabled ||\n            document.msFullscreenEnabled\n        );\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = ['webkit', 'moz', 'ms'];\n\n        prefixes.some(pre => {\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get property() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n        return element === this.target;\n    }\n\n    // Get target element\n    get target() {\n        return browser.isIos && this.player.config.fullscreen.iosNative\n            ? this.player.media\n            : this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            if (this.player.playing) {\n                this.target.webkitEnterFullscreen();\n            }\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.property}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.property}`]();\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n\n        const handler = () => {\n            delete image.onload;\n            delete image.onerror;\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\n        };\n\n        Object.assign(image, { onload: handler, onerror: handler, src });\n    });\n}\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport loadImage from './utils/loadImage';\n\nconst ui = {\n    addStyleHook() {\n        toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Setup captions for HTML5\n        if (this.isHTML5) {\n            captions.setup.call(this);\n        }\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        controls.updateVolume.call(this);\n\n        // Reset time display\n        controls.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Check for picture-in-picture support\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.pip.supported,\n            support.pip && this.isHTML5 && this.isVideo,\n        );\n\n        // Check for airplay support\n        toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n        // Add iOS class\n        toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n        // Add touch class\n        toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            triggerEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n\n        // Assure the poster image is set, if the property was added before the element was created\n        if (this.poster) {\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\n        }\n\n        // Manually set the duration if user has overridden it.\n        // The event listeners for it doesn't get called if preload is disabled (#701)\n        if (this.config.duration) {\n            controls.durationUpdate.call(this);\n        }\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n        }\n\n        // If there's a play button, set label\n        Array.from(this.elements.buttons.play || []).forEach(button => {\n            button.setAttribute('aria-label', label);\n        });\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = getElement.call(this, 'iframe');\n\n            if (!is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !is.empty(this.config.title) ? this.config.title : 'video';\n            const format = i18n.get('frameTitle', this.config);\n\n            iframe.setAttribute('title', format.replace('{title}', title));\n        }\n    },\n\n    // Toggle poster\n    togglePoster(enable) {\n        toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n        // Don't override if call is passive\n        if (passive && this.poster) {\n            return Promise.reject(new Error('Poster already set'));\n        }\n\n        // Set property synchronously to respect the call order\n        this.media.setAttribute('poster', poster);\n\n        // Wait until ui is ready\n        return (\n            ready\n                .call(this)\n                // Load image\n                .then(() => loadImage(poster))\n                .catch(err => {\n                    // Hide poster on error unless it's been set by another call\n                    if (poster === this.poster) {\n                        ui.togglePoster.call(this, false);\n                    }\n                    // Rethrow\n                    throw err;\n                })\n                .then(() => {\n                    // Prevent race conditions\n                    if (poster !== this.poster) {\n                        throw new Error('setPoster cancelled by later call to setPoster');\n                    }\n                })\n                .then(() => {\n                    Object.assign(this.elements.poster.style, {\n                        backgroundImage: `url('${poster}')`,\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n                        backgroundSize: '',\n                    });\n                    ui.togglePoster.call(this, true);\n                    return poster;\n                })\n        );\n    },\n\n    // Check playing state\n    checkPlaying(event) {\n        // Class hooks\n        toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n        toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n        // Set state\n        Array.from(this.elements.buttons.play || []).forEach(target => {\n            target.pressed = this.playing;\n        });\n\n        // Only update controls on non timeupdate events\n        if (is.event(event) && event.type === 'timeupdate') {\n            return;\n        }\n\n        // Toggle controls\n        ui.toggleControls.call(this);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = ['stalled', 'waiting'].includes(event.type);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Update progress bar loading class state\n            toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Update controls visibility\n            ui.toggleControls.call(this);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n        const { controls } = this.elements;\n\n        if (controls && this.config.hideControls) {\n            // Show controls if force, loading, paused, or button interaction, otherwise hide\n            this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover));\n        }\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport browser from './utils/browser';\nimport { getElement, getElements, getFocusElement, matches, toggleClass, toggleHidden } from './utils/elements';\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            this.player.currentTime = this.player.duration / 10 * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Which keycodes should we prevent default\n            const preventDefault = [32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79];\n\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = getFocusElement();\n            if (\n                is.element(focused) &&\n                (focused !== this.player.elements.inputs.seek &&\n                    matches(focused, this.player.config.selectors.editable))\n            ) {\n                return;\n            }\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        this.player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    this.player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    this.player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        this.player.muted = !this.player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    this.player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    this.player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    this.player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        this.player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    this.player.loop = !this.player.loop;\n                    break;\n\n                /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (!this.player.fullscreen.enabled && this.player.fullscreen.active && code === 27) {\n                this.player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        this.player.touch = true;\n\n        // Add touch class\n        toggleClass(this.player.elements.container, this.player.config.classNames.isTouch, true);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        // Keyboard shortcuts\n        if (this.player.config.keyboard.global) {\n            toggleListener.call(this.player, window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(this.player, document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        once.call(this.player, document.body, 'touchstart', this.firstTouch);\n    }\n\n    // Container listeners\n    container() {\n        // Keyboard shortcuts\n        if (!this.player.config.keyboard.global && this.player.config.keyboard.focused) {\n            on.call(this.player, this.player.elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Detect tab focus\n        // Remove class on blur/focusout\n        on.call(this.player, this.player.elements.container, 'focusout', event => {\n            toggleClass(event.target, this.player.config.classNames.tabFocus, false);\n        });\n        // Add classname to tabbed elements\n        on.call(this.player, this.player.elements.container, 'keydown', event => {\n            if (event.keyCode !== 9) {\n                return;\n            }\n\n            // Delay the adding of classname until the focus has changed\n            // This event fires before the focusin event\n            setTimeout(() => {\n                toggleClass(getFocusElement(), this.player.config.classNames.tabFocus, true);\n            }, 0);\n        });\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(\n            this.player,\n            this.player.elements.container,\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n            event => {\n                const { controls } = this.player.elements;\n\n                // Remove button states for fullscreen\n                if (event.type === 'enterfullscreen') {\n                    controls.pressed = false;\n                    controls.hover = false;\n                }\n\n                // Show, then hide after a timeout unless another control event occurs\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n\n                let delay = 0;\n\n                if (show) {\n                    ui.toggleControls.call(this.player, true);\n                    // Use longer timeout for touch devices\n                    delay = this.player.touch ? 3000 : 2000;\n                }\n\n                // Clear timer\n                clearTimeout(this.player.timers.controls);\n                // Timer to prevent flicker when seeking\n                this.player.timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\n            },\n        );\n    }\n\n    // Listen for media events\n    media() {\n        // Time change on media\n        on.call(this.player, this.player.media, 'timeupdate seeking seeked', event =>\n            controls.timeUpdate.call(this.player, event),\n        );\n\n        // Display duration\n        on.call(this.player, this.player.media, 'durationchange loadeddata loadedmetadata', event =>\n            controls.durationUpdate.call(this.player, event),\n        );\n\n        // Check for audio tracks on load\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n        on.call(this.player, this.player.media, 'canplay', () => {\n            toggleHidden(this.player.elements.volume, !this.player.hasAudio);\n            toggleHidden(this.player.elements.buttons.mute, !this.player.hasAudio);\n        });\n\n        // Handle the media finishing\n        on.call(this.player, this.player.media, 'ended', () => {\n            // Show poster on end\n            if (this.player.isHTML5 && this.player.isVideo && this.player.config.resetOnEnd) {\n                // Restart\n                this.player.restart();\n            }\n        });\n\n        // Check for buffer progress\n        on.call(this.player, this.player.media, 'progress playing seeking seeked', event =>\n            controls.updateProgress.call(this.player, event),\n        );\n\n        // Handle volume changes\n        on.call(this.player, this.player.media, 'volumechange', event =>\n            controls.updateVolume.call(this.player, event),\n        );\n\n        // Handle play/pause\n        on.call(this.player, this.player.media, 'playing play pause ended emptied timeupdate', event =>\n            ui.checkPlaying.call(this.player, event),\n        );\n\n        // Loading state\n        on.call(this.player, this.player.media, 'waiting canplay seeked playing', event =>\n            ui.checkLoading.call(this.player, event),\n        );\n\n        // If autoplay, then load advertisement if required\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n        on.call(this.player, this.player.media, 'playing', () => {\n            if (!this.player.ads) {\n                return;\n            }\n\n            // If ads are enabled, wait for them first\n            if (this.player.ads.enabled && !this.player.ads.initialized) {\n                // Wait for manager response\n                this.player.ads.managerPromise.then(() => this.player.ads.play()).catch(() => this.player.play());\n            }\n        });\n\n        // Click video\n        if (this.player.supported.ui && this.player.config.clickToPlay && !this.player.isAudio) {\n            // Re-fetch the wrapper\n            const wrapper = getElement.call(this.player, `.${this.player.config.classNames.video}`);\n\n            // Bail if there's no wrapper (this should never happen)\n            if (!is.element(wrapper)) {\n                return;\n            }\n\n            // On click play, pause ore restart\n            on.call(this.player, wrapper, 'click', () => {\n                // Touch devices will just show controls (if we're hiding controls)\n                if (this.player.config.hideControls && this.player.touch && !this.player.paused) {\n                    return;\n                }\n\n                if (this.player.paused) {\n                    this.player.play();\n                } else if (this.player.ended) {\n                    this.player.restart();\n                    this.player.play();\n                } else {\n                    this.player.pause();\n                }\n            });\n        }\n\n        // Disable right click\n        if (this.player.supported.ui && this.player.config.disableContextMenu) {\n            on.call(\n                this.player,\n                this.player.elements.wrapper,\n                'contextmenu',\n                event => {\n                    event.preventDefault();\n                },\n                false,\n            );\n        }\n\n        // Volume change\n        on.call(this.player, this.player.media, 'volumechange', () => {\n            // Save to storage\n            this.player.storage.set({ volume: this.player.volume, muted: this.player.muted });\n        });\n\n        // Speed change\n        on.call(this.player, this.player.media, 'ratechange', () => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'speed');\n\n            // Save to storage\n            this.player.storage.set({ speed: this.player.speed });\n        });\n\n        // Quality request\n        on.call(this.player, this.player.media, 'qualityrequested', event => {\n            // Save to storage\n            this.player.storage.set({ quality: event.detail.quality });\n        });\n\n        // Quality change\n        on.call(this.player, this.player.media, 'qualitychange', event => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'quality', null, event.detail.quality);\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        const proxyEvents = this.player.config.events.concat(['keyup', 'keydown']).join(' ');\n        on.call(this.player, this.player.media, proxyEvents, event => {\n            let { detail = {} } = event;\n\n            // Get error details from media\n            if (event.type === 'error') {\n                detail = this.player.media.error;\n            }\n\n            triggerEvent.call(this.player, this.player.elements.container, event.type, true, detail);\n        });\n    }\n\n    // Listen for control events\n    controls() {\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Run default and custom handlers\n        const proxy = (event, defaultHandler, customHandlerKey) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = is.function(customHandler);\n            let returned = true;\n\n            // Execute custom handler\n            if (hasCustomHandler) {\n                returned = customHandler.call(this.player, event);\n            }\n\n            // Only call default handler if not prevented in custom handler\n            if (returned && is.function(defaultHandler)) {\n                defaultHandler.call(this.player, event);\n            }\n        };\n\n        // Trigger custom and default handlers\n        const bind = (element, type, defaultHandler, customHandlerKey, passive = true) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = is.function(customHandler);\n\n            on.call(\n                this.player,\n                element,\n                type,\n                event => proxy(event, defaultHandler, customHandlerKey),\n                passive && !hasCustomHandler,\n            );\n        };\n\n        // Play/pause toggle\n        Array.from(this.player.elements.buttons.play).forEach(button => {\n            bind(button, 'click', this.player.togglePlay, 'play');\n        });\n\n        // Pause\n        bind(this.player.elements.buttons.restart, 'click', this.player.restart, 'restart');\n\n        // Rewind\n        bind(this.player.elements.buttons.rewind, 'click', this.player.rewind, 'rewind');\n\n        // Rewind\n        bind(this.player.elements.buttons.fastForward, 'click', this.player.forward, 'fastForward');\n\n        // Mute toggle\n        bind(\n            this.player.elements.buttons.mute,\n            'click',\n            () => {\n                this.player.muted = !this.player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        bind(this.player.elements.buttons.captions, 'click', () => this.player.toggleCaptions());\n\n        // Fullscreen toggle\n        bind(\n            this.player.elements.buttons.fullscreen,\n            'click',\n            () => {\n                this.player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        bind(\n            this.player.elements.buttons.pip,\n            'click',\n            () => {\n                this.player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        bind(this.player.elements.buttons.airplay, 'click', this.player.airplay, 'airplay');\n\n        // Settings menu\n        bind(this.player.elements.buttons.settings, 'click', event => {\n            controls.toggleMenu.call(this.player, event);\n        });\n\n        // Settings menu\n        bind(this.player.elements.settings.popup, 'click', event => {\n            event.stopPropagation();\n\n            // Go back to home tab on click\n            const showHomeTab = () => {\n                controls.showMenuPanel.call(this.player, 'home');\n            };\n\n            // Settings menu items - use event delegation as items are added/removed\n            if (matches(event.target, this.player.config.selectors.inputs.language)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.currentTrack = Number(event.target.value);\n                        showHomeTab();\n                    },\n                    'language',\n                );\n            } else if (matches(event.target, this.player.config.selectors.inputs.quality)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.quality = event.target.value;\n                        showHomeTab();\n                    },\n                    'quality',\n                );\n            } else if (matches(event.target, this.player.config.selectors.inputs.speed)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.speed = parseFloat(event.target.value);\n                        showHomeTab();\n                    },\n                    'speed',\n                );\n            }\n        });\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        bind(this.player.elements.inputs.seek, 'mousedown mousemove', event => {\n            const clientRect = this.player.elements.progress.getBoundingClientRect();\n            const percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n            event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        bind(this.player.elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\n            const seek = event.currentTarget;\n\n            const code = event.keyCode ? event.keyCode : event.which;\n            const eventType = event.type;\n\n            if ((eventType === 'keydown' || eventType === 'keyup') && (code !== 39 && code !== 37)) {\n                return;\n            }\n            // Was playing before?\n            const play = seek.hasAttribute('play-on-seeked');\n\n            // Done seeking\n            const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n\n            // If we're done seeking and it was playing, resume playback\n            if (play && done) {\n                seek.removeAttribute('play-on-seeked');\n                this.player.play();\n            } else if (!done && this.player.playing) {\n                seek.setAttribute('play-on-seeked', '');\n                this.player.pause();\n            }\n        });\n\n        // Seek\n        bind(\n            this.player.elements.inputs.seek,\n            inputEvent,\n            event => {\n                const seek = event.currentTarget;\n\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n                let seekTo = seek.getAttribute('seek-value');\n\n                if (is.empty(seekTo)) {\n                    seekTo = seek.value;\n                }\n\n                seek.removeAttribute('seek-value');\n\n                this.player.currentTime = seekTo / seek.max * this.player.duration;\n            },\n            'seek',\n        );\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (this.player.config.toggleInvert && !is.element(this.player.elements.display.duration)) {\n            bind(this.player.elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (this.player.currentTime === 0) {\n                    return;\n                }\n\n                this.player.config.invertTime = !this.player.config.invertTime;\n\n                controls.timeUpdate.call(this.player);\n            });\n        }\n\n        // Volume\n        bind(\n            this.player.elements.inputs.volume,\n            inputEvent,\n            event => {\n                this.player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            Array.from(getElements.call(this.player, 'input[type=\"range\"]')).forEach(element => {\n                bind(element, 'input', event => controls.updateRangeFill.call(this.player, event.target));\n            });\n        }\n\n        // Seek tooltip\n        bind(this.player.elements.progress, 'mouseenter mouseleave mousemove', event =>\n            controls.updateSeekTooltip.call(this.player, event),\n        );\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        bind(this.player.elements.controls, 'mouseenter mouseleave', event => {\n            this.player.elements.controls.hover = !this.player.touch && event.type === 'mouseenter';\n        });\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        bind(this.player.elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n            this.player.elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n        });\n\n        // Focus in/out on controls\n        bind(this.player.elements.controls, 'focusin focusout', event => {\n            const { config, elements, timers } = this.player;\n\n            // Skip transition to prevent focus from scrolling the parent element\n            toggleClass(elements.controls, config.classNames.noTransition, event.type === 'focusin');\n\n            // Toggle\n            ui.toggleControls.call(this.player, event.type === 'focusin');\n\n            // If focusin, hide again after delay\n            if (event.type === 'focusin') {\n                // Restore transition\n                setTimeout(() => {\n                    toggleClass(elements.controls, config.classNames.noTransition, false);\n                }, 0);\n\n                // Delay a little more for keyboard users\n                const delay = this.touch ? 3000 : 4000;\n\n                // Clear timer\n                clearTimeout(timers.controls);\n                // Hide\n                timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\n            }\n        });\n\n        // Mouse wheel for volume\n        bind(\n            this.player.elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n                const step = 1 / 50;\n                let direction = 0;\n\n                // Scroll down (or up on natural) to decrease\n                if (event.deltaY < 0 || event.deltaX > 0) {\n                    if (inverted) {\n                        this.player.decreaseVolume(step);\n                        direction = -1;\n                    } else {\n                        this.player.increaseVolume(step);\n                        direction = 1;\n                    }\n                }\n\n                // Scroll up (or down on natural) to increase\n                if (event.deltaY > 0 || event.deltaX < 0) {\n                    if (inverted) {\n                        this.player.increaseVolume(step);\n                        direction = 1;\n                    } else {\n                        this.player.decreaseVolume(step);\n                        direction = -1;\n                    }\n                }\n\n                // Don't break page scrolling at max and min\n                if (\n                    (direction === 1 && this.player.media.volume < 1) ||\n                    (direction === -1 && this.player.media.volume > 0)\n                ) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n}\n\nexport default Listeners;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText`\n        result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n    return new Promise((resolve, reject) => {\n        loadjs(url, {\n            success: resolve,\n            error: reject,\n        });\n    });\n}\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from './../captions';\nimport controls from './../controls';\nimport ui from './../ui';\nimport { createElement, replaceElement, toggleClass } from './../utils/elements';\nimport { triggerEvent } from './../utils/events';\nimport fetch from './../utils/fetch';\nimport is from './../utils/is';\nimport loadScript from './../utils/loadScript';\nimport { format, stripHTML } from './../utils/strings';\nimport { buildUrlParams } from './../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    if (is.number(Number(url))) {\n        return url;\n    }\n\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Get aspect ratio for dimensions\nfunction getAspectRatio(width, height) {\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n    const ratio = getRatio(width, height);\n    return `${width / ratio}:${height / ratio}`;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!is.object(window.Vimeo)) {\n            loadScript(this.config.urls.vimeo.sdk)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':');\n        const padding = 100 / x * y;\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            // muted: player.muted,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n        };\n        const params = buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(player.config.attributes.embed.id);\n        }\n\n        const id = parseId(source);\n\n        // Build an iframe\n        const iframe = createElement('iframe');\n        const src = format(player.config.urls.vimeo.iframe, id, params);\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Inject the package\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n\n        // Get poster image\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\n            if (is.empty(response)) {\n                return;\n            }\n\n            // Get the URL for thumbnail\n            const url = new URL(response[0].thumbnail_large);\n\n            // Get original image\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\n\n            // Set and show poster\n            ui.setPoster.call(player, url.href).catch(() => {});\n        });\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe, {\n            autopause: player.config.autopause,\n            muted: player.muted,\n        });\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            return player.embed.play();\n        };\n\n        player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            return player.embed.pause();\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Vimeo will automatically play on seek if the video hasn't been played before\n\n                // Get current paused state and volume etc\n                const { embed, media, paused, volume } = player;\n                const restorePause = paused && !embed.hasPlayed;\n\n                // Set seeking state and trigger event\n                media.seeking = true;\n                triggerEvent.call(player, media, 'seeking');\n\n                // If paused, mute until seek is complete\n                Promise.resolve(restorePause && embed.setVolume(0))\n                    // Seek\n                    .then(() => embed.setCurrentTime(time))\n                    // Restore paused\n                    .then(() => restorePause && embed.pause())\n                    // Restore volume\n                    .then(() => restorePause && embed.setVolume(volume))\n                    .catch(() => {\n                        // Do nothing\n                    });\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        triggerEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n            const ratio = getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', ({ cues = [] }) => {\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\n            captions.updateCues.call(player, strippedCues);\n        });\n\n        player.embed.on('loaded', () => {\n            // Assure state and events are updated on autoplay\n            player.embed.getPaused().then(paused => {\n                assurePlaybackState.call(player, !paused);\n                if (!paused) {\n                    triggerEvent.call(player, player.media, 'playing');\n                }\n            });\n\n            if (is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            assurePlaybackState.call(player, true);\n            triggerEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            assurePlaybackState.call(player, false);\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            triggerEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    triggerEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            triggerEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            triggerEvent.call(player, player.media, 'error');\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport controls from './../controls';\nimport ui from './../ui';\nimport { dedupe } from './../utils/arrays';\nimport { createElement, replaceElement, toggleClass } from './../utils/elements';\nimport { triggerEvent } from './../utils/events';\nimport fetch from './../utils/fetch';\nimport is from './../utils/is';\nimport loadImage from './../utils/loadImage';\nimport loadScript from './../utils/loadScript';\nimport { format, generateId } from './../utils/strings';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Standardise YouTube quality unit\nfunction mapQualityUnit(input) {\n    const qualities = {\n        hd2160: 2160,\n        hd1440: 1440,\n        hd1080: 1080,\n        hd720: 720,\n        large: 480,\n        medium: 360,\n        small: 240,\n        tiny: 144,\n    };\n\n    const entry = Object.entries(qualities).find(entry => entry.includes(input));\n\n    if (entry) {\n        // Get the match corresponding to the input\n        return entry.find(value => value !== input);\n    }\n\n    return 'default';\n}\n\nfunction mapQualityUnits(levels) {\n    if (is.empty(levels)) {\n        return levels;\n    }\n\n    return dedupe(levels.map(level => mapQualityUnit(level)));\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (is.string(key) && !is.empty(key)) {\n            const url = format(this.config.urls.youtube.api, videoId, key);\n\n            fetch(url)\n                .then(result => {\n                    if (is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = parseId(source);\n        const id = generateId(player.provider);\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Replace media element\n        const container = createElement('div', { id, poster });\n        player.media = replaceElement(container, player.media);\n\n        // Id to poster wrapper\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n            .then(image => ui.setPoster.call(player, image.src))\n            .then(posterSrc => {\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n                if (!posterSrc.includes('maxres')) {\n                    player.elements.poster.style.backgroundSize = 'cover';\n                }\n            })\n            .catch(() => {});\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // YouTube may fire onError twice, so only handle it once\n                    if (!player.media.error) {\n                        const code = event.data;\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                        const message =\n                            {\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n                            }[code] || 'An unknown error occured';\n\n                        player.media.error = { code, message };\n\n                        triggerEvent.call(player, player.media, 'error');\n                    }\n                },\n                onPlaybackQualityChange() {\n                    triggerEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: player.media.quality,\n                    });\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    triggerEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        assurePlaybackState.call(player, true);\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        assurePlaybackState.call(player, false);\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                            if (player.paused && !player.embed.hasPlayed) {\n                                player.embed.mute();\n                            }\n\n                            // Set seeking state and trigger event\n                            player.media.seeking = true;\n                            triggerEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Quality\n                    Object.defineProperty(player.media, 'quality', {\n                        get() {\n                            return mapQualityUnit(instance.getPlaybackQuality());\n                        },\n                        set(input) {\n                            instance.setPlaybackQuality(mapQualityUnit(input));\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                    triggerEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            triggerEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            triggerEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n                    if (seeked) {\n                        // Unset seeking and fire seeked event\n                        player.media.seeking = false;\n                        triggerEvent.call(player, player.media, 'seeked');\n                    }\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            triggerEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            triggerEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            assurePlaybackState.call(player, false);\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                triggerEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (player.media.paused && !player.embed.hasPlayed) {\n                                player.media.pause();\n                            } else {\n                                assurePlaybackState.call(player, true);\n\n                                triggerEvent.call(player, player.media, 'playing');\n\n                                // Poll to get playback progress\n                                player.timers.playing = setInterval(() => {\n                                    triggerEvent.call(player, player.media, 'timeupdate');\n                                }, 50);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (player.media.duration !== instance.getDuration()) {\n                                    player.media.duration = instance.getDuration();\n                                    triggerEvent.call(player, player.media, 'durationchange');\n                                }\n\n                                // Get quality\n                                controls.setQualityMenu.call(\n                                    player,\n                                    mapQualityUnits(instance.getAvailableQualityLevels()),\n                                );\n                            }\n\n                            break;\n\n                        case 2:\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (!player.muted) {\n                                player.embed.unMute();\n                            }\n                            assurePlaybackState.call(player, false);\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            wrap(this.media, this.elements.wrapper);\n\n            // Faux poster container\n            this.elements.poster = createElement('div', {\n                class: this.config.classNames.poster,\n            });\n\n            this.elements.wrapper.appendChild(this.elements.poster);\n        }\n\n        if (this.isHTML5) {\n            html5.extend.call(this);\n        } else if (this.isYouTube) {\n            youtube.setup.call(this);\n        } else if (this.isVimeo) {\n            vimeo.setup.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport i18n from '../i18n';\nimport { createElement } from './../utils/elements';\nimport { triggerEvent } from './../utils/events';\nimport is from './../utils/is';\nimport loadScript from './../utils/loadScript';\nimport { formatTime } from './../utils/time';\nimport { buildUrlParams } from './../utils/urls';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    get enabled() {\n        return this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId);\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\n                loadScript(this.player.config.urls.googleIMA.sdk)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n                event => this.onAdsManagerLoaded(event),\n                false,\n            );\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            // Mute based on current state\n            request.setAdWillPlayMuted(!this.player.muted);\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Get skippable state\n        // TODO: Skip button\n        // this.player.debug.warn(this.manager.getAdSkippableState());\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            triggerEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport { providers } from './config/types';\nimport html5 from './html5';\nimport media from './media';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement } from './utils/elements';\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (is.string(attributes)) {\n            insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (is.array(attributes)) {\n            attributes.forEach(attribute => {\n                insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!getDeep(input, 'sources.length')) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                removeElement(this.media);\n                this.media = null;\n\n                // Reset class name\n                if (is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // Set the type and provider\n                const { sources, type } = input;\n                const [{ provider = providers.html5, src }] = sources;\n                const tagName = provider === 'html5' ? type : 'div';\n                const attributes = provider === 'html5' ? {} : { src };\n\n                Object.assign(this, {\n                    provider,\n                    type,\n                    // Check for support\n                    supported: support.check(type, provider, this.config.playsinline),\n                    // Create new element\n                    media: createElement(tagName, attributes),\n                });\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if (!is.empty(input.poster)) {\n                        this.poster = input.poster;\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', sources);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if ('tracks' in input) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                    }\n\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.3.15\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport Listeners from './listeners';\nimport media from './media';\nimport Ads from './plugins/ads';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { closest } from './utils/arrays';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { cloneDeep, extend } from './utils/objects';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = extend(\n            {},\n            defaults,\n            Plyr.defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            captions: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                popup: null,\n                menu: null,\n                panels: {},\n                buttons: {},\n            },\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: -1,\n            meta: new WeakMap(),\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        const clone = this.media.cloneNode(true);\n        clone.autoplay = false;\n        this.elements.original = clone;\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (is.element(iframe)) {\n                    // Detect provider\n                    url = parseUrl(iframe.getAttribute('src'));\n                    this.provider = getProviderByUrl(url.toString());\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    if (url.searchParams.length) {\n                        const truthy = ['1', 'true'];\n\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(url.searchParams.get('loop'))) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        this.eventListeners = [];\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!is.element(this.elements.container)) {\n            this.elements.container = createElement('div');\n            wrap(this.media, this.elements.container);\n        }\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            on.call(this, this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        this.ads = new Ads(this);\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!is.function(this.media.play)) {\n            return null;\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n        return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.pause();\n            this.restart();\n        } else if (is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        // Bail if media duration isn't available yet\n        if (!this.duration) {\n            return;\n        }\n\n        // Validate input\n        const inputIsValid = is.number(input) && input > 0;\n\n        // Set\n        this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // Media duration can be NaN before the media has loaded\n        const duration = (this.media || {}).duration || 0;\n\n        // If config duration is funky, use regular duration\n        return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 1);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume - (is.number(step) ? step : 1);\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (is.number(input)) {\n            speed = input;\n        }\n\n        if (!is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        const config = this.config.quality;\n        const options = this.options.quality;\n\n        if (!options.length) {\n            return;\n        }\n\n        let quality = [\n            !is.empty(input) && Number(input),\n            this.storage.get('quality'),\n            config.selected,\n            config.default,\n        ].find(is.number);\n\n        if (!options.includes(quality)) {\n            const value = closest(options, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n            quality = value;\n        }\n\n        // Trigger request event\n        triggerEvent.call(this, this.media, 'qualityrequested', false, { quality });\n\n        // Update config\n        config.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isVideo) {\n            this.debug.warn('Poster can only be set for video');\n            return;\n        }\n\n        ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {number} - Caption index\n     */\n    set currentTrack(input) {\n        captions.set.call(this, input, false);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n        const { toggled, currentTrack } = this.captions;\n        return toggled ? currentTrack : -1;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n        return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        const states = {\n            pip: 'picture-in-picture',\n            inline: 'inline',\n        };\n\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = is.boolean(input) ? input : this.pip === states.inline;\n\n        // Toggle based on current state\n        this.media.webkitSetPresentationMode(toggle ? states.pip : states.inline);\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        return this.media.webkitPresentationMode;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} [toggle] - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n            // Get state before change\n            const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n\n            // Negate the argument if not undefined since adding the class to hides the controls\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\n\n            // Apply and get updated state\n            const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n            // Close menu\n            if (hiding && this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n                controls.toggleMenu.call(this, false);\n            }\n            // Trigger event on change\n            if (hiding !== isHidden) {\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\n                triggerEvent.call(this, this.media, eventName);\n            }\n            return !hiding;\n        }\n        return false;\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        on.call(this, this.elements.container, event, callback);\n    }\n    /**\n     * Add event listeners once\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    once(event, callback) {\n        once.call(this, this.elements.container, event, callback);\n    }\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    removeElement(this.elements.buttons.play);\n                    removeElement(this.elements.captions);\n                    removeElement(this.elements.controls);\n                    removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                unbindListeners.call(this);\n\n                // Replace the container with the original element provided\n                replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n            // Clear timeout\n            clearTimeout(this.timers.loading);\n\n            // Restore native video controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Clean up\n            done();\n        } else if (this.isYouTube) {\n            // Clear timers\n            clearInterval(this.timers.buffering);\n            clearInterval(this.timers.playing);\n\n            // Destroy YouTube API\n            if (this.embed !== null && is.function(this.embed.destroy)) {\n                this.embed.destroy();\n            }\n\n            // Clean up\n            done();\n        } else if (this.isVimeo) {\n            // Destroy Vimeo API\n            // then clean up (wait, to prevent postmessage errors)\n            if (this.embed !== null) {\n                this.embed.unload().then(done);\n            }\n\n            // Vimeo does not always return\n            setTimeout(done, 200);\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {object} options\n     */\n    static setup(selector, options = {}) {\n        let targets = null;\n\n        if (is.string(selector)) {\n            targets = Array.from(document.querySelectorAll(selector));\n        } else if (is.nodeList(selector)) {\n            targets = Array.from(selector);\n        } else if (is.array(selector)) {\n            targets = selector.filter(is.element);\n        }\n\n        if (is.empty(targets)) {\n            return null;\n        }\n\n        return targets.map(t => new Plyr(t, options));\n    }\n}\n\nPlyr.defaults = cloneDeep(defaults);\n\nexport default Plyr;\n"]}