{"version":3,"sources":["src/js/utils/is.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/i18n.js","src/js/utils/arrays.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/utils/loadImage.js","src/js/ui.js","src/js/listeners.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/source.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","isNullOrUndefined","isObject","Object","isString","String","isArray","Array","isNodeList","NodeList","isEmpty","length","keys","is","nullOrUndefined","object","number","Number","isNaN","string","boolean","function","Function","array","weakMap","WeakMap","nodeList","element","Element","textNode","Text","event","Event","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","URL","startsWith","hostname","e","empty","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","toggleListener","callback","toggle","arguments","undefined","_this","this","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","args","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","wrap","elements","wrapper","targets","from","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","filter","_ref","value","slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","hasAttribute","removeAttribute","toggleClass","force","method","classList","contains","hasClass","matches","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","querySelectorAll","includes","getElements","container","getElement","querySelector","getFocusElement","focused","activeElement","body","setFocus","tabFocus","focus","config","classNames","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","find","style","range","browser","isIE","documentMode","isWebkit","documentElement","test","navigator","userAgent","isIPhone","platform","isIos","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","inputType","_inputType$split","mediaType","isHTML5","media","canPlayType","err","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","map","extend","player","set","_player$media","currentTime","paused","preload","readyState","src","play","load","quality","cancelRequests","blankVideo","debug","log","getDeep","path","reduce","obj","target","sources","shift","concat","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","i18n","{seektime}","seekTime","{title}","title","_ref2","dedupe","item","indexOf","Storage","classCallCheck","enabled","storage","store","localStorage","getItem","json","JSON","parse","setItem","stringify","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","Error","status","open","send","loadSprite","hasId","exists","getElementById","update","data","insertAdjacentElement","useStorage","cached","prefix","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","controls","getIconUrl","cors","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","pause","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","button","label","labelPressed","iconPressed","control","controlPressed","enumerable","pressed","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","createMenuItem","list","_ref$badge","_ref$checked","checked","aria-checked","flex","children","node","listeners","bind","currentTrack","speed","parseFloat","showMenuPanel","updateTimeDisplay","updateVolume","setRange","muted","updateProgress","_this2","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this3","tooltips","clientRect","getBoundingClientRect","visible","_toggle","width","pageX","left","timeUpdate","invert","invertTime","seeking","durationUpdate","hasDuration","displayDuration","toggleMenuButton","setting","updateSetting","pane","panels","default","getLabel","setQualityMenu","_this4","checkMenu","sort","a","b","sorting","getBadge","setCaptionsMenu","_this5","tracks","getTracks","toggled","language","unshift","setSpeedMenu","_this6","isVimeo","values","some","toggleMenu","popup","show","isMenuItem","isButton","stopPropagation","firstItem","getMenuSize","tab","clone","position","opacity","scrollWidth","height","scrollHeight","_this7","size","restore","propertyName","create","_this8","aria-haspopup","aria-controls","aria-expanded","aria-labelled-by","inner","home","menuItem","which","preventDefault","backButton","inject","_this9","Math","floor","random","props","seektime","insertAdjacentHTML","setTimeout","offsetHeight","_config","labels","parseUrl","parser","href","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","protocol","blob","createObjectURL","languages","userLanguage","active","trackEvents","_captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","activeClass","findTrack","toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","caption","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","loop","selected","keyboard","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","frameTitle","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","urls","vimeo","sdk","iframe","youtube","googleIMA","editable","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","google","publisherId","providers","types","noop","Console","console","onChange","first","last","keyCode","shiftKey","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","Fullscreen","property","native","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","build","checkPlaying","ready","setTitle","setPoster","isEmbed","togglePoster","enable","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","Listeners","lastKey","handleKey","firstTouch","code","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","delay","hasAudio","initialized","managerPromise","isAudio","ended","proxyEvents","_event$detail","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","proxy","inputEvent","currentTarget","eventType","done","seekTo","_player","webkitDirectionInvertedFromDevice","_map","deltaX","deltaY","_map2","direction","sign","abs","factory","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isCss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","onbeforeload","ev","sheet","cssText","defaultPrevented","head","loadjs","paths","arg1","arg2","fn","numWaiting","loadFiles","deps","bundleIds","r","subscribe","isDefined","module","exports","loadScript","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split","_split2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","name","setLoop","currentSrc","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","getAspectRatio","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","mapQualityUnit","entry","hd2160","hd1440","hd1080","hd720","large","medium","small","tiny","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","posterSrc","format$$1","playerVars","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackQualityChange","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","getPlaybackQuality","setPlaybackQuality","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","levels","getAvailableQualityLevels","level","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","initialize","init","adError","zIndex","_this10","destroy","_this11","handlers","_this12","base","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","Date","now","AV_WIDTH","AV_HEIGHT","AV_CDIM2","insertElements","attribute","change","_sources$","_sources$$provider","tagName","crossorigin","Plyr","failed","jQuery","original","getProviderByUrl","searchParams","truthy","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","prev","curr","closest","states","webkitPresentationMode","inline","t"],"mappings":"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","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = input => input === null || typeof input === 'undefined';\nconst isObject = input => getConstructor(input) === Object;\nconst isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = input => getConstructor(input) === String;\nconst isBoolean = input => getConstructor(input) === Boolean;\nconst isFunction = input => getConstructor(input) === Function;\nconst isArray = input => Array.isArray(input);\nconst isWeakMap = input => instanceOf(input, WeakMap);\nconst isNodeList = input => instanceOf(input, NodeList);\nconst isElement = input => instanceOf(input, Element);\nconst isTextNode = input => getConstructor(input) === Text;\nconst isEvent = input => instanceOf(input, Event);\nconst isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\nconst isTrack = input => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\n\nconst isEmpty = input =>\n    isNullOrUndefined(input) ||\n    ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\n    (isObject(input) && !Object.keys(input).length);\n\nconst isUrl = input => {\n    // Accept a URL object\n    if (instanceOf(input, window.URL)) {\n        return true;\n    }\n\n    // Add the protocol if required\n    let string = input;\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\n        string = `http://${input}`;\n    }\n\n    try {\n        return !isEmpty(new URL(string).hostname);\n    } catch (e) {\n        return false;\n    }\n};\n\nexport default {\n    nullOrUndefined: isNullOrUndefined,\n    object: isObject,\n    number: isNumber,\n    string: isString,\n    boolean: isBoolean,\n    function: isFunction,\n    array: isArray,\n    weakMap: isWeakMap,\n    nodeList: isNodeList,\n    element: isElement,\n    textNode: isTextNode,\n    event: isEvent,\n    cue: isCue,\n    track: isTrack,\n    url: isUrl,\n    empty: isEmpty,\n};\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get() {\n                supported = true;\n                return null;\n            },\n        });\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n        // Do nothing\n    }\n\n    return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n    // Bail if no element, event, or callback\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n        return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n        options = {\n            // Whether the listener can be passive (i.e. default never prevented)\n            passive,\n            // Whether the listener is a capturing listener or not\n            capture,\n        };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n        if (this && this.eventListeners && toggle) {\n            // Cache event listener\n            this.eventListeners.push({ element, type, callback, options });\n        }\n\n        element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n    });\n}\n\n// Bind event handler\nexport function on(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, true, passive, capture);\n}\n\n// Unbind event handler\nexport function off(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, false, passive, capture);\n}\n\n// Bind once-only event handler\nexport function once(element, events = '', callback, passive = true, capture = false) {\n    function onceCallback(...args) {\n        off(element, events, onceCallback, passive, capture);\n        callback.apply(this, args);\n    }\n\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n        return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n        bubbles,\n        detail: Object.assign({}, detail, {\n            plyr: this,\n        }),\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n    if (this && this.eventListeners) {\n        this.eventListeners.forEach(item => {\n            const { element, type, callback, options } = item;\n            element.removeEventListener(type, callback, options);\n        });\n\n        this.eventListeners = [];\n    }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n    return new Promise(\n        resolve => (this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)),\n    ).then(() => {});\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport { toggleListener } from './events';\nimport is from './is';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets)\n        .reverse()\n        .forEach((element, index) => {\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n            // Cache the current parent and sibling.\n            const parent = element.parentNode;\n            const sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n        });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n        return;\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes)\n        .filter(([, value]) => !is.nullOrUndefined(value))\n        .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n        setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n        element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n    if (!is.element(element) || !is.element(target)) {\n        return;\n    }\n\n    target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n    if (!is.element(parent)) {\n        return;\n    }\n\n    parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n        Array.from(element).forEach(removeElement);\n        return;\n    }\n\n    if (!is.element(element) || !is.element(element.parentNode)) {\n        return;\n    }\n\n    element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let { length } = element.childNodes;\n\n    while (length > 0) {\n        element.removeChild(element.lastChild);\n        length -= 1;\n    }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\n        return null;\n    }\n\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n\n    return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) {\n        return {};\n    }\n\n    const attributes = {};\n    const existing = existingAttributes;\n\n    sel.split(',').forEach(s => {\n        // Remove whitespace\n        const selector = s.trim();\n        const className = selector.replace('.', '');\n        const stripped = selector.replace(/[[\\]]/g, '');\n\n        // Get the parts and value\n        const parts = stripped.split('=');\n        const key = parts[0];\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n        // Get the first character\n        const start = selector.charAt(0);\n\n        switch (start) {\n            case '.':\n                // Add to existing classname\n                if (is.object(existing) && is.string(existing.class)) {\n                    existing.class += ` ${className}`;\n                }\n\n                attributes.class = className;\n                break;\n\n            case '#':\n                // ID selector\n                attributes.id = selector.replace('#', '');\n                break;\n\n            case '[':\n                // Attribute selector\n                attributes[key] = value;\n\n                break;\n\n            default:\n                break;\n        }\n    });\n\n    return attributes;\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let hide = hidden;\n\n    if (!is.boolean(hide)) {\n        hide = !element.hasAttribute('hidden');\n    }\n\n    if (hide) {\n        element.setAttribute('hidden', '');\n    } else {\n        element.removeAttribute('hidden');\n    }\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n    if (is.element(element)) {\n        let method = 'toggle';\n        if (typeof force !== 'undefined') {\n            method = force ? 'add' : 'remove';\n        }\n\n        element.classList[method](className);\n        return element.classList.contains(className);\n    }\n\n    return null;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n    const prototype = { Element };\n\n    function match() {\n        return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n\n    const matches =\n        prototype.matches ||\n        prototype.webkitMatchesSelector ||\n        prototype.mozMatchesSelector ||\n        prototype.msMatchesSelector ||\n        match;\n\n    return matches.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n}\n\n// Get the focused element\nexport function getFocusElement() {\n    let focused = document.activeElement;\n\n    if (!focused || focused === document.body) {\n        focused = null;\n    } else {\n        focused = document.querySelector(':focus');\n    }\n\n    return focused;\n}\n\n// Trap focus inside container\nexport function trapFocus(element = null, toggle = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    const focusable = getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    const trap = event => {\n        // Bail if not tab key or not fullscreen\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\n            return;\n        }\n\n        // Get the current focused element\n        const focused = getFocusElement();\n\n        if (focused === last && !event.shiftKey) {\n            // Move focus to first element that can be tabbed if Shift isn't used\n            first.focus();\n            event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n            // Move focus to last element that can be tabbed if Shift is used\n            last.focus();\n            event.preventDefault();\n        }\n    };\n\n    toggleListener.call(this, this.elements.container, 'keydown', trap, toggle, false);\n}\n\n// Set focus and tab focus class\nexport function setFocus(element = null, tabFocus = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    // Set regular focus\n    element.focus();\n\n    // If we want to mimic keyboard focus via tab\n    if (tabFocus) {\n        toggleClass(element, this.config.classNames.tabFocus);\n    }\n}\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport { toggleHidden } from './elements';\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n\n    const events = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend',\n    };\n\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\n\n    return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element) {\n    setTimeout(() => {\n        toggleHidden(element, true);\n        element.offsetHeight; // eslint-disable-line\n        toggleHidden(element, false);\n    }, 0);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n};\n\nexport default browser;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n        const api = support[type] || provider !== 'html5';\n        const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari only currently\n    pip: (() => !browser.isIPhone && is.function(createElement('video').webkitSetPresentationMode))(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(inputType) {\n        const [mediaType] = inputType.split('/');\n        if (!this.isHTML5 || mediaType !== this.type) {\n            return false;\n        }\n\n        let type;\n        if (inputType && inputType.includes('codecs=')) {\n            // Use input directly\n            type = inputType;\n        } else if (inputType === 'audio/mpeg') {\n            // Skip codec\n            type = 'audio/mpeg;';\n        } else if (inputType in defaultCodecs) {\n            // Use codec\n            type = `${inputType}; codecs=\"${defaultCodecs[inputType]}\"`;\n        }\n\n        try {\n            return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n        } catch (err) {\n            return false;\n        }\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return [];\n        }\n\n        const sources = Array.from(this.media.querySelectorAll('source'));\n\n        // Filter out unsupported sources\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        // Get sizes from <source> elements\n        return html5.getSources\n            .call(this)\n            .map(source => Number(source.getAttribute('size')))\n            .filter(Boolean);\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n                const source = sources.find(source => source.getAttribute('src') === player.source);\n\n                // Return size, if match is found\n                return source && Number(source.getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                // Get first match for requested size\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\n\n                // No matching source found\n                if (!source) {\n                    return;\n                }\n\n                // Get current state\n                const { currentTime, paused, preload, readyState } = player.media;\n\n                // Set new source\n                player.media.src = source.getAttribute('src');\n\n                // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n                if (preload !== 'none' || readyState) {\n                    // Restore time\n                    player.once('loadedmetadata', () => {\n                        player.currentTime = currentTime;\n\n                        // Resume playing\n                        if (!paused) {\n                            player.play();\n                        }\n                    });\n\n                    // Load new source\n                    player.media.load();\n                }\n\n                // Trigger change event\n                triggerEvent.call(player, player.media, 'qualitychange', false, {\n                    quality: input,\n                });\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        // Remove child sources\n        removeElement(html5.getSources.call(this));\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n\n    const source = sources.shift();\n\n    if (!is.object(source)) {\n        return target;\n    }\n\n    Object.keys(source).forEach(key => {\n        if (is.object(source[key])) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, { [key]: {} });\n            }\n\n            extend(target[key], source[key]);\n        } else {\n            Object.assign(target, { [key]: source[key] });\n        }\n    });\n\n    return extend(target, ...sources);\n}\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n    if (is.empty(input)) {\n        return input;\n    }\n\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n        return 0;\n    }\n\n    return (current / max * 100).toFixed(2);\n}\n\n// Replace all occurances of a string in a string\nexport function replaceAll(input = '', find = '', replace = '') {\n    return input.replace(\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\n        replace.toString(),\n    );\n}\n\n// Convert to title case\nexport function toTitleCase(input = '') {\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n}\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\nimport { replaceAll } from './utils/strings';\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (is.empty(key) || is.empty(config)) {\n            return '';\n        }\n\n        let string = getDeep(config.i18n, key);\n\n        if (is.empty(string)) {\n            return '';\n        }\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([key, value]) => {\n            string = replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n    if (!is.array(array)) {\n        return array;\n    }\n\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n        return null;\n    }\n\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported || !this.enabled) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n        try {\n            const request = new XMLHttpRequest();\n\n            // Check for CORS support\n            if (!('withCredentials' in request)) {\n                return;\n            }\n\n            request.addEventListener('load', () => {\n                if (responseType === 'text') {\n                    try {\n                        resolve(JSON.parse(request.responseText));\n                    } catch (e) {\n                        resolve(request.responseText);\n                    }\n                } else {\n                    resolve(request.response);\n                }\n            });\n\n            request.addEventListener('error', () => {\n                throw new Error(request.status);\n            });\n\n            request.open('GET', url, true);\n\n            // Set the required response type\n            request.responseType = responseType;\n\n            request.send();\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from './../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id) {\n    if (!is.string(url)) {\n        return;\n    }\n\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n\n    const exists = () => document.getElementById(id) !== null;\n\n    const update = (container, data) => {\n        container.innerHTML = data;\n\n        // Check again incase of race condition\n        if (hasId && exists()) {\n            return;\n        }\n\n        // Inject the SVG to the body\n        document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n        const useStorage = Storage.supported;\n\n        // Create container\n        const container = document.createElement('div');\n        container.setAttribute('hidden', '');\n\n        if (hasId) {\n            container.setAttribute('id', id);\n        }\n\n        // Check in cache\n        if (useStorage) {\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\n            isCached = cached !== null;\n\n            if (isCached) {\n                const data = JSON.parse(cached);\n                update(container, data.content);\n            }\n        }\n\n        // Get the sprite\n        fetch(url)\n            .then(result => {\n                if (is.empty(result)) {\n                    return;\n                }\n\n                if (useStorage) {\n                    window.localStorage.setItem(\n                        `${prefix}-${id}`,\n                        JSON.stringify({\n                            content: result,\n                        }),\n                    );\n                }\n\n                update(container, result);\n            })\n            .catch(() => {});\n    }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\nexport const getSeconds = value => parseInt(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n        return formatTime(null, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n        hours = `${hours}:`;\n    } else {\n        hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// ==========================================================================\n\nimport captions from './captions';\nimport html5 from './html5';\nimport i18n from './i18n';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport { createElement, emptyElement, getAttributesFromSelector, getElement, getElements, hasClass, matches, removeElement, setAttributes, setFocus, toggleClass, toggleHidden } from './utils/elements';\nimport { off, on } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n    // Get icon URL\n    getIconUrl() {\n        const url = new URL(this.config.iconUrl, window.location);\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n        return {\n            url: this.config.iconUrl,\n            cors,\n        };\n    },\n\n    // Find the UI controls\n    findElements() {\n        try {\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: getElements.call(this, this.config.selectors.buttons.play),\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n                duration: getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\n                    `.${this.config.classNames.tooltip}`,\n                );\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        setAttributes(\n            icon,\n            extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        } else {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n        }\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(type, attr = {}) {\n        // Skip i18n for abbreviations and brand names\n        const universals = {\n            pip: 'PIP',\n            airplay: 'AirPlay',\n        };\n        const text = universals[type] || i18n.get(type, this.config);\n\n        const attributes = Object.assign({}, attr, {\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\n        });\n        return createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (is.empty(text)) {\n            return null;\n        }\n\n        const badge = createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const button = createElement('button');\n        const attributes = Object.assign({}, attr);\n        let type = toCamelCase(buttonType);\n\n        let toggle = false;\n        let label;\n        let icon;\n        let labelPressed;\n        let iconPressed;\n\n        if (!('type' in attributes)) {\n            attributes.type = 'button';\n        }\n\n        if ('class' in attributes) {\n            if (attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                toggle = true;\n                label = 'play';\n                labelPressed = 'pause';\n                icon = 'play';\n                iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                toggle = true;\n                label = 'mute';\n                labelPressed = 'unmute';\n                icon = 'volume';\n                iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                toggle = true;\n                label = 'enableCaptions';\n                labelPressed = 'disableCaptions';\n                icon = 'captions-off';\n                iconPressed = 'captions-on';\n                break;\n\n            case 'fullscreen':\n                toggle = true;\n                label = 'enterFullscreen';\n                labelPressed = 'exitFullscreen';\n                icon = 'enter-fullscreen';\n                iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                label = 'play';\n                icon = 'play';\n                break;\n\n            default:\n                label = type;\n                icon = buttonType;\n        }\n\n        // Setup toggle icon and labels\n        if (toggle) {\n            // Icon\n            button.appendChild(controls.createIcon.call(this, iconPressed, { class: 'icon--pressed' }));\n            button.appendChild(controls.createIcon.call(this, icon, { class: 'icon--not-pressed' }));\n\n            // Label/Tooltip\n            button.appendChild(controls.createLabel.call(this, labelPressed, { class: 'label--pressed' }));\n            button.appendChild(controls.createLabel.call(this, label, { class: 'label--not-pressed' }));\n        } else {\n            button.appendChild(controls.createIcon.call(this, icon));\n            button.appendChild(controls.createLabel.call(this, label));\n        }\n\n        // Merge attributes\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n\n        setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        // Toggle classname when pressed property is set\n        const className = this.config.classNames.controlPressed;\n        Object.defineProperty(button, 'pressed', {\n            enumerable: true,\n            get() {\n                return hasClass(button, className);\n            },\n            set(pressed = false) {\n                toggleClass(button, className, pressed);\n            },\n        });\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek input\n        const input = createElement(\n            'input',\n            extend(\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-label': i18n.get(type, this.config),\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return input;\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = createElement(\n            'progress',\n            extend(\n                getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(createElement('span', null, '0'));\n\n            const suffixKey = {\n                played: 'played',\n                buffer: 'buffered',\n            }[type];\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n            progress.innerText = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\n\n        const container = createElement(\n            'div',\n            extend(attributes, {\n                class: `${this.config.classNames.display.time} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-label': i18n.get(type, this.config),\n            }),\n            '00:00',\n        );\n\n        // Reference for updates\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Create a settings menu item\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n        const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n\n        const item = createElement(\n            'button',\n            extend(attributes, {\n                type: 'button',\n                role: 'menuitemradio',\n                class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-checked': checked,\n                value,\n            }),\n        );\n\n        const flex = createElement('span');\n\n        // We have to set as HTML incase of special characters\n        flex.innerHTML = title;\n\n        if (is.element(badge)) {\n            flex.appendChild(badge);\n        }\n\n        item.appendChild(flex);\n\n        Object.defineProperty(item, 'checked', {\n            enumerable: true,\n            get() {\n                return item.getAttribute('aria-checked') === 'true';\n            },\n            set(checked) {\n                // Ensure exclusivity\n                if (checked) {\n                    Array.from(item.parentNode.children)\n                        .filter(node => matches(node, '[role=\"menuitemradio\"]'))\n                        .forEach(node => node.setAttribute('aria-checked', 'false'));\n                }\n\n                item.setAttribute('aria-checked', checked ? 'true' : 'false');\n            },\n        });\n\n        this.listeners.bind(\n            item,\n            'click',\n            () => {\n                item.checked = true;\n\n                switch (type) {\n                    case 'language':\n                        this.currentTrack = Number(value);\n                        break;\n\n                    case 'quality':\n                        this.quality = value;\n                        break;\n\n                    case 'speed':\n                        this.speed = parseFloat(value);\n                        break;\n\n                    default:\n                        break;\n                }\n\n                controls.showMenuPanel.call(this, 'home');\n            },\n            type,\n        );\n\n        list.appendChild(item);\n    },\n\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n        // Bail if the value isn't a number\n        if (!is.number(time)) {\n            return time;\n        }\n\n        // Always display hours if duration is over an hour\n        const forceHours = getHours(this.duration) > 0;\n\n        return formatTime(time, forceHours, inverted);\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!is.element(target) || !is.number(time)) {\n            return;\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        target.innerText = controls.formatTime(time, inverted);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (is.element(this.elements.inputs.volume)) {\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (is.element(this.elements.buttons.mute)) {\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        const setProgress = (target, input) => {\n            const value = is.number(input) ? input : 0;\n            const progress = is.element(target) ? target : this.elements.display.buffer;\n\n            // Update value and label\n            if (is.element(progress)) {\n                progress.value = value;\n\n                // Update text label inside\n                const label = progress.getElementsByTagName('span')[0];\n                if (is.element(label)) {\n                    label.childNodes[0].nodeValue = value;\n                }\n            }\n        };\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                case 'seeked':\n                    value = getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n        // Get range from event if event passed\n        const range = is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\n        if (matches(range, this.config.selectors.inputs.seek)) {\n            range.setAttribute('aria-valuenow', this.currentTime);\n            const currentTime = controls.formatTime(this.currentTime);\n            const duration = controls.formatTime(this.duration);\n            const format = i18n.get('seekLabel', this.config);\n            range.setAttribute(\n                'aria-valuetext',\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n            );\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\n            const percent = range.value * 100;\n            range.setAttribute('aria-valuenow', percent);\n            range.setAttribute('aria-valuetext', `${percent}%`);\n        } else {\n            range.setAttribute('aria-valuenow', range.value);\n        }\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !is.element(this.elements.inputs.seek) ||\n            !is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.progress.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        controls.updateTimeDisplay.call(\n            this,\n            this.elements.display.currentTime,\n            invert ? this.duration - this.currentTime : this.currentTime,\n            invert,\n        );\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        controls.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n            return;\n        }\n\n        // Update ARIA values\n        if (is.element(this.elements.inputs.seek)) {\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n\n    // Hide/show a tab\n    toggleMenuButton(setting, toggle) {\n        toggleHidden(this.elements.settings.buttons[setting], !toggle);\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panels[setting];\n        let value = null;\n        let list = container;\n\n        if (setting === 'captions') {\n            value = this.currentTrack;\n        } else {\n            value = !is.empty(input) ? input : this[setting];\n\n            // Get default\n            if (is.empty(value)) {\n                value = this.config[setting].default;\n            }\n\n            // Unsupported value\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                return;\n            }\n\n            // Disabled value\n            if (!this.config[setting].options.includes(value)) {\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                return;\n            }\n        }\n\n        // Get the list if we need to\n        if (!is.element(list)) {\n            list = pane && pane.querySelector('[role=\"menu\"]');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`[value=\"${value}\"]`);\n\n        if (is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (is.number(value)) {\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n                    if (!label.length) {\n                        return `${value}p`;\n                    }\n\n                    return label;\n                }\n\n                return toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            default:\n                return null;\n        }\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                    badge: getBadge(quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.buttons.loop, false);\n        toggleHidden(this.elements.settings.panels.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleMenuButton.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.captions)) {\n            return;\n        }\n\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n        const tracks = captions.getTracks.call(this);\n        const toggle = Boolean(tracks.length);\n\n        // Toggle the pane and tab\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!toggle) {\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n        const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { buttons } = this.elements.settings;\n        const visible = !is.empty(buttons) && Object.values(buttons).some(button => !button.hidden);\n\n        toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Show/hide menu\n    toggleMenu(event) {\n        const { popup } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!is.element(popup) || !is.element(button)) {\n            return;\n        }\n\n        const show = is.boolean(event) ? event : is.element(popup) && popup.hasAttribute('hidden');\n\n        if (is.event(event)) {\n            const isMenuItem = is.element(popup) && popup.contains(event.target);\n            const isButton = event.target === this.elements.buttons.settings;\n\n            // If the click was inside the form or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && !isButton && show)) {\n                return;\n            }\n\n            // Prevent the toggle being caught by the doc listener\n            if (isButton) {\n                event.stopPropagation();\n            }\n        }\n\n        // Set form and button attributes\n        if (is.element(button)) {\n            button.setAttribute('aria-expanded', show);\n        }\n\n        // Show the actual popup\n        if (is.element(popup)) {\n            toggleHidden(popup, !show);\n            toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n            if (show) {\n                popup.removeAttribute('tabindex');\n\n                // Focus the first item if key interaction\n                if (event.type === 'keydown') {\n                    const pane = Object.values(this.elements.settings.panels).find(pane => !pane.hidden);\n                    const firstItem = pane.querySelector('[role^=\"menuitem\"]');\n                    setFocus.call(this, firstItem, true);\n                }\n            } else {\n                popup.setAttribute('tabindex', -1);\n            }\n        }\n    },\n\n    // Get the natural size of a menu panel\n    getMenuSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.removeAttribute('hidden');\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Show a panel in the menu\n    showMenuPanel(type = '') {\n        const target = document.getElementById(`plyr-settings-${this.id}-${type}`);\n\n        // Nothing to show, bail\n        if (!is.element(target)) {\n            return;\n        }\n\n        // Hide all other panels\n        const container = target.parentNode;\n        const current = Array.from(container.children).find(node => !node.hidden);\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getMenuSize.call(this, target);\n\n            // Restore auto height/width\n            const restore = event => {\n                // We're only bothered about height and width on the container\n                if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                off.call(this, container, transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            on.call(this, container, transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        toggleHidden(current, true);\n\n        // Set attributes on target\n        toggleHidden(target, false);\n\n        // Focus the first item\n        const firstItem = target.querySelector('[role^=\"menuitem\"]');\n        setFocus.call(this, firstItem, true);\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Do nothing if we want no controls\n        if (is.empty(this.config.controls)) {\n            return null;\n        }\n\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            progress.appendChild(\n                controls.createRange.call(this, 'seek', {\n                    id: `plyr-seek-${data.id}`,\n                }),\n            );\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = createElement(\n                    'span',\n                    {\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Toggle mute button\n        if (this.config.controls.includes('mute')) {\n            container.appendChild(controls.createButton.call(this, 'mute'));\n        }\n\n        // Volume range control\n        if (this.config.controls.includes('volume')) {\n            const volume = createElement('div', {\n                class: 'plyr__volume',\n            });\n\n            // Set the attributes\n            const attributes = {\n                max: 1,\n                step: 0.05,\n                value: this.config.volume,\n            };\n\n            // Create the volume range slider\n            volume.appendChild(\n                controls.createRange.call(\n                    this,\n                    'volume',\n                    extend(attributes, {\n                        id: `plyr-volume-${data.id}`,\n                    }),\n                ),\n            );\n\n            this.elements.volume = volume;\n\n            container.appendChild(volume);\n        }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            const control = createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            control.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    id: `plyr-settings-toggle-${data.id}`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const popup = createElement('div', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                hidden: '',\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n            });\n\n            const inner = createElement('div');\n\n            const home = createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n            });\n\n            // Create the menu\n            const menu = createElement('div', {\n                role: 'menu',\n            });\n\n            home.appendChild(menu);\n            inner.appendChild(home);\n\n            // Build the menu items\n            this.config.settings.forEach(type => {\n                const menuItem = createElement(\n                    'button',\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        role: 'menuitem',\n                        'aria-haspopup': true,\n                        hidden: '',\n                    }),\n                );\n\n                // Handle space or -> to open menu\n                on(menuItem, 'keydown', event => {\n                    // We only care about space and ->\n                    if (![32,39].includes(event.which)) {\n                        return;\n                    }\n\n                    // Prevent play / seek\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    // Show the respective menu\n                    controls.showMenuPanel.call(this, type);\n                }, false);\n\n                // Show menu on click\n                on(menuItem, 'click', () => {\n                    controls.showMenuPanel.call(this, type);\n                });\n\n                const flex = createElement('span', null, i18n.get(type, this.config));\n\n                const value = createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                flex.appendChild(value);\n                menuItem.appendChild(flex);\n                menu.appendChild(menuItem);\n\n                // Build the panes\n                const pane = createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    hidden: '',\n                });\n\n                // Back button\n                const backButton = createElement('button', {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                });\n\n                // Visible label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            'aria-hidden': true,\n                        },\n                        i18n.get(type, this.config),\n                    ),\n                );\n\n                // Screen reader label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            class: this.config.classNames.hidden,\n                        },\n                        i18n.get('menuBack', this.config),\n                    ),\n                );\n\n                // Handle space or -> to open menu\n                on(backButton, 'keydown', event => {\n                    // We only care about <-\n                    if (event.which !== 37) {\n                        return;\n                    }\n\n                    // Prevent seek\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    // Show the respective menu\n                    controls.showMenuPanel.call(this, 'home');\n                }, false);\n\n                // Go back\n                on(backButton, 'click', () => {\n                    controls.showMenuPanel.call(this, 'home');\n                });\n\n                // Add to pane\n                pane.appendChild(backButton);\n\n                // Menu\n                pane.appendChild(\n                    createElement('div', {\n                        role: 'menu',\n                    }),\n                );\n\n                inner.appendChild(pane);\n\n                this.elements.settings.buttons[type] = menuItem;\n                this.elements.settings.panels[type] = pane;\n            });\n\n            popup.appendChild(inner);\n            control.appendChild(popup);\n            container.appendChild(control);\n\n            this.elements.settings.popup = popup;\n            this.elements.settings.menu = control;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.cors) {\n                loadSprite(icon.url, 'sprite-plyr');\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // Set template properties\n        const props = {\n            id: this.id,\n            seektime: this.config.seekTime,\n            title: this.config.title,\n        };\n        let update = true;\n\n        if (is.string(this.config.controls) || is.element(this.config.controls)) {\n            // String or HTMLElement passed as the option\n            container = this.config.controls;\n        } else if (is.function(this.config.controls)) {\n            // A custom function to build controls\n            // The function can return a HTMLElement or String\n            container = this.config.controls.call(this, props);\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n            update = false;\n        }\n\n        // Replace props with their value\n        const replace = input => {\n            let result = input;\n\n            Object.entries(props).forEach(([key, value]) => {\n                result = replaceAll(result, `{${key}}`, value);\n            });\n\n            return result;\n        };\n\n        // Update markup\n        if (update) {\n            if (is.string(this.config.controls)) {\n                container = replace(container);\n            } else if (is.element(container)) {\n                container.innerHTML = replace(container.innerHTML);\n            }\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML\n        if (is.element(container)) {\n            target.appendChild(container);\n        } else if (container) {\n            target.insertAdjacentHTML('beforeend', container);\n        }\n\n        // Find the elements if need be\n        if (!is.element(this.elements.controls)) {\n            controls.findElements.call(this);\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            repaint(target);\n        }\n\n        // Setup tooltips\n        if (this.config.tooltips.controls) {\n            const { classNames, selectors } = this.config;\n            const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n            const labels = getElements.call(this, selector);\n\n            Array.from(labels).forEach(label => {\n                toggleClass(label, this.config.classNames.hidden, false);\n                toggleClass(label, this.config.classNames.tooltip, true);\n            });\n        }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {string} input - the URL to be parsed\n * @param {boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n    let url = input;\n\n    if (safe) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        url = parser.href;\n    }\n\n    try {\n        return new URL(url);\n    } catch (e) {\n        return null;\n    }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n    const params = new URLSearchParams();\n\n    if (is.object(input)) {\n        Object.entries(input).forEach(([key, value]) => {\n            params.set(key, value);\n        });\n    }\n\n    return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    insertAfter,\n    removeElement,\n    toggleClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (\n                is.array(this.config.controls) &&\n                this.config.controls.includes('settings') &&\n                this.config.settings.includes('captions')\n            ) {\n                controls.setCaptionsMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!is.element(this.elements.captions)) {\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n\n            insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const url = parseUrl(src);\n\n                if (\n                    url !== null &&\n                    url.hostname !== window.location.href.hostname &&\n                    ['http:', 'https:'].includes(url.protocol)\n                ) {\n                    fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Get and set initial data\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\n        // * languages: Array of user's browser languages.\n        // * language:  The language preferred by user settings or config\n        // * active:    The state preferred by user settings or config\n        // * toggled:   The real captions state\n\n        const languages = dedupe(\n            Array.from(navigator.languages || navigator.userLanguage).map(language => language.split('-')[0]),\n        );\n\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n        // Use first browser language when language is 'auto'\n        if (language === 'auto') {\n            [language] = languages;\n        }\n\n        let active = this.storage.get('captions');\n        if (!is.boolean(active)) {\n            ({ active } = this.config.captions);\n        }\n\n        Object.assign(this.captions, {\n            toggled: false,\n            active,\n            language,\n            languages,\n        });\n\n        // Watch changes to textTracks and update captions menu\n        if (this.isHTML5) {\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n        }\n\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\n        setTimeout(captions.update.bind(this), 0);\n    },\n\n    // Update available language options in settings based on tracks\n    update() {\n        const tracks = captions.getTracks.call(this, true);\n        // Get the wanted language\n        const { active, language, meta, currentTrackNode } = this.captions;\n        const languageExists = Boolean(tracks.find(track => track.language === language));\n\n        // Handle tracks (add event listener and \"pseudo\"-default)\n        if (this.isHTML5 && this.isVideo) {\n            tracks.filter(track => !meta.get(track)).forEach(track => {\n                this.debug.log('Track added', track);\n                // Attempt to store if the original dom element was \"default\"\n                meta.set(track, {\n                    default: track.mode === 'showing',\n                });\n\n                // Turn off native caption rendering to avoid double captions\n                track.mode = 'hidden';\n\n                // Add event listener for cue changes\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n            });\n        }\n\n        // Update language first time it matches, or if the previous matching track was removed\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n            captions.setLanguage.call(this, language);\n            captions.toggle.call(this, active && languageExists);\n        }\n\n        // Enable or disable captions based on track length\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n\n        // Update available languages in list\n        if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        const { toggled } = this.captions; // Current state\n        const activeClass = this.config.classNames.captions.active;\n\n        // Get the next state\n        // If the method is called without parameter, toggle based on current value\n        const active = is.nullOrUndefined(input) ? !toggled : input;\n\n        // Update state and trigger event\n        if (active !== toggled) {\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.active = active;\n                this.storage.set({ captions: active });\n            }\n\n            // Force language if the call isn't passive and there is no matching language to toggle to\n            if (!this.language && active && !passive) {\n                const tracks = captions.getTracks.call(this);\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n                // Override user preferences to avoid switching languages if a matching track is added\n                this.captions.language = track.language;\n\n                // Set caption, but don't store in localStorage as user preference\n                captions.set.call(this, tracks.indexOf(track));\n                return;\n            }\n\n            // Toggle button if it's enabled\n            if (this.elements.buttons.captions) {\n                this.elements.buttons.captions.pressed = active;\n            }\n\n            // Add class hook\n            toggleClass(this.elements.container, activeClass, active);\n\n            this.captions.toggled = active;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // Trigger event (not used internally)\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n        }\n    },\n\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n        const tracks = captions.getTracks.call(this);\n\n        // Disable captions if setting to -1\n        if (index === -1) {\n            captions.toggle.call(this, false, passive);\n            return;\n        }\n\n        if (!is.number(index)) {\n            this.debug.warn('Invalid caption argument', index);\n            return;\n        }\n\n        if (!(index in tracks)) {\n            this.debug.warn('Track not found', index);\n            return;\n        }\n\n        if (this.captions.currentTrack !== index) {\n            this.captions.currentTrack = index;\n            const track = tracks[index];\n            const { language } = track || {};\n\n            // Store reference to node for invalidation on remove\n            this.captions.currentTrackNode = track;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.language = language;\n                this.storage.set({ language });\n            }\n\n            // Handle Vimeo captions\n            if (this.isVimeo) {\n                this.embed.enableTextTrack(language);\n            }\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'languagechange');\n        }\n\n        // Show captions\n        captions.toggle.call(this, true, passive);\n\n        if (this.isHTML5 && this.isVideo) {\n            // If we change the active track while a cue is already displayed we need to update it\n            captions.updateCues.call(this);\n        }\n    },\n\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n        if (!is.string(input)) {\n            this.debug.warn('Invalid language argument', input);\n            return;\n        }\n        // Normalize\n        const language = input.toLowerCase();\n        this.captions.language = language;\n\n        // Set currentTrack\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [language]);\n        captions.set.call(this, tracks.indexOf(track), passive);\n    },\n\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n        // Handle media or textTracks missing or null\n        const tracks = Array.from((this.media || {}).textTracks || []);\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n        return tracks\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n        const tracks = captions.getTracks.call(this);\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n        let track;\n        languages.every(language => {\n            track = sorted.find(track => track.language === language);\n            return !track; // Break iteration if there is a match\n        });\n        // If no match is found but is required, get first\n        return track || (force ? sorted[0] : undefined);\n    },\n\n    // Get the current track\n    getCurrentTrack() {\n        return captions.getTracks.call(this)[this.currentTrack];\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (is.track(currentTrack)) {\n            if (!is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (!is.element(this.elements.captions)) {\n            this.debug.warn('No captions element to render to');\n            return;\n        }\n\n        // Only accept array or empty input\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n            this.debug.warn('updateCues: Invalid input', input);\n            return;\n        }\n\n        let cues = input;\n\n        // Get cues from track\n        if (!cues) {\n            const track = captions.getCurrentTrack.call(this);\n            cues = Array.from((track || {}).activeCues || [])\n                .map(cue => cue.getCueAsHTML())\n                .map(getHTML);\n        }\n\n        // Set new caption text\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\n        const changed = content !== this.elements.captions.innerHTML;\n\n        if (changed) {\n            // Empty the container and create a new child element\n            emptyElement(this.elements.captions);\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n            caption.innerHTML = content;\n            this.elements.captions.appendChild(caption);\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'cuechange');\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n    playsinline: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Reset to start when playback ended\n    resetOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.3.12/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [\n            4320,\n            2880,\n            2160,\n            1440,\n            1080,\n            720,\n            576,\n            480,\n            360,\n            240,\n            'default', // YouTube's \"auto\"\n        ],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: 'auto',\n        // Listen to new tracks added after Plyr is initialized.\n        // This is needed for streaming captions, but may result in unselectable options\n        update: false,\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'settings',\n        'pip',\n        'airplay',\n        'fullscreen',\n    ],\n    settings: ['captions', 'quality', 'speed'],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime}s',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime}s',\n        seek: 'Seek',\n        seekLabel: '{currentTime} of {duration}',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        settings: 'Settings',\n        menuBack: 'Go back to previous menu',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n        qualityBadge: {\n            2160: '4K',\n            1440: 'HD',\n            1080: 'HD',\n            720: 'HD',\n            576: 'SD',\n            480: 'SD',\n        },\n    },\n\n    // URLs\n    urls: {\n        vimeo: {\n            sdk: 'https://player.vimeo.com/api/player.js',\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\n        },\n        youtube: {\n            sdk: 'https://www.youtube.com/iframe_api',\n            api:\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\n        },\n        googleIMA: {\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'enterfullscreen',\n        'exitfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n        'qualitychange',\n        'qualityrequested',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress__buffer',\n            loop: '.plyr__progress__loop', // Used later\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        caption: '.plyr__caption',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        video: 'plyr__video-wrapper',\n        embed: 'plyr__video-embed',\n        embedContainer: 'plyr__video-embed__container',\n        poster: 'plyr__poster',\n        posterEnabled: 'plyr__poster-enabled',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        controlPressed: 'plyr__control--pressed',\n        playing: 'plyr--playing',\n        paused: 'plyr--paused',\n        stopped: 'plyr--stopped',\n        loading: 'plyr--loading',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        display: {\n            time: 'plyr__time',\n        },\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {string} url\n */\nexport function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n        return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n        return providers.vimeo;\n    }\n\n    return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// ==========================================================================\n\nimport browser from './utils/browser';\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nfunction onChange() {\n    if (!this.enabled) {\n        return;\n    }\n\n    // Update toggle button\n    const button = this.player.elements.buttons.fullscreen;\n    if (is.element(button)) {\n        button.pressed = this.active;\n    }\n\n    // Trigger an event\n    triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n    // Toggle button and fire events\n    onChange.call(this);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.property = Fullscreen.property;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        on.call(\n            this.player,\n            document,\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n            () => {\n                // TODO: Filter for target??\n                onChange.call(this);\n            },\n        );\n\n        // Fullscreen toggle on double click\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(\n            document.fullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.mozFullScreenEnabled ||\n            document.msFullscreenEnabled\n        );\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = ['webkit', 'moz', 'ms'];\n\n        prefixes.some(pre => {\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get property() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n        return element === this.target;\n    }\n\n    // Get target element\n    get target() {\n        return browser.isIos && this.player.config.fullscreen.iosNative\n            ? this.player.media\n            : this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            if (this.player.playing) {\n                this.target.webkitEnterFullscreen();\n            }\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.property}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.property}`]();\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n\n        const handler = () => {\n            delete image.onload;\n            delete image.onerror;\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\n        };\n\n        Object.assign(image, { onload: handler, onerror: handler, src });\n    });\n}\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport loadImage from './utils/loadImage';\n\nconst ui = {\n    addStyleHook() {\n        toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Setup captions for HTML5\n        if (this.isHTML5) {\n            captions.setup.call(this);\n        }\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        controls.updateVolume.call(this);\n\n        // Reset time display\n        controls.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Check for picture-in-picture support\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.pip.supported,\n            support.pip && this.isHTML5 && this.isVideo,\n        );\n\n        // Check for airplay support\n        toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n        // Add iOS class\n        toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n        // Add touch class\n        toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            triggerEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n\n        // Assure the poster image is set, if the property was added before the element was created\n        if (this.poster) {\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\n        }\n\n        // Manually set the duration if user has overridden it.\n        // The event listeners for it doesn't get called if preload is disabled (#701)\n        if (this.config.duration) {\n            controls.durationUpdate.call(this);\n        }\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n        }\n\n        // If there's a play button, set label\n        Array.from(this.elements.buttons.play || []).forEach(button => {\n            button.setAttribute('aria-label', label);\n        });\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = getElement.call(this, 'iframe');\n\n            if (!is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !is.empty(this.config.title) ? this.config.title : 'video';\n            const format = i18n.get('frameTitle', this.config);\n\n            iframe.setAttribute('title', format.replace('{title}', title));\n        }\n    },\n\n    // Toggle poster\n    togglePoster(enable) {\n        toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n        // Don't override if call is passive\n        if (passive && this.poster) {\n            return Promise.reject(new Error('Poster already set'));\n        }\n\n        // Set property synchronously to respect the call order\n        this.media.setAttribute('poster', poster);\n\n        // Wait until ui is ready\n        return (\n            ready\n                .call(this)\n                // Load image\n                .then(() => loadImage(poster))\n                .catch(err => {\n                    // Hide poster on error unless it's been set by another call\n                    if (poster === this.poster) {\n                        ui.togglePoster.call(this, false);\n                    }\n                    // Rethrow\n                    throw err;\n                })\n                .then(() => {\n                    // Prevent race conditions\n                    if (poster !== this.poster) {\n                        throw new Error('setPoster cancelled by later call to setPoster');\n                    }\n                })\n                .then(() => {\n                    Object.assign(this.elements.poster.style, {\n                        backgroundImage: `url('${poster}')`,\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n                        backgroundSize: '',\n                    });\n                    ui.togglePoster.call(this, true);\n                    return poster;\n                })\n        );\n    },\n\n    // Check playing state\n    checkPlaying(event) {\n        // Class hooks\n        toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n        toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n        // Set state\n        Array.from(this.elements.buttons.play || []).forEach(target => {\n            target.pressed = this.playing;\n        });\n\n        // Only update controls on non timeupdate events\n        if (is.event(event) && event.type === 'timeupdate') {\n            return;\n        }\n\n        // Toggle controls\n        ui.toggleControls.call(this);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = ['stalled', 'waiting'].includes(event.type);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Update progress bar loading class state\n            toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Update controls visibility\n            ui.toggleControls.call(this);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n        const { controls } = this.elements;\n\n        if (controls && this.config.hideControls) {\n            // Show controls if force, loading, paused, or button interaction, otherwise hide\n            this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover));\n        }\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport browser from './utils/browser';\nimport { getElement, getElements, getFocusElement, matches, toggleClass, toggleHidden } from './utils/elements';\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            this.player.currentTime = this.player.duration / 10 * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Which keycodes should we prevent default\n            const preventDefault = [32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79];\n\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = getFocusElement();\n            if (\n                is.element(focused) &&\n                (focused !== this.player.elements.inputs.seek &&\n                    matches(focused, this.player.config.selectors.editable))\n            ) {\n                return;\n            }\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        this.player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    this.player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    this.player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        this.player.muted = !this.player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    this.player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    this.player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    this.player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        this.player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    this.player.loop = !this.player.loop;\n                    break;\n\n                /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (!this.player.fullscreen.enabled && this.player.fullscreen.active && code === 27) {\n                this.player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        this.player.touch = true;\n\n        // Add touch class\n        toggleClass(this.player.elements.container, this.player.config.classNames.isTouch, true);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        // Keyboard shortcuts\n        if (this.player.config.keyboard.global) {\n            toggleListener.call(this.player, window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(this.player, document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        once.call(this.player, document.body, 'touchstart', this.firstTouch);\n    }\n\n    // Container listeners\n    container() {\n        // Keyboard shortcuts\n        if (!this.player.config.keyboard.global && this.player.config.keyboard.focused) {\n            on.call(this.player, this.player.elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Detect tab focus\n        // Remove class on blur/focusout\n        on.call(this.player, this.player.elements.container, 'focusout', event => {\n            toggleClass(event.target, this.player.config.classNames.tabFocus, false);\n        });\n        // Add classname to tabbed elements\n        on.call(this.player, this.player.elements.container, 'keydown', event => {\n            if (event.keyCode !== 9) {\n                return;\n            }\n\n            // Delay the adding of classname until the focus has changed\n            // This event fires before the focusin event\n            setTimeout(() => {\n                toggleClass(getFocusElement(), this.player.config.classNames.tabFocus, true);\n            }, 0);\n        });\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(\n            this.player,\n            this.player.elements.container,\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n            event => {\n                const { controls } = this.player.elements;\n\n                // Remove button states for fullscreen\n                if (event.type === 'enterfullscreen') {\n                    controls.pressed = false;\n                    controls.hover = false;\n                }\n\n                // Show, then hide after a timeout unless another control event occurs\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n\n                let delay = 0;\n\n                if (show) {\n                    ui.toggleControls.call(this.player, true);\n                    // Use longer timeout for touch devices\n                    delay = this.player.touch ? 3000 : 2000;\n                }\n\n                // Clear timer\n                clearTimeout(this.player.timers.controls);\n\n                // Set new timer to prevent flicker when seeking\n                this.player.timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\n            },\n        );\n    }\n\n    // Listen for media events\n    media() {\n        // Time change on media\n        on.call(this.player, this.player.media, 'timeupdate seeking seeked', event =>\n            controls.timeUpdate.call(this.player, event),\n        );\n\n        // Display duration\n        on.call(this.player, this.player.media, 'durationchange loadeddata loadedmetadata', event =>\n            controls.durationUpdate.call(this.player, event),\n        );\n\n        // Check for audio tracks on load\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n        on.call(this.player, this.player.media, 'canplay', () => {\n            toggleHidden(this.player.elements.volume, !this.player.hasAudio);\n            toggleHidden(this.player.elements.buttons.mute, !this.player.hasAudio);\n        });\n\n        // Handle the media finishing\n        on.call(this.player, this.player.media, 'ended', () => {\n            // Show poster on end\n            if (this.player.isHTML5 && this.player.isVideo && this.player.config.resetOnEnd) {\n                // Restart\n                this.player.restart();\n            }\n        });\n\n        // Check for buffer progress\n        on.call(this.player, this.player.media, 'progress playing seeking seeked', event =>\n            controls.updateProgress.call(this.player, event),\n        );\n\n        // Handle volume changes\n        on.call(this.player, this.player.media, 'volumechange', event =>\n            controls.updateVolume.call(this.player, event),\n        );\n\n        // Handle play/pause\n        on.call(this.player, this.player.media, 'playing play pause ended emptied timeupdate', event =>\n            ui.checkPlaying.call(this.player, event),\n        );\n\n        // Loading state\n        on.call(this.player, this.player.media, 'waiting canplay seeked playing', event =>\n            ui.checkLoading.call(this.player, event),\n        );\n\n        // If autoplay, then load advertisement if required\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n        on.call(this.player, this.player.media, 'playing', () => {\n            if (!this.player.ads) {\n                return;\n            }\n\n            // If ads are enabled, wait for them first\n            if (this.player.ads.enabled && !this.player.ads.initialized) {\n                // Wait for manager response\n                this.player.ads.managerPromise.then(() => this.player.ads.play()).catch(() => this.player.play());\n            }\n        });\n\n        // Click video\n        if (this.player.supported.ui && this.player.config.clickToPlay && !this.player.isAudio) {\n            // Re-fetch the wrapper\n            const wrapper = getElement.call(this.player, `.${this.player.config.classNames.video}`);\n\n            // Bail if there's no wrapper (this should never happen)\n            if (!is.element(wrapper)) {\n                return;\n            }\n\n            // On click play, pause ore restart\n            on.call(this.player, wrapper, 'click', () => {\n                // Touch devices will just show controls (if we're hiding controls)\n                if (this.player.config.hideControls && this.player.touch && !this.player.paused) {\n                    return;\n                }\n\n                if (this.player.paused) {\n                    this.player.play();\n                } else if (this.player.ended) {\n                    this.player.restart();\n                    this.player.play();\n                } else {\n                    this.player.pause();\n                }\n            });\n        }\n\n        // Disable right click\n        if (this.player.supported.ui && this.player.config.disableContextMenu) {\n            on.call(\n                this.player,\n                this.player.elements.wrapper,\n                'contextmenu',\n                event => {\n                    event.preventDefault();\n                },\n                false,\n            );\n        }\n\n        // Volume change\n        on.call(this.player, this.player.media, 'volumechange', () => {\n            // Save to storage\n            this.player.storage.set({ volume: this.player.volume, muted: this.player.muted });\n        });\n\n        // Speed change\n        on.call(this.player, this.player.media, 'ratechange', () => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'speed');\n\n            // Save to storage\n            this.player.storage.set({ speed: this.player.speed });\n        });\n\n        // Quality request\n        on.call(this.player, this.player.media, 'qualityrequested', event => {\n            // Save to storage\n            this.player.storage.set({ quality: event.detail.quality });\n        });\n\n        // Quality change\n        on.call(this.player, this.player.media, 'qualitychange', event => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'quality', null, event.detail.quality);\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        const proxyEvents = this.player.config.events.concat(['keyup', 'keydown']).join(' ');\n        on.call(this.player, this.player.media, proxyEvents, event => {\n            let { detail = {} } = event;\n\n            // Get error details from media\n            if (event.type === 'error') {\n                detail = this.player.media.error;\n            }\n\n            triggerEvent.call(this.player, this.player.elements.container, event.type, true, detail);\n        });\n    }\n\n    // Run default and custom handlers\n    proxy(event, defaultHandler, customHandlerKey) {\n        const customHandler = this.player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n        let returned = true;\n\n        // Execute custom handler\n        if (hasCustomHandler) {\n            returned = customHandler.call(this.player, event);\n        }\n\n        // Only call default handler if not prevented in custom handler\n        if (returned && is.function(defaultHandler)) {\n            defaultHandler.call(this.player, event);\n        }\n    }\n\n    // Trigger custom and default handlers\n    bind(element, type, defaultHandler, customHandlerKey, passive = true) {\n        const customHandler = this.player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n\n        on.call(\n            this.player,\n            element,\n            type,\n            event => this.proxy(event, defaultHandler, customHandlerKey),\n            passive && !hasCustomHandler,\n        );\n    }\n\n    // Listen for control events\n    controls() {\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Play/pause toggle\n        if (this.player.elements.buttons.play) {\n            Array.from(this.player.elements.buttons.play).forEach(button => {\n                this.bind(button, 'click', this.player.togglePlay, 'play');\n            });\n        }\n\n        // Pause\n        this.bind(this.player.elements.buttons.restart, 'click', this.player.restart, 'restart');\n\n        // Rewind\n        this.bind(this.player.elements.buttons.rewind, 'click', this.player.rewind, 'rewind');\n\n        // Rewind\n        this.bind(this.player.elements.buttons.fastForward, 'click', this.player.forward, 'fastForward');\n\n        // Mute toggle\n        this.bind(\n            this.player.elements.buttons.mute,\n            'click',\n            () => {\n                this.player.muted = !this.player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        this.bind(this.player.elements.buttons.captions, 'click', () => this.player.toggleCaptions());\n\n        // Fullscreen toggle\n        this.bind(\n            this.player.elements.buttons.fullscreen,\n            'click',\n            () => {\n                this.player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        this.bind(\n            this.player.elements.buttons.pip,\n            'click',\n            () => {\n                this.player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        this.bind(this.player.elements.buttons.airplay, 'click', this.player.airplay, 'airplay');\n\n        // Settings menu - click toggle\n        this.bind(this.player.elements.buttons.settings, 'click', event => {\n            controls.toggleMenu.call(this.player, event);\n        });\n\n        // Settings menu - keyboard toggle\n        this.bind(\n            this.player.elements.buttons.settings,\n            'keydown',\n            event => {\n                // We only care about space\n                if (event.which !== 32) {\n                    return;\n                }\n\n                // Prevent scroll\n                event.preventDefault();\n\n                // Prevent playing video\n                event.stopPropagation();\n\n                // Toggle menu\n                controls.toggleMenu.call(this.player, event);\n            },\n            null,\n            false,\n        );\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        this.bind(this.player.elements.inputs.seek, 'mousedown mousemove', event => {\n            const clientRect = this.player.elements.progress.getBoundingClientRect();\n            const percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n            event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        this.bind(this.player.elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\n            const seek = event.currentTarget;\n\n            const code = event.keyCode ? event.keyCode : event.which;\n            const eventType = event.type;\n\n            if ((eventType === 'keydown' || eventType === 'keyup') && (code !== 39 && code !== 37)) {\n                return;\n            }\n            // Was playing before?\n            const play = seek.hasAttribute('play-on-seeked');\n\n            // Done seeking\n            const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n\n            // If we're done seeking and it was playing, resume playback\n            if (play && done) {\n                seek.removeAttribute('play-on-seeked');\n                this.player.play();\n            } else if (!done && this.player.playing) {\n                seek.setAttribute('play-on-seeked', '');\n                this.player.pause();\n            }\n        });\n\n        // Seek\n        this.bind(\n            this.player.elements.inputs.seek,\n            inputEvent,\n            event => {\n                const seek = event.currentTarget;\n\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n                let seekTo = seek.getAttribute('seek-value');\n\n                if (is.empty(seekTo)) {\n                    seekTo = seek.value;\n                }\n\n                seek.removeAttribute('seek-value');\n\n                this.player.currentTime = seekTo / seek.max * this.player.duration;\n            },\n            'seek',\n        );\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (this.player.config.toggleInvert && !is.element(this.player.elements.display.duration)) {\n            this.bind(this.player.elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (this.player.currentTime === 0) {\n                    return;\n                }\n\n                this.player.config.invertTime = !this.player.config.invertTime;\n\n                controls.timeUpdate.call(this.player);\n            });\n        }\n\n        // Volume\n        this.bind(\n            this.player.elements.inputs.volume,\n            inputEvent,\n            event => {\n                this.player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            Array.from(getElements.call(this.player, 'input[type=\"range\"]')).forEach(element => {\n                this.bind(element, 'input', event => controls.updateRangeFill.call(this.player, event.target));\n            });\n        }\n\n        // Seek tooltip\n        this.bind(this.player.elements.progress, 'mouseenter mouseleave mousemove', event =>\n            controls.updateSeekTooltip.call(this.player, event),\n        );\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(this.player.elements.controls, 'mouseenter mouseleave', event => {\n            this.player.elements.controls.hover = !this.player.touch && event.type === 'mouseenter';\n        });\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(this.player.elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n            this.player.elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n        });\n\n        // Focus in/out on controls\n        this.bind(this.player.elements.controls, 'focusin focusout', event => {\n            const { config, elements, timers } = this.player;\n\n            // Skip transition to prevent focus from scrolling the parent element\n            toggleClass(elements.controls, config.classNames.noTransition, event.type === 'focusin');\n\n            // Toggle\n            ui.toggleControls.call(this.player, event.type === 'focusin');\n\n            // If focusin, hide again after delay\n            if (event.type === 'focusin') {\n                // Restore transition\n                setTimeout(() => {\n                    toggleClass(elements.controls, config.classNames.noTransition, false);\n                }, 0);\n\n                // Delay a little more for keyboard users\n                const delay = this.touch ? 3000 : 4000;\n\n                // Clear timer\n                clearTimeout(timers.controls);\n                // Hide\n                timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\n            }\n        });\n\n        // Mouse wheel for volume\n        this.bind(\n            this.player.elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n\n                // Get delta from event. Invert if `inverted` is true\n                const [x, y] = [event.deltaX, -event.deltaY].map(value => (inverted ? -value : value));\n\n                // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n                const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n                // Change the volume by 2%\n                this.player.increaseVolume(direction / 50);\n\n                // Don't break page scrolling at max and min\n                const { volume } = this.player.media;\n                if ((direction === 1 && volume < 1) || (direction === -1 && volume > 0)) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n}\n\nexport default Listeners;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText`\n        result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n    return new Promise((resolve, reject) => {\n        loadjs(url, {\n            success: resolve,\n            error: reject,\n        });\n    });\n}\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from './../captions';\nimport controls from './../controls';\nimport ui from './../ui';\nimport { createElement, replaceElement, toggleClass } from './../utils/elements';\nimport { triggerEvent } from './../utils/events';\nimport fetch from './../utils/fetch';\nimport is from './../utils/is';\nimport loadScript from './../utils/loadScript';\nimport { format, stripHTML } from './../utils/strings';\nimport { buildUrlParams } from './../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    if (is.number(Number(url))) {\n        return url;\n    }\n\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Get aspect ratio for dimensions\nfunction getAspectRatio(width, height) {\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n    const ratio = getRatio(width, height);\n    return `${width / ratio}:${height / ratio}`;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!is.object(window.Vimeo)) {\n            loadScript(this.config.urls.vimeo.sdk)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':');\n        const padding = 100 / x * y;\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            // muted: player.muted,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n        };\n        const params = buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(player.config.attributes.embed.id);\n        }\n\n        const id = parseId(source);\n\n        // Build an iframe\n        const iframe = createElement('iframe');\n        const src = format(player.config.urls.vimeo.iframe, id, params);\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Inject the package\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n\n        // Get poster image\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\n            if (is.empty(response)) {\n                return;\n            }\n\n            // Get the URL for thumbnail\n            const url = new URL(response[0].thumbnail_large);\n\n            // Get original image\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\n\n            // Set and show poster\n            ui.setPoster.call(player, url.href).catch(() => {});\n        });\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe, {\n            autopause: player.config.autopause,\n            muted: player.muted,\n        });\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            return player.embed.play();\n        };\n\n        player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            return player.embed.pause();\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Vimeo will automatically play on seek if the video hasn't been played before\n\n                // Get current paused state and volume etc\n                const { embed, media, paused, volume } = player;\n                const restorePause = paused && !embed.hasPlayed;\n\n                // Set seeking state and trigger event\n                media.seeking = true;\n                triggerEvent.call(player, media, 'seeking');\n\n                // If paused, mute until seek is complete\n                Promise.resolve(restorePause && embed.setVolume(0))\n                    // Seek\n                    .then(() => embed.setCurrentTime(time))\n                    // Restore paused\n                    .then(() => restorePause && embed.pause())\n                    // Restore volume\n                    .then(() => restorePause && embed.setVolume(volume))\n                    .catch(() => {\n                        // Do nothing\n                    });\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        triggerEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n            const ratio = getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', ({ cues = [] }) => {\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\n            captions.updateCues.call(player, strippedCues);\n        });\n\n        player.embed.on('loaded', () => {\n            // Assure state and events are updated on autoplay\n            player.embed.getPaused().then(paused => {\n                assurePlaybackState.call(player, !paused);\n                if (!paused) {\n                    triggerEvent.call(player, player.media, 'playing');\n                }\n            });\n\n            if (is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            assurePlaybackState.call(player, true);\n            triggerEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            assurePlaybackState.call(player, false);\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            triggerEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    triggerEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            triggerEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            triggerEvent.call(player, player.media, 'error');\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport controls from './../controls';\nimport ui from './../ui';\nimport { dedupe } from './../utils/arrays';\nimport { createElement, replaceElement, toggleClass } from './../utils/elements';\nimport { triggerEvent } from './../utils/events';\nimport fetch from './../utils/fetch';\nimport is from './../utils/is';\nimport loadImage from './../utils/loadImage';\nimport loadScript from './../utils/loadScript';\nimport { format, generateId } from './../utils/strings';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Standardise YouTube quality unit\nfunction mapQualityUnit(input) {\n    const qualities = {\n        hd2160: 2160,\n        hd1440: 1440,\n        hd1080: 1080,\n        hd720: 720,\n        large: 480,\n        medium: 360,\n        small: 240,\n        tiny: 144,\n    };\n\n    const entry = Object.entries(qualities).find(entry => entry.includes(input));\n\n    if (entry) {\n        // Get the match corresponding to the input\n        return entry.find(value => value !== input);\n    }\n\n    return 'default';\n}\n\nfunction mapQualityUnits(levels) {\n    if (is.empty(levels)) {\n        return levels;\n    }\n\n    return dedupe(levels.map(level => mapQualityUnit(level)));\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (is.string(key) && !is.empty(key)) {\n            const url = format(this.config.urls.youtube.api, videoId, key);\n\n            fetch(url)\n                .then(result => {\n                    if (is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = parseId(source);\n        const id = generateId(player.provider);\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Replace media element\n        const container = createElement('div', { id, poster });\n        player.media = replaceElement(container, player.media);\n\n        // Id to poster wrapper\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n            .then(image => ui.setPoster.call(player, image.src))\n            .then(posterSrc => {\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n                if (!posterSrc.includes('maxres')) {\n                    player.elements.poster.style.backgroundSize = 'cover';\n                }\n            })\n            .catch(() => {});\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // YouTube may fire onError twice, so only handle it once\n                    if (!player.media.error) {\n                        const code = event.data;\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                        const message =\n                            {\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n                            }[code] || 'An unknown error occured';\n\n                        player.media.error = { code, message };\n\n                        triggerEvent.call(player, player.media, 'error');\n                    }\n                },\n                onPlaybackQualityChange() {\n                    triggerEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: player.media.quality,\n                    });\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    triggerEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        assurePlaybackState.call(player, true);\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        assurePlaybackState.call(player, false);\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                            if (player.paused && !player.embed.hasPlayed) {\n                                player.embed.mute();\n                            }\n\n                            // Set seeking state and trigger event\n                            player.media.seeking = true;\n                            triggerEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Quality\n                    Object.defineProperty(player.media, 'quality', {\n                        get() {\n                            return mapQualityUnit(instance.getPlaybackQuality());\n                        },\n                        set(input) {\n                            instance.setPlaybackQuality(mapQualityUnit(input));\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                    triggerEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            triggerEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            triggerEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n                    if (seeked) {\n                        // Unset seeking and fire seeked event\n                        player.media.seeking = false;\n                        triggerEvent.call(player, player.media, 'seeked');\n                    }\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            triggerEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            triggerEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            assurePlaybackState.call(player, false);\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                triggerEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (player.media.paused && !player.embed.hasPlayed) {\n                                player.media.pause();\n                            } else {\n                                assurePlaybackState.call(player, true);\n\n                                triggerEvent.call(player, player.media, 'playing');\n\n                                // Poll to get playback progress\n                                player.timers.playing = setInterval(() => {\n                                    triggerEvent.call(player, player.media, 'timeupdate');\n                                }, 50);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (player.media.duration !== instance.getDuration()) {\n                                    player.media.duration = instance.getDuration();\n                                    triggerEvent.call(player, player.media, 'durationchange');\n                                }\n\n                                // Get quality\n                                controls.setQualityMenu.call(\n                                    player,\n                                    mapQualityUnits(instance.getAvailableQualityLevels()),\n                                );\n                            }\n\n                            break;\n\n                        case 2:\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (!player.muted) {\n                                player.embed.unMute();\n                            }\n                            assurePlaybackState.call(player, false);\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            wrap(this.media, this.elements.wrapper);\n\n            // Faux poster container\n            this.elements.poster = createElement('div', {\n                class: this.config.classNames.poster,\n            });\n\n            this.elements.wrapper.appendChild(this.elements.poster);\n        }\n\n        if (this.isHTML5) {\n            html5.extend.call(this);\n        } else if (this.isYouTube) {\n            youtube.setup.call(this);\n        } else if (this.isVimeo) {\n            vimeo.setup.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport i18n from '../i18n';\nimport { createElement } from './../utils/elements';\nimport { triggerEvent } from './../utils/events';\nimport is from './../utils/is';\nimport loadScript from './../utils/loadScript';\nimport { formatTime } from './../utils/time';\nimport { buildUrlParams } from './../utils/urls';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    get enabled() {\n        return (\n            this.player.isHTML5 && this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId)\n        );\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\n                loadScript(this.player.config.urls.googleIMA.sdk)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n                event => this.onAdsManagerLoaded(event),\n                false,\n            );\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            // Mute based on current state\n            request.setAdWillPlayMuted(!this.player.muted);\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Get skippable state\n        // TODO: Skip button\n        // this.player.debug.warn(this.manager.getAdSkippableState());\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            triggerEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport { providers } from './config/types';\nimport html5 from './html5';\nimport media from './media';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement } from './utils/elements';\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (is.string(attributes)) {\n            insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (is.array(attributes)) {\n            attributes.forEach(attribute => {\n                insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!getDeep(input, 'sources.length')) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                removeElement(this.media);\n                this.media = null;\n\n                // Reset class name\n                if (is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // Set the type and provider\n                const { sources, type } = input;\n                const [{ provider = providers.html5, src }] = sources;\n                const tagName = provider === 'html5' ? type : 'div';\n                const attributes = provider === 'html5' ? {} : { src };\n\n                Object.assign(this, {\n                    provider,\n                    type,\n                    // Check for support\n                    supported: support.check(type, provider, this.config.playsinline),\n                    // Create new element\n                    media: createElement(tagName, attributes),\n                });\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if (!is.empty(input.poster)) {\n                        this.poster = input.poster;\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', sources);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if ('tracks' in input) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                    }\n\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.3.15\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport Listeners from './listeners';\nimport media from './media';\nimport Ads from './plugins/ads';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { closest } from './utils/arrays';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { cloneDeep, extend } from './utils/objects';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = extend(\n            {},\n            defaults,\n            Plyr.defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            captions: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                popup: null,\n                menu: null,\n                panels: {},\n                buttons: {},\n            },\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: -1,\n            meta: new WeakMap(),\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        const clone = this.media.cloneNode(true);\n        clone.autoplay = false;\n        this.elements.original = clone;\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (is.element(iframe)) {\n                    // Detect provider\n                    url = parseUrl(iframe.getAttribute('src'));\n                    this.provider = getProviderByUrl(url.toString());\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    if (url.searchParams.length) {\n                        const truthy = ['1', 'true'];\n\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(url.searchParams.get('loop'))) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        this.eventListeners = [];\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!is.element(this.elements.container)) {\n            this.elements.container = createElement('div');\n            wrap(this.media, this.elements.container);\n        }\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            on.call(this, this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        this.ads = new Ads(this);\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!is.function(this.media.play)) {\n            return null;\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n        return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.pause();\n            this.restart();\n        } else if (is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        // Bail if media duration isn't available yet\n        if (!this.duration) {\n            return;\n        }\n\n        // Validate input\n        const inputIsValid = is.number(input) && input > 0;\n\n        // Set\n        this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // Media duration can be NaN before the media has loaded\n        const duration = (this.media || {}).duration || 0;\n\n        // If config duration is funky, use regular duration\n        return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 0);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        this.increaseVolume(-step);\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (is.number(input)) {\n            speed = input;\n        }\n\n        if (!is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        const config = this.config.quality;\n        const options = this.options.quality;\n\n        if (!options.length) {\n            return;\n        }\n\n        let quality = [\n            !is.empty(input) && Number(input),\n            this.storage.get('quality'),\n            config.selected,\n            config.default,\n        ].find(is.number);\n\n        if (!options.includes(quality)) {\n            const value = closest(options, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n            quality = value;\n        }\n\n        // Trigger request event\n        triggerEvent.call(this, this.media, 'qualityrequested', false, { quality });\n\n        // Update config\n        config.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isVideo) {\n            this.debug.warn('Poster can only be set for video');\n            return;\n        }\n\n        ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {number} - Caption index\n     */\n    set currentTrack(input) {\n        captions.set.call(this, input, false);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n        const { toggled, currentTrack } = this.captions;\n        return toggled ? currentTrack : -1;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n        return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        const states = {\n            pip: 'picture-in-picture',\n            inline: 'inline',\n        };\n\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = is.boolean(input) ? input : this.pip === states.inline;\n\n        // Toggle based on current state\n        this.media.webkitSetPresentationMode(toggle ? states.pip : states.inline);\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        return this.media.webkitPresentationMode;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} [toggle] - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n            // Get state before change\n            const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n\n            // Negate the argument if not undefined since adding the class to hides the controls\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\n\n            // Apply and get updated state\n            const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n            // Close menu\n            if (hiding && this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n                controls.toggleMenu.call(this, false);\n            }\n            // Trigger event on change\n            if (hiding !== isHidden) {\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\n                triggerEvent.call(this, this.media, eventName);\n            }\n            return !hiding;\n        }\n        return false;\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        on.call(this, this.elements.container, event, callback);\n    }\n    /**\n     * Add event listeners once\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    once(event, callback) {\n        once.call(this, this.elements.container, event, callback);\n    }\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    removeElement(this.elements.buttons.play);\n                    removeElement(this.elements.captions);\n                    removeElement(this.elements.controls);\n                    removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                unbindListeners.call(this);\n\n                // Replace the container with the original element provided\n                replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n            // Clear timeout\n            clearTimeout(this.timers.loading);\n\n            // Restore native video controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Clean up\n            done();\n        } else if (this.isYouTube) {\n            // Clear timers\n            clearInterval(this.timers.buffering);\n            clearInterval(this.timers.playing);\n\n            // Destroy YouTube API\n            if (this.embed !== null && is.function(this.embed.destroy)) {\n                this.embed.destroy();\n            }\n\n            // Clean up\n            done();\n        } else if (this.isVimeo) {\n            // Destroy Vimeo API\n            // then clean up (wait, to prevent postmessage errors)\n            if (this.embed !== null) {\n                this.embed.unload().then(done);\n            }\n\n            // Vimeo does not always return\n            setTimeout(done, 200);\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {object} options\n     */\n    static setup(selector, options = {}) {\n        let targets = null;\n\n        if (is.string(selector)) {\n            targets = Array.from(document.querySelectorAll(selector));\n        } else if (is.nodeList(selector)) {\n            targets = Array.from(selector);\n        } else if (is.array(selector)) {\n            targets = selector.filter(is.element);\n        }\n\n        if (is.empty(targets)) {\n            return null;\n        }\n\n        return targets.map(t => new Plyr(t, options));\n    }\n}\n\nPlyr.defaults = cloneDeep(defaults);\n\nexport default Plyr;\n"]}